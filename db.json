{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/src/img/1.jpg","path":"src/img/1.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/sugar.ico","path":"images/sugar.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/sword2.ico","path":"images/sword2.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar1.jpg","path":"images/avatar1.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"da6300937bf65b7ca1e446506079d3d497a9ffdb","modified":1526026576000},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1526634884000},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1526634884000},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1526634884000},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1526634884000},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1526634884000},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1526634884000},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1526634884000},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1526634884000},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1526634884000},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1526634884000},{"_id":"themes/next/README.en.md","hash":"fd7a00ae9026fb4f87dd7eed9ce049d0db447140","modified":1526634884000},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1526634884000},{"_id":"themes/next/_config.yml","hash":"bcd2b90cd49fe1b90401e6a500a1657028d314a9","modified":1527665412000},{"_id":"themes/next/bower.json","hash":"63c38f50fb54b25bf5101f566189f9e5b3a6ef0e","modified":1526634884000},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1526634884000},{"_id":"themes/next/package.json","hash":"85a77bafb3d1e958b82e52528b7a95fcd59efda9","modified":1526634884000},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1526024526000},{"_id":"source/_posts/我的第一篇文章.md","hash":"e1acddc5d1ff9f9453376217dbd8e777f8e47b17","modified":1526032584000},{"_id":"source/archives/index.md","hash":"327ba2e2347a33c3c64c091f3ed06b5cc94da69b","modified":1526887972000},{"_id":"source/resources/index.md","hash":"022a2e13d448a407ba62bea25a854f36847e0934","modified":1526887570000},{"_id":"source/tags/index.md","hash":"9875dc31e588182d00dc8e9cfa543a59d3020d3f","modified":1526887870000},{"_id":"themes/next/.git/HEAD","hash":"75173e2dd18a6221ff84742ff53d01ac5c6e04b0","modified":1526634884000},{"_id":"themes/next/.git/config","hash":"1e06409308d4cbf741f720967697b0352a7f6d0a","modified":1526634032000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1526634024000},{"_id":"themes/next/.git/index","hash":"9018f1c03484c455f319336c01ec33cadfe6348b","modified":1526972004000},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1526634884000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1526634884000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"3178cadcec94bfad651bdf320d83946b4e0ac932","modified":1526634884000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"55091b1aab0b472d3f3e239c8d93306c751e4c1c","modified":1526634884000},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1526634884000},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1526634884000},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1526634884000},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1526634884000},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1526634884000},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1526634884000},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1526634884000},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1526634884000},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1526634884000},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1526634884000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1526634884000},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1526634884000},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1526634884000},{"_id":"themes/next/layout/_layout.swig","hash":"8785875368818e22478b3d2d26429c05c660b7e5","modified":1527666076000},{"_id":"themes/next/layout/archive.swig","hash":"c2be7c95af6205c7501a261f2fc9702c57107f89","modified":1526634884000},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1526634884000},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1526634884000},{"_id":"themes/next/layout/page.swig","hash":"dbff0302b4bfabb51556a197bf65190eb30361f0","modified":1526634884000},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1526634884000},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1526634884000},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1526634884000},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1526634884000},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1526634884000},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1526634886000},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1526634886000},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1526634886000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634886000},{"_id":"source/_posts/frame/nuxt.md","hash":"4faa228591728d59e8c954ecde772a48c7528eb0","modified":1526441188000},{"_id":"source/_posts/javascript/ajaxѧϰ.md","hash":"829a6d64d3868495705c52e75505576fabf441f7","modified":1527664634000},{"_id":"source/_posts/node/node.js的第一个应用.md","hash":"6532265bcd9204d90a27eecfa49cc10a5c336ae0","modified":1527498090000},{"_id":"source/_posts/javascript/js工具类封装.md","hash":"5517f63b41fca80e0cb4ed3359612fec738e3c8c","modified":1527066634000},{"_id":"source/archives/index/test.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1526887904000},{"_id":"source/src/img/1.jpg","hash":"24cbac1fdc5d0df8ab3c1bc7cc08e1d30c30859b","modified":1501747588000},{"_id":"source/tags/index/tags.md","hash":"1eb708e6cbac5fc855924b3b035beed55bf4618c","modified":1526887764000},{"_id":"source/_posts/javascript/js事件循环.md","hash":"18dc3e0eb0943a8b41aada8f3d49d6c54d318247","modified":1526440288000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1526634024000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1526634024000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1526634024000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1526634024000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1526634024000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1526634024000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1526634024000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1526634024000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1526634024000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1526634024000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1526634024000},{"_id":"themes/next/.git/logs/HEAD","hash":"a0fc7b9a13fa899ffd88c8f6c7ae23eb356292a9","modified":1526634884000},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526634884000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526634884000},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"396feef13c2f0a2241d70b28a304e6583d3d32f8","modified":1526971360000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1526634884000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0f59a51b5cea3e8a7c078db486626cddc2978622","modified":1526634884000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5b1e91c2f6f88fbecd426cd0727e7b7854c6cc1d","modified":1526634884000},{"_id":"themes/next/layout/_macro/post.swig","hash":"b67ce79039d3acf54b780388fd64e79aa037716f","modified":1526971502000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"7f9c8b88365a07142473633985c92fa401c51578","modified":1526636212000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1526634884000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b8a587931ad390f0eb562b903c871931c331a597","modified":1526972416000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"f8683e4d6563d9e47c9b2eb666635a431b70fc2b","modified":1526979106000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ef9bee85a71d13816afd294ca6bcc4e9c642fd8f","modified":1527495746000},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1526634884000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1526634884000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1526634884000},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1526634884000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1526634884000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1526634884000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1526634884000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1526634884000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1526634884000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1526634884000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1526634884000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1526634884000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1526634884000},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1526634884000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1526634884000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1526634884000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1526634884000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1526634884000},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1526634884000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1526634884000},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1526634884000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1526634884000},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1526634886000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1526634886000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1526634886000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1526634886000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1526634886000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1526634886000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1526634886000},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1526634886000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1526634886000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526634886000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526634886000},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1526634886000},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1526634886000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526634886000},{"_id":"themes/next/source/images/sugar.ico","hash":"673d41fef36645cf38ecf189d1f8de6e59a02ac9","modified":1527055612000},{"_id":"themes/next/source/images/sword2.ico","hash":"f751d88f50cbbd6826b826a9001a3e093fe834a7","modified":1527051766000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634884000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634884000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634884000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634884000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634884000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634886000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526634886000},{"_id":"themes/next/source/images/avatar1.jpg","hash":"ce17aa7ee9ae6eba6f4a4ee11042a6b07d4d3b50","modified":1527493030000},{"_id":"themes/next/source/images/avatar.jpg","hash":"77a44b4406906313882ccddac11f384b51012734","modified":1527493196000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1526634884000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1526634884000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1526634884000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1526634884000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1526634884000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1526634884000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1526634884000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1526634884000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1526634884000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1526634884000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526634884000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1526634884000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1526634884000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1526634884000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1526634884000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1526634884000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1526634884000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"be2aaeb8f05979e2ba501248480d5294256d61f2","modified":1526634884000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1526634884000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1526634884000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1526634884000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1526634884000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1526634884000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1526634884000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"5aeedde417ff136c5bb68e9c4921236e606e87dc","modified":1527055572000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1526634884000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"bf009e85212749405c27d89b49f401911355ecc7","modified":1526634884000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1526634884000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"2a4e844dec690365774c2f6e8984706fee39ea63","modified":1526634886000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1526634886000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"89f88b9c9a191dd980f799fc36b83b63290d3ac9","modified":1526634886000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a627633d3bb70b8501572b18037def478beb7017","modified":1526634886000},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1526634886000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1526634886000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"96c8b5fe1999de1b3a46730d9812787dfcd65884","modified":1526634886000},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1526634886000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1526634886000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1526634886000},{"_id":"themes/next/source/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1526970970000},{"_id":"themes/next/source/js/src/motion.js","hash":"dda8c76fce91d7f140c06de2583ba806810f12c2","modified":1526634886000},{"_id":"themes/next/source/js/src/post-details.js","hash":"50fa390554f0fb467d8eb84ac8eff2cffb13fe67","modified":1526634886000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1526634886000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1526634886000},{"_id":"themes/next/source/js/src/utils.js","hash":"f90c7611dc665b5e321cb81c0bd689445bab438a","modified":1526634886000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526634886000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526634886000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1526634886000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1526634886000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1526634886000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1526634886000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1526634886000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1526634886000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1526634886000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1526634886000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1526634886000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1526634886000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1526634886000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526634886000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1526634886000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1526634886000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1526634886000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1526634886000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1526634886000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1526634886000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1526634886000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1526634886000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1526634886000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1526634886000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1526634884000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1526634884000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b0e2a0e27a32f72cb283fe4b33d010d485113379","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"ad3e943abe05f2b30d2b5ab02f78a858cc7edd77","modified":1526972302000},{"_id":"themes/next/source/css/_common/components/gitment.styl","hash":"854c4002af8a1fab99754ba9f552acc7cd7c4772","modified":1526972288000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1526634884000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1526634884000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"eec22651977ea25b5e65e8cb1b4906eef69ec588","modified":1526634884000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1526634884000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a45ed506274f655b11995c408cc566b16dada79","modified":1526634884000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1526634884000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1526634884000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1526634884000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a509016ac0227a1903d7f0ca3a825cf9ac7fde33","modified":1526634884000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1526634884000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1526634884000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1526634884000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1526634884000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"7a874246ab4c9cee1b96d184fa5bca2230299f90","modified":1527045098000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1526634886000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1526634886000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1526634886000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1526634886000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1526634886000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526634886000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1526634886000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"a9ed283589d4785ab43093753e05cb615f466de5","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"7e76c27c4ad3222ea6b89f82ac9551c81ef11abd","modified":1527047750000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"78d492dac5214f73625a2b761d7cbd450f7dcb7a","modified":1526971038000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"5f3510419161ec22ca88cce6a181ddad61de9e86","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"ab7dfac697bb3f687e4abf87f38e474b8ea89fd8","modified":1526635670000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e00d9a0bdf35ffc0a7fa387fa294b953c2d28fc","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"962b654f8f7cbd18a298126a403d236ed4540516","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1526634884000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"37e406ec42b7a53c72395bdbaa434270019e7179","modified":1526634884000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526634886000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526634886000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1526634886000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526634886000},{"_id":"themes/next/.git/objects/pack/pack-0df40285cfd6ba61cd77b9db468522fa4a3564d9.idx","hash":"9bd7aefeb87914ecfb289a7b609bfefc37dd28e3","modified":1526634884000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1526634886000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1526634886000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1526634886000},{"_id":"themes/next/.git/objects/pack/pack-0df40285cfd6ba61cd77b9db468522fa4a3564d9.pack","hash":"b7b9af2417976ae7eab57dc0584d64df5654085a","modified":1526634884000}],"Category":[],"Data":[],"Page":[{"title":"archives","date":"2014-12-21T16:00:00.000Z","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2014-12-22 \ntype: \"archives\"\n---","updated":"2018-05-21T07:32:52.000Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cji0akoqa0001kn3o5yfs264v","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"resources","date":"2018-05-21T07:26:09.000Z","_content":"","source":"resources/index.md","raw":"---\ntitle: resources\ndate: 2018-05-21 15:26:09\n---\n","updated":"2018-05-21T07:26:10.000Z","path":"resources/index.html","comments":1,"layout":"page","_id":"cji0akoqc0003kn3o47fyrxlp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2014-12-21T16:00:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2014-12-22 \ntype: \"tags\"\n---","updated":"2018-05-21T07:31:10.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cji0akoqe0004kn3obu66vmrz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"archives/index/test.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","date":"2018-06-04T13:25:28.000Z","updated":"2018-05-21T07:31:44.000Z","path":"archives/index/test.html","comments":1,"layout":"page","_id":"cji0akoy40008kn3oir6sk464","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Tagcloud","date":"2014-12-21T16:00:00.000Z","type":"tags","tags":["前端框架学习"],"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"tags/index/tags.md","raw":"---\ntitle: Tagcloud\ndate: 2014-12-22 \ntype: \"tags\"\ntags: \n    - 前端框架学习\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","updated":"2018-05-21T07:29:24.000Z","path":"tags/index/tags.html","comments":1,"layout":"page","_id":"cji0akoy7000akn3owflderi2","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-05-11T07:42:06.000Z","updated":"2018-05-11T07:42:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji0akoq30000kn3o4uk2qrag","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"我的第一篇文章","date":"2018-05-11T07:44:29.000Z","_content":"### 段落\n\n第一自然段\n\n第二自然段\n\n注意：换行不是分段的标识，空行才是\n\n### 标题\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n#### 四级标题\n\n##### 五级标题\n\n###### 六级标题\n\n注：# 和后续内容之间应放置一个空格\n\n### 列表\n\n(1) 有序列表\n\n1. 打开冰箱门\n\n2. 把大象放进冰箱\n\n3. 关上冰箱门\n\n(2) 无序列表\n\n* 吃饭\n\n* 睡觉\n\n* 打豆豆\n\n注意事项：\n\n    无序列表的项目符号可使用 *,+,- 效果是相同的。\n    列表与后续内容之间需要一个空行隔开，即：列表是一个段落\n    列表允许多层次嵌套\n    可以在项目中包含段落，只需将段落前添加一个 tab 或 4 个空格\n\n### 分割线\n\n语法：使用 3 个连续的 * 即可得到一个分割线\n\n***\n\n### 引用\n\n语法：在行头加上 > 即可。\n\n> 这里是一段引用\n\n    大于号 和 文字必须有一个空格\n    可以在每行之前加 > ，也可以在段落之前加 1 个 >\n    引用内部可以使用其他 Markdown 标记\n    引用内部可以添加新的引用，只需再加一个大于号\n\n### 行内标记\n\n(1) 强调文字\n\n    斜体\n    语法：使用前后各 1 个 *(或_) 包含的文字是 斜体 文字\n    *斜体*, _斜体_\n\n    粗体\n    语法：使用前后各 2 个 *(或_) 包含的文字是 粗体 文字\n    **粗体**，__粗体__\n\n    删除文字\n    语法：使用前后各 2 个 ~ 包含的文字是删除文字\n    ~~删除~~\n\n    粗斜体\n    语法：在**(或__)中嵌套_ (或*) 或 在_(或*)中嵌套**(或__)即可得到 粗斜体。\n    _**粗斜体**_， *__粗斜体__*\n    **_粗斜体_**， __*粗斜体*__\n\n(2) 图片与链接\n\n    1.图片：行内图片、引用图片\n        1> 行内图片\n        图片和图片地址写在一起。\n        语法： ![图片标题](图片url)\n        ![史努比](http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![史努比](http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n        2> 引用图片\n        图片和图片地址分开书写。\n        语法：\n        ![图片标题][图片id]\n        [图片id]:图片url\n        ![史努比][snoopy]\n        [snoopy]: http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n\n![史努比][snoopy]\n\n[snoopy]: http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n\n    2. 链接：行内链接、链接引用、自动链接\n        1> 行内链接\n        语法：[链接名称](链接地址 url \"链接title\")\n        示例代码\n        [新浪](http://www.sina.com.cn \"新浪主页\")\n\n[新浪](http://www.sina.com.cn \"新浪主页\")\n\n    注意事项\n    双引号中的内容是链接的 title (目前汉字显示不正确)\n\n        2> 链接引用\n        一种链接和地址分离的方式。\n        [链接名称][链接id]\n        [链接id]:链接 url 地址 \"链接 title\"\n        示例代码\n        根据 [雅虎][yahoo] 的调查，希拉里将当选；根据 [谷歌][google] 的调查，川普将当选。\n\n        [yahoo]: http://search.yahoo.com/ \"Yahoo Search\"\n        [google]: http://google.com/ \"Google\"\n根据 [雅虎][yahoo] 的调查，希拉里将当选；根据 [谷歌][google] 的调查，川普将当选。\n\n[yahoo]: http://search.yahoo.com/ \"Yahoo Search\"\n[google]: http://google.com/ \"Google\"\n\n    注意事项\n    链接 id 可使用字母、数字、空格，但不区分大小写\n\n    3.脚注 -- 为名词提供注释，注释将显示在文章末尾。\n    语法：\n    待解释文字[^脚注 id]\n    [^脚注 id]:注释内容\n    示例代码\n    Hello程序[^hello]\n    [^hello]:即：Hello, world 程序\nHello程序[^hello]\n[^hello]:即：Hello, world 程序\n\n    注意事项\n    脚注 id 必须唯一\n    无论脚注 id 如何起名，显示时一律标为数字，并且按出现顺序排列\n\n### 双标记\n\n既可作为区块标记又可作为行内标记的标记。\n\n1. 代码块\n\n    1) 行内代码块\n    语法：使用两个 ` 将代码包含起来\n\n    示例代码\n\n    在 Java 输出 Hello, world ：`System.out.print(\"Hello, World!\");`\n\n在 Java 输出 Hello, world ：`System.out.print(\"Hello, World!\");`\n\n    2) 多行代码块\n    语法：只需要每行都缩进 4 个空格即可，或者使用```框起来。\n\n    示例代码 1 (行前4个空格)\n\n    // JQuery 的 Hello, world\n    $(function(){\n    alert(\"Hello, world!\")\n    });\n效果(行前4个空格)\n\n// JQuery 的 Hello, world\n$(function(){\n    alert(\"Hello, world!\")\n});\n\n示例代码 2 (```)\n\n```\n// JQuery 的 Hello, world\n$(function(){\nalert(\"Hello, world!\")\n});\n```\n\n效果 (```)\n\n// JQuery 的 Hello, world\n$(function(){\n    alert(\"Hello, world!\")\n});\n    注意事项：\n\n    在代码区块内部，\", <>,& 将会自动转换为转义字符\n\n    在代码区块内部，Markdown 标记将保持原样，即：星号(*)就是星号(*)，不被解释为特殊标记，这样就可以不能继续使用 Markdown 语法了\n\n### 表格\n\n语法：\n\n第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。\n\n列于列之间用管道符 | 隔开。表格每一行两边的管道符可省略。\n\n第二行还可以为不同的列指定对齐方向。标题默认为居中对齐，内容默认为左对齐；在 - 左边加上 : 就是左对齐；在 - 右边加上 : 就是右对齐；在 - 两边都加上 : 就是居中对齐。\n\n示例代码\n\n    姓名|语文成绩|数学成绩|总成绩\n    ---|:---|:---:|---:\n    喜羊羊|100|120|220\n姓名|语文成绩|数学成绩|总成绩\n---|:---|:---:|---:\n喜羊羊|100|120|220\n\n### 其他问题\n\n1. Markdown 与 HTML 的关系\n\nHTML 是一种发布的格式，Markdown 是一种书写的格式。\n\nMarkdown 的格式语法只涵盖纯文本可以涵盖的范围。\n\n在 Markdown 中可直接使用 HTML 标签，但需要注意\n\n对于 HTML 区块元素――如 div、table、pre、p 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符(tab)或空格来缩进\n\nHTML 的行内标签——如 span、cite、del 可以在 Markdown 的段落、列表或是标题里随意使用。\n\n在 HTML 的区块标签中的 Markdown 标签是没有效果的\n\n2. 特殊字符的自动转换\n\n在 HTML 文件中，有两个字符需要特殊处理： < 和 &，必须使用转义字符：& lt ; 和 & amp ;\n\nMarkdown 中，你可以自由的书写 < 和 &，编辑器会智能的进行判断：当这些符号用于 HTML 标签中，他们将保留原型；当他们单独使用时，将会转换为字符实体。\n\n在代码块中，它们将统统被转换为字符实体，即：原样显示。\n\n3. Markdown 中的转义字符\n\nMarkdown 中，如需显示有特定意义的符号，如：*,# 等，可使用 反斜杠 \\ 进行转义。可对如下字符进行转义：\n\n*\n\n`\n\n*\n_\n\n{}\n\n()\n\n#\n\n+\n\n-\n\n.\n\n!\n\n\n作者：白老师课堂\n链接：https://www.jianshu.com/p/4e3cae082b47\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","source":"_posts/我的第一篇文章.md","raw":"---\ntitle: 我的第一篇文章\ndate: 2018-05-11 15:44:29\ntags: markdown 语法\n---\n### 段落\n\n第一自然段\n\n第二自然段\n\n注意：换行不是分段的标识，空行才是\n\n### 标题\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n#### 四级标题\n\n##### 五级标题\n\n###### 六级标题\n\n注：# 和后续内容之间应放置一个空格\n\n### 列表\n\n(1) 有序列表\n\n1. 打开冰箱门\n\n2. 把大象放进冰箱\n\n3. 关上冰箱门\n\n(2) 无序列表\n\n* 吃饭\n\n* 睡觉\n\n* 打豆豆\n\n注意事项：\n\n    无序列表的项目符号可使用 *,+,- 效果是相同的。\n    列表与后续内容之间需要一个空行隔开，即：列表是一个段落\n    列表允许多层次嵌套\n    可以在项目中包含段落，只需将段落前添加一个 tab 或 4 个空格\n\n### 分割线\n\n语法：使用 3 个连续的 * 即可得到一个分割线\n\n***\n\n### 引用\n\n语法：在行头加上 > 即可。\n\n> 这里是一段引用\n\n    大于号 和 文字必须有一个空格\n    可以在每行之前加 > ，也可以在段落之前加 1 个 >\n    引用内部可以使用其他 Markdown 标记\n    引用内部可以添加新的引用，只需再加一个大于号\n\n### 行内标记\n\n(1) 强调文字\n\n    斜体\n    语法：使用前后各 1 个 *(或_) 包含的文字是 斜体 文字\n    *斜体*, _斜体_\n\n    粗体\n    语法：使用前后各 2 个 *(或_) 包含的文字是 粗体 文字\n    **粗体**，__粗体__\n\n    删除文字\n    语法：使用前后各 2 个 ~ 包含的文字是删除文字\n    ~~删除~~\n\n    粗斜体\n    语法：在**(或__)中嵌套_ (或*) 或 在_(或*)中嵌套**(或__)即可得到 粗斜体。\n    _**粗斜体**_， *__粗斜体__*\n    **_粗斜体_**， __*粗斜体*__\n\n(2) 图片与链接\n\n    1.图片：行内图片、引用图片\n        1> 行内图片\n        图片和图片地址写在一起。\n        语法： ![图片标题](图片url)\n        ![史努比](http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![史努比](http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n        2> 引用图片\n        图片和图片地址分开书写。\n        语法：\n        ![图片标题][图片id]\n        [图片id]:图片url\n        ![史努比][snoopy]\n        [snoopy]: http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n\n![史努比][snoopy]\n\n[snoopy]: http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n\n    2. 链接：行内链接、链接引用、自动链接\n        1> 行内链接\n        语法：[链接名称](链接地址 url \"链接title\")\n        示例代码\n        [新浪](http://www.sina.com.cn \"新浪主页\")\n\n[新浪](http://www.sina.com.cn \"新浪主页\")\n\n    注意事项\n    双引号中的内容是链接的 title (目前汉字显示不正确)\n\n        2> 链接引用\n        一种链接和地址分离的方式。\n        [链接名称][链接id]\n        [链接id]:链接 url 地址 \"链接 title\"\n        示例代码\n        根据 [雅虎][yahoo] 的调查，希拉里将当选；根据 [谷歌][google] 的调查，川普将当选。\n\n        [yahoo]: http://search.yahoo.com/ \"Yahoo Search\"\n        [google]: http://google.com/ \"Google\"\n根据 [雅虎][yahoo] 的调查，希拉里将当选；根据 [谷歌][google] 的调查，川普将当选。\n\n[yahoo]: http://search.yahoo.com/ \"Yahoo Search\"\n[google]: http://google.com/ \"Google\"\n\n    注意事项\n    链接 id 可使用字母、数字、空格，但不区分大小写\n\n    3.脚注 -- 为名词提供注释，注释将显示在文章末尾。\n    语法：\n    待解释文字[^脚注 id]\n    [^脚注 id]:注释内容\n    示例代码\n    Hello程序[^hello]\n    [^hello]:即：Hello, world 程序\nHello程序[^hello]\n[^hello]:即：Hello, world 程序\n\n    注意事项\n    脚注 id 必须唯一\n    无论脚注 id 如何起名，显示时一律标为数字，并且按出现顺序排列\n\n### 双标记\n\n既可作为区块标记又可作为行内标记的标记。\n\n1. 代码块\n\n    1) 行内代码块\n    语法：使用两个 ` 将代码包含起来\n\n    示例代码\n\n    在 Java 输出 Hello, world ：`System.out.print(\"Hello, World!\");`\n\n在 Java 输出 Hello, world ：`System.out.print(\"Hello, World!\");`\n\n    2) 多行代码块\n    语法：只需要每行都缩进 4 个空格即可，或者使用```框起来。\n\n    示例代码 1 (行前4个空格)\n\n    // JQuery 的 Hello, world\n    $(function(){\n    alert(\"Hello, world!\")\n    });\n效果(行前4个空格)\n\n// JQuery 的 Hello, world\n$(function(){\n    alert(\"Hello, world!\")\n});\n\n示例代码 2 (```)\n\n```\n// JQuery 的 Hello, world\n$(function(){\nalert(\"Hello, world!\")\n});\n```\n\n效果 (```)\n\n// JQuery 的 Hello, world\n$(function(){\n    alert(\"Hello, world!\")\n});\n    注意事项：\n\n    在代码区块内部，\", <>,& 将会自动转换为转义字符\n\n    在代码区块内部，Markdown 标记将保持原样，即：星号(*)就是星号(*)，不被解释为特殊标记，这样就可以不能继续使用 Markdown 语法了\n\n### 表格\n\n语法：\n\n第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。\n\n列于列之间用管道符 | 隔开。表格每一行两边的管道符可省略。\n\n第二行还可以为不同的列指定对齐方向。标题默认为居中对齐，内容默认为左对齐；在 - 左边加上 : 就是左对齐；在 - 右边加上 : 就是右对齐；在 - 两边都加上 : 就是居中对齐。\n\n示例代码\n\n    姓名|语文成绩|数学成绩|总成绩\n    ---|:---|:---:|---:\n    喜羊羊|100|120|220\n姓名|语文成绩|数学成绩|总成绩\n---|:---|:---:|---:\n喜羊羊|100|120|220\n\n### 其他问题\n\n1. Markdown 与 HTML 的关系\n\nHTML 是一种发布的格式，Markdown 是一种书写的格式。\n\nMarkdown 的格式语法只涵盖纯文本可以涵盖的范围。\n\n在 Markdown 中可直接使用 HTML 标签，但需要注意\n\n对于 HTML 区块元素――如 div、table、pre、p 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符(tab)或空格来缩进\n\nHTML 的行内标签——如 span、cite、del 可以在 Markdown 的段落、列表或是标题里随意使用。\n\n在 HTML 的区块标签中的 Markdown 标签是没有效果的\n\n2. 特殊字符的自动转换\n\n在 HTML 文件中，有两个字符需要特殊处理： < 和 &，必须使用转义字符：& lt ; 和 & amp ;\n\nMarkdown 中，你可以自由的书写 < 和 &，编辑器会智能的进行判断：当这些符号用于 HTML 标签中，他们将保留原型；当他们单独使用时，将会转换为字符实体。\n\n在代码块中，它们将统统被转换为字符实体，即：原样显示。\n\n3. Markdown 中的转义字符\n\nMarkdown 中，如需显示有特定意义的符号，如：*,# 等，可使用 反斜杠 \\ 进行转义。可对如下字符进行转义：\n\n*\n\n`\n\n*\n_\n\n{}\n\n()\n\n#\n\n+\n\n-\n\n.\n\n!\n\n\n作者：白老师课堂\n链接：https://www.jianshu.com/p/4e3cae082b47\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","slug":"我的第一篇文章","published":1,"updated":"2018-05-11T09:56:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji0akoqa0002kn3o6z440paz","content":"<h3 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h3><p>第一自然段</p>\n<p>第二自然段</p>\n<p>注意：换行不是分段的标识，空行才是</p>\n<h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><p>注：# 和后续内容之间应放置一个空格</p>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>(1) 有序列表</p>\n<ol>\n<li><p>打开冰箱门</p>\n</li>\n<li><p>把大象放进冰箱</p>\n</li>\n<li><p>关上冰箱门</p>\n</li>\n</ol>\n<p>(2) 无序列表</p>\n<ul>\n<li><p>吃饭</p>\n</li>\n<li><p>睡觉</p>\n</li>\n<li><p>打豆豆</p>\n</li>\n</ul>\n<p>注意事项：</p>\n<pre><code>无序列表的项目符号可使用 *,+,- 效果是相同的。\n列表与后续内容之间需要一个空行隔开，即：列表是一个段落\n列表允许多层次嵌套\n可以在项目中包含段落，只需将段落前添加一个 tab 或 4 个空格\n</code></pre><h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><p>语法：使用 3 个连续的 * 即可得到一个分割线</p>\n<hr>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p>语法：在行头加上 &gt; 即可。</p>\n<blockquote>\n<p>这里是一段引用</p>\n</blockquote>\n<pre><code>大于号 和 文字必须有一个空格\n可以在每行之前加 &gt; ，也可以在段落之前加 1 个 &gt;\n引用内部可以使用其他 Markdown 标记\n引用内部可以添加新的引用，只需再加一个大于号\n</code></pre><h3 id=\"行内标记\"><a href=\"#行内标记\" class=\"headerlink\" title=\"行内标记\"></a>行内标记</h3><p>(1) 强调文字</p>\n<pre><code>斜体\n语法：使用前后各 1 个 *(或_) 包含的文字是 斜体 文字\n*斜体*, _斜体_\n\n粗体\n语法：使用前后各 2 个 *(或_) 包含的文字是 粗体 文字\n**粗体**，__粗体__\n\n删除文字\n语法：使用前后各 2 个 ~ 包含的文字是删除文字\n~~删除~~\n\n粗斜体\n语法：在**(或__)中嵌套_ (或*) 或 在_(或*)中嵌套**(或__)即可得到 粗斜体。\n_**粗斜体**_， *__粗斜体__*\n**_粗斜体_**， __*粗斜体*__\n</code></pre><p>(2) 图片与链接</p>\n<pre><code>1.图片：行内图片、引用图片\n    1&gt; 行内图片\n    图片和图片地址写在一起。\n    语法： ![图片标题](图片url)\n    ![史努比](http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n</code></pre><p><img src=\"http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"史努比\"></p>\n<pre><code>2&gt; 引用图片\n图片和图片地址分开书写。\n语法：\n![图片标题][图片id]\n[图片id]:图片url\n![史努比][snoopy]\n[snoopy]: http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n</code></pre><p><img src=\"http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"史努比\"></p>\n<pre><code>2. 链接：行内链接、链接引用、自动链接\n    1&gt; 行内链接\n    语法：[链接名称](链接地址 url &quot;链接title&quot;)\n    示例代码\n    [新浪](http://www.sina.com.cn &quot;新浪主页&quot;)\n</code></pre><p><a href=\"http://www.sina.com.cn\" title=\"新浪主页\" target=\"_blank\" rel=\"noopener\">新浪</a></p>\n<pre><code>注意事项\n双引号中的内容是链接的 title (目前汉字显示不正确)\n\n    2&gt; 链接引用\n    一种链接和地址分离的方式。\n    [链接名称][链接id]\n    [链接id]:链接 url 地址 &quot;链接 title&quot;\n    示例代码\n    根据 [雅虎][yahoo] 的调查，希拉里将当选；根据 [谷歌][google] 的调查，川普将当选。\n\n    [yahoo]: http://search.yahoo.com/ &quot;Yahoo Search&quot;\n    [google]: http://google.com/ &quot;Google&quot;\n</code></pre><p>根据 <a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\" target=\"_blank\" rel=\"noopener\">雅虎</a> 的调查，希拉里将当选；根据 <a href=\"http://google.com/\" title=\"Google\" target=\"_blank\" rel=\"noopener\">谷歌</a> 的调查，川普将当选。</p>\n<pre><code>注意事项\n链接 id 可使用字母、数字、空格，但不区分大小写\n\n3.脚注 -- 为名词提供注释，注释将显示在文章末尾。\n语法：\n待解释文字[^脚注 id]\n[^脚注 id]:注释内容\n示例代码\nHello程序[^hello]\n[^hello]:即：Hello, world 程序\n</code></pre><p>Hello程序[^hello]<br>[^hello]:即：Hello, world 程序</p>\n<pre><code>注意事项\n脚注 id 必须唯一\n无论脚注 id 如何起名，显示时一律标为数字，并且按出现顺序排列\n</code></pre><h3 id=\"双标记\"><a href=\"#双标记\" class=\"headerlink\" title=\"双标记\"></a>双标记</h3><p>既可作为区块标记又可作为行内标记的标记。</p>\n<ol>\n<li><p>代码块</p>\n<p> 1) 行内代码块<br> 语法：使用两个 ` 将代码包含起来</p>\n<p> 示例代码</p>\n<p> 在 Java 输出 Hello, world ：<code>System.out.print(&quot;Hello, World!&quot;);</code></p>\n</li>\n</ol>\n<p>在 Java 输出 Hello, world ：<code>System.out.print(&quot;Hello, World!&quot;);</code></p>\n<pre><code>2) 多行代码块\n语法：只需要每行都缩进 4 个空格即可，或者使用<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    示例代码 1 (行前4个空格)</span><br><span class=\"line\"></span><br><span class=\"line\">    // JQuery 的 Hello, world</span><br><span class=\"line\">    $(function()&#123;</span><br><span class=\"line\">    alert(&quot;Hello, world!&quot;)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">效果(行前4个空格)</span><br><span class=\"line\"></span><br><span class=\"line\">// JQuery 的 Hello, world</span><br><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">    alert(&quot;Hello, world!&quot;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">示例代码 2 (```)</span><br></pre></td></tr></table></figure>\n</code></pre><p>// JQuery 的 Hello, world<br>$(function(){<br>alert(“Hello, world!”)<br>});<br><code>`</code></p>\n<p>效果 (<code>`</code>)</p>\n<p>// JQuery 的 Hello, world<br>$(function(){<br>    alert(“Hello, world!”)<br>});<br>    注意事项：</p>\n<pre><code>在代码区块内部，&quot;, &lt;&gt;,&amp; 将会自动转换为转义字符\n\n在代码区块内部，Markdown 标记将保持原样，即：星号(*)就是星号(*)，不被解释为特殊标记，这样就可以不能继续使用 Markdown 语法了\n</code></pre><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>语法：</p>\n<p>第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。</p>\n<p>列于列之间用管道符 | 隔开。表格每一行两边的管道符可省略。</p>\n<p>第二行还可以为不同的列指定对齐方向。标题默认为居中对齐，内容默认为左对齐；在 - 左边加上 : 就是左对齐；在 - 右边加上 : 就是右对齐；在 - 两边都加上 : 就是居中对齐。</p>\n<p>示例代码</p>\n<pre><code>姓名|语文成绩|数学成绩|总成绩\n---|:---|:---:|---:\n喜羊羊|100|120|220\n</code></pre><table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:left\">语文成绩</th>\n<th style=\"text-align:center\">数学成绩</th>\n<th style=\"text-align:right\">总成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>喜羊羊</td>\n<td style=\"text-align:left\">100</td>\n<td style=\"text-align:center\">120</td>\n<td style=\"text-align:right\">220</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><ol>\n<li>Markdown 与 HTML 的关系</li>\n</ol>\n<p>HTML 是一种发布的格式，Markdown 是一种书写的格式。</p>\n<p>Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p>\n<p>在 Markdown 中可直接使用 HTML 标签，但需要注意</p>\n<p>对于 HTML 区块元素――如 div、table、pre、p 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符(tab)或空格来缩进</p>\n<p>HTML 的行内标签——如 span、cite、del 可以在 Markdown 的段落、列表或是标题里随意使用。</p>\n<p>在 HTML 的区块标签中的 Markdown 标签是没有效果的</p>\n<ol start=\"2\">\n<li>特殊字符的自动转换</li>\n</ol>\n<p>在 HTML 文件中，有两个字符需要特殊处理： &lt; 和 &amp;，必须使用转义字符：&amp; lt ; 和 &amp; amp ;</p>\n<p>Markdown 中，你可以自由的书写 &lt; 和 &amp;，编辑器会智能的进行判断：当这些符号用于 HTML 标签中，他们将保留原型；当他们单独使用时，将会转换为字符实体。</p>\n<p>在代码块中，它们将统统被转换为字符实体，即：原样显示。</p>\n<ol start=\"3\">\n<li>Markdown 中的转义字符</li>\n</ol>\n<p>Markdown 中，如需显示有特定意义的符号，如：*,# 等，可使用 反斜杠 \\ 进行转义。可对如下字符进行转义：</p>\n<p>*</p>\n<p>`</p>\n<p>*<br>_</p>\n<p>{}</p>\n<p>()</p>\n<p>#</p>\n<p>+</p>\n<p>-</p>\n<p>.</p>\n<p>!</p>\n<p>作者：白老师课堂<br>链接：<a href=\"https://www.jianshu.com/p/4e3cae082b47\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/4e3cae082b47</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h3><p>第一自然段</p>\n<p>第二自然段</p>\n<p>注意：换行不是分段的标识，空行才是</p>\n<h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><p>注：# 和后续内容之间应放置一个空格</p>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>(1) 有序列表</p>\n<ol>\n<li><p>打开冰箱门</p>\n</li>\n<li><p>把大象放进冰箱</p>\n</li>\n<li><p>关上冰箱门</p>\n</li>\n</ol>\n<p>(2) 无序列表</p>\n<ul>\n<li><p>吃饭</p>\n</li>\n<li><p>睡觉</p>\n</li>\n<li><p>打豆豆</p>\n</li>\n</ul>\n<p>注意事项：</p>\n<pre><code>无序列表的项目符号可使用 *,+,- 效果是相同的。\n列表与后续内容之间需要一个空行隔开，即：列表是一个段落\n列表允许多层次嵌套\n可以在项目中包含段落，只需将段落前添加一个 tab 或 4 个空格\n</code></pre><h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><p>语法：使用 3 个连续的 * 即可得到一个分割线</p>\n<hr>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p>语法：在行头加上 &gt; 即可。</p>\n<blockquote>\n<p>这里是一段引用</p>\n</blockquote>\n<pre><code>大于号 和 文字必须有一个空格\n可以在每行之前加 &gt; ，也可以在段落之前加 1 个 &gt;\n引用内部可以使用其他 Markdown 标记\n引用内部可以添加新的引用，只需再加一个大于号\n</code></pre><h3 id=\"行内标记\"><a href=\"#行内标记\" class=\"headerlink\" title=\"行内标记\"></a>行内标记</h3><p>(1) 强调文字</p>\n<pre><code>斜体\n语法：使用前后各 1 个 *(或_) 包含的文字是 斜体 文字\n*斜体*, _斜体_\n\n粗体\n语法：使用前后各 2 个 *(或_) 包含的文字是 粗体 文字\n**粗体**，__粗体__\n\n删除文字\n语法：使用前后各 2 个 ~ 包含的文字是删除文字\n~~删除~~\n\n粗斜体\n语法：在**(或__)中嵌套_ (或*) 或 在_(或*)中嵌套**(或__)即可得到 粗斜体。\n_**粗斜体**_， *__粗斜体__*\n**_粗斜体_**， __*粗斜体*__\n</code></pre><p>(2) 图片与链接</p>\n<pre><code>1.图片：行内图片、引用图片\n    1&gt; 行内图片\n    图片和图片地址写在一起。\n    语法： ![图片标题](图片url)\n    ![史努比](http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n</code></pre><p><img src=\"http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"史努比\"></p>\n<pre><code>2&gt; 引用图片\n图片和图片地址分开书写。\n语法：\n![图片标题][图片id]\n[图片id]:图片url\n![史努比][snoopy]\n[snoopy]: http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n</code></pre><p><img src=\"http://upload-images.jianshu.io/upload_images/2779565-13b3439b110c16bf.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"史努比\"></p>\n<pre><code>2. 链接：行内链接、链接引用、自动链接\n    1&gt; 行内链接\n    语法：[链接名称](链接地址 url &quot;链接title&quot;)\n    示例代码\n    [新浪](http://www.sina.com.cn &quot;新浪主页&quot;)\n</code></pre><p><a href=\"http://www.sina.com.cn\" title=\"新浪主页\" target=\"_blank\" rel=\"noopener\">新浪</a></p>\n<pre><code>注意事项\n双引号中的内容是链接的 title (目前汉字显示不正确)\n\n    2&gt; 链接引用\n    一种链接和地址分离的方式。\n    [链接名称][链接id]\n    [链接id]:链接 url 地址 &quot;链接 title&quot;\n    示例代码\n    根据 [雅虎][yahoo] 的调查，希拉里将当选；根据 [谷歌][google] 的调查，川普将当选。\n\n    [yahoo]: http://search.yahoo.com/ &quot;Yahoo Search&quot;\n    [google]: http://google.com/ &quot;Google&quot;\n</code></pre><p>根据 <a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\" target=\"_blank\" rel=\"noopener\">雅虎</a> 的调查，希拉里将当选；根据 <a href=\"http://google.com/\" title=\"Google\" target=\"_blank\" rel=\"noopener\">谷歌</a> 的调查，川普将当选。</p>\n<pre><code>注意事项\n链接 id 可使用字母、数字、空格，但不区分大小写\n\n3.脚注 -- 为名词提供注释，注释将显示在文章末尾。\n语法：\n待解释文字[^脚注 id]\n[^脚注 id]:注释内容\n示例代码\nHello程序[^hello]\n[^hello]:即：Hello, world 程序\n</code></pre><p>Hello程序[^hello]<br>[^hello]:即：Hello, world 程序</p>\n<pre><code>注意事项\n脚注 id 必须唯一\n无论脚注 id 如何起名，显示时一律标为数字，并且按出现顺序排列\n</code></pre><h3 id=\"双标记\"><a href=\"#双标记\" class=\"headerlink\" title=\"双标记\"></a>双标记</h3><p>既可作为区块标记又可作为行内标记的标记。</p>\n<ol>\n<li><p>代码块</p>\n<p> 1) 行内代码块<br> 语法：使用两个 ` 将代码包含起来</p>\n<p> 示例代码</p>\n<p> 在 Java 输出 Hello, world ：<code>System.out.print(&quot;Hello, World!&quot;);</code></p>\n</li>\n</ol>\n<p>在 Java 输出 Hello, world ：<code>System.out.print(&quot;Hello, World!&quot;);</code></p>\n<pre><code>2) 多行代码块\n语法：只需要每行都缩进 4 个空格即可，或者使用<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    示例代码 1 (行前4个空格)</span><br><span class=\"line\"></span><br><span class=\"line\">    // JQuery 的 Hello, world</span><br><span class=\"line\">    $(function()&#123;</span><br><span class=\"line\">    alert(&quot;Hello, world!&quot;)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">效果(行前4个空格)</span><br><span class=\"line\"></span><br><span class=\"line\">// JQuery 的 Hello, world</span><br><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">    alert(&quot;Hello, world!&quot;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">示例代码 2 (```)</span><br></pre></td></tr></table></figure>\n</code></pre><p>// JQuery 的 Hello, world<br>$(function(){<br>alert(“Hello, world!”)<br>});<br><code>`</code></p>\n<p>效果 (<code>`</code>)</p>\n<p>// JQuery 的 Hello, world<br>$(function(){<br>    alert(“Hello, world!”)<br>});<br>    注意事项：</p>\n<pre><code>在代码区块内部，&quot;, &lt;&gt;,&amp; 将会自动转换为转义字符\n\n在代码区块内部，Markdown 标记将保持原样，即：星号(*)就是星号(*)，不被解释为特殊标记，这样就可以不能继续使用 Markdown 语法了\n</code></pre><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>语法：</p>\n<p>第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。</p>\n<p>列于列之间用管道符 | 隔开。表格每一行两边的管道符可省略。</p>\n<p>第二行还可以为不同的列指定对齐方向。标题默认为居中对齐，内容默认为左对齐；在 - 左边加上 : 就是左对齐；在 - 右边加上 : 就是右对齐；在 - 两边都加上 : 就是居中对齐。</p>\n<p>示例代码</p>\n<pre><code>姓名|语文成绩|数学成绩|总成绩\n---|:---|:---:|---:\n喜羊羊|100|120|220\n</code></pre><table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:left\">语文成绩</th>\n<th style=\"text-align:center\">数学成绩</th>\n<th style=\"text-align:right\">总成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>喜羊羊</td>\n<td style=\"text-align:left\">100</td>\n<td style=\"text-align:center\">120</td>\n<td style=\"text-align:right\">220</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><ol>\n<li>Markdown 与 HTML 的关系</li>\n</ol>\n<p>HTML 是一种发布的格式，Markdown 是一种书写的格式。</p>\n<p>Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p>\n<p>在 Markdown 中可直接使用 HTML 标签，但需要注意</p>\n<p>对于 HTML 区块元素――如 div、table、pre、p 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符(tab)或空格来缩进</p>\n<p>HTML 的行内标签——如 span、cite、del 可以在 Markdown 的段落、列表或是标题里随意使用。</p>\n<p>在 HTML 的区块标签中的 Markdown 标签是没有效果的</p>\n<ol start=\"2\">\n<li>特殊字符的自动转换</li>\n</ol>\n<p>在 HTML 文件中，有两个字符需要特殊处理： &lt; 和 &amp;，必须使用转义字符：&amp; lt ; 和 &amp; amp ;</p>\n<p>Markdown 中，你可以自由的书写 &lt; 和 &amp;，编辑器会智能的进行判断：当这些符号用于 HTML 标签中，他们将保留原型；当他们单独使用时，将会转换为字符实体。</p>\n<p>在代码块中，它们将统统被转换为字符实体，即：原样显示。</p>\n<ol start=\"3\">\n<li>Markdown 中的转义字符</li>\n</ol>\n<p>Markdown 中，如需显示有特定意义的符号，如：*,# 等，可使用 反斜杠 \\ 进行转义。可对如下字符进行转义：</p>\n<p>*</p>\n<p>`</p>\n<p>*<br>_</p>\n<p>{}</p>\n<p>()</p>\n<p>#</p>\n<p>+</p>\n<p>-</p>\n<p>.</p>\n<p>!</p>\n<p>作者：白老师课堂<br>链接：<a href=\"https://www.jianshu.com/p/4e3cae082b47\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/4e3cae082b47</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n"},{"title":"Nuxt.js学习","date":"2018-05-16T03:10:10.000Z","_content":"\n<br/>\n\n#### 关于Nuxt.js\n\n2016年10月25日，zeit.co背后的团队对外发布了Next.js，一个react的服务端渲染应用框架。几个小时后，与Next.js异曲同工，一个基于vue.js的服务端渲染应用框架应用而生，我们称之：Nuxt.js。\n\n#### Nuxt.js是什么？\n\nNuxt.js是一个基于vue.js的通用应用框架\n\n通过对客户端/服务端基础架构的抽象组织，Nuxt.js只要关注的是应用的UI渲染\n\n我们的目标是插件一个灵活的应用框架，你可以基于它初始化新项目的基础结构代码，或者在已有的Node.js项目中使用Nuxt.js\n\nNuxt.js预设了利用vue.js开发服务端渲染的应用所需要的各种配置\n\n除此之外，我们还提供了一种命令叫：nuxt generate，为基于vue.js的用用提供生成对应的静态站点的功能\n\n我们相信这个命令所提供的功能，是向开发集成各种微服务的web应用迈开的新一步\n\n作为框架，nuxt.js为客户端/服务端这种典型的应用框架模式提供了许多有用的特性，例如异步数据加载，中间件支持，布局支持等\n","source":"_posts/frame/nuxt.md","raw":"---\ntitle: Nuxt.js学习\ndate: 2018-05-16 11:10:10\ntags: 前端框架学习\n---\n\n<br/>\n\n#### 关于Nuxt.js\n\n2016年10月25日，zeit.co背后的团队对外发布了Next.js，一个react的服务端渲染应用框架。几个小时后，与Next.js异曲同工，一个基于vue.js的服务端渲染应用框架应用而生，我们称之：Nuxt.js。\n\n#### Nuxt.js是什么？\n\nNuxt.js是一个基于vue.js的通用应用框架\n\n通过对客户端/服务端基础架构的抽象组织，Nuxt.js只要关注的是应用的UI渲染\n\n我们的目标是插件一个灵活的应用框架，你可以基于它初始化新项目的基础结构代码，或者在已有的Node.js项目中使用Nuxt.js\n\nNuxt.js预设了利用vue.js开发服务端渲染的应用所需要的各种配置\n\n除此之外，我们还提供了一种命令叫：nuxt generate，为基于vue.js的用用提供生成对应的静态站点的功能\n\n我们相信这个命令所提供的功能，是向开发集成各种微服务的web应用迈开的新一步\n\n作为框架，nuxt.js为客户端/服务端这种典型的应用框架模式提供了许多有用的特性，例如异步数据加载，中间件支持，布局支持等\n","slug":"frame/nuxt","published":1,"updated":"2018-05-16T03:26:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji0akoy30007kn3oxxxh6d61","content":"<p><br></p>\n<h4 id=\"关于Nuxt-js\"><a href=\"#关于Nuxt-js\" class=\"headerlink\" title=\"关于Nuxt.js\"></a>关于Nuxt.js</h4><p>2016年10月25日，zeit.co背后的团队对外发布了Next.js，一个react的服务端渲染应用框架。几个小时后，与Next.js异曲同工，一个基于vue.js的服务端渲染应用框架应用而生，我们称之：Nuxt.js。</p>\n<h4 id=\"Nuxt-js是什么？\"><a href=\"#Nuxt-js是什么？\" class=\"headerlink\" title=\"Nuxt.js是什么？\"></a>Nuxt.js是什么？</h4><p>Nuxt.js是一个基于vue.js的通用应用框架</p>\n<p>通过对客户端/服务端基础架构的抽象组织，Nuxt.js只要关注的是应用的UI渲染</p>\n<p>我们的目标是插件一个灵活的应用框架，你可以基于它初始化新项目的基础结构代码，或者在已有的Node.js项目中使用Nuxt.js</p>\n<p>Nuxt.js预设了利用vue.js开发服务端渲染的应用所需要的各种配置</p>\n<p>除此之外，我们还提供了一种命令叫：nuxt generate，为基于vue.js的用用提供生成对应的静态站点的功能</p>\n<p>我们相信这个命令所提供的功能，是向开发集成各种微服务的web应用迈开的新一步</p>\n<p>作为框架，nuxt.js为客户端/服务端这种典型的应用框架模式提供了许多有用的特性，例如异步数据加载，中间件支持，布局支持等</p>\n","site":{"data":{}},"excerpt":"","more":"<p><br></p>\n<h4 id=\"关于Nuxt-js\"><a href=\"#关于Nuxt-js\" class=\"headerlink\" title=\"关于Nuxt.js\"></a>关于Nuxt.js</h4><p>2016年10月25日，zeit.co背后的团队对外发布了Next.js，一个react的服务端渲染应用框架。几个小时后，与Next.js异曲同工，一个基于vue.js的服务端渲染应用框架应用而生，我们称之：Nuxt.js。</p>\n<h4 id=\"Nuxt-js是什么？\"><a href=\"#Nuxt-js是什么？\" class=\"headerlink\" title=\"Nuxt.js是什么？\"></a>Nuxt.js是什么？</h4><p>Nuxt.js是一个基于vue.js的通用应用框架</p>\n<p>通过对客户端/服务端基础架构的抽象组织，Nuxt.js只要关注的是应用的UI渲染</p>\n<p>我们的目标是插件一个灵活的应用框架，你可以基于它初始化新项目的基础结构代码，或者在已有的Node.js项目中使用Nuxt.js</p>\n<p>Nuxt.js预设了利用vue.js开发服务端渲染的应用所需要的各种配置</p>\n<p>除此之外，我们还提供了一种命令叫：nuxt generate，为基于vue.js的用用提供生成对应的静态站点的功能</p>\n<p>我们相信这个命令所提供的功能，是向开发集成各种微服务的web应用迈开的新一步</p>\n<p>作为框架，nuxt.js为客户端/服务端这种典型的应用框架模式提供了许多有用的特性，例如异步数据加载，中间件支持，布局支持等</p>\n"},{"title":"ajax学习","date":"2018-05-28T10:10:10.000Z","_content":"\n<br/>\n\n#### AJAX概念\n\n> AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。\nAJAX 不是新的编程语言，而是一种使用现有标准的新方法。\nAJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下。\nAJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术\n\n> 什么是 AJAX ？\nAJAX = 异步 JavaScript 和 XML。\nAJAX 是一种用于创建快速动态网页的技术。\n通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。\n有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。\n\n> Google Suggest\n在 2005 年，Google 通过其 Google Suggest 使 AJAX 变得流行起来。\nGoogle Suggest 使用 AJAX 创造出动态性极强的 web 界面：当您在谷歌的搜索框输入关键字时，JavaScript 会把这些字符发送到服务器，然后服务器会返回一个搜索建议的列表。\n\n#### AJAX - 创建 XMLHttpRequest 对象\n\n> XMLHttpRequest 是 AJAX 的基础。\n\nXMLHttpRequest 对象\n\n    所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。\n    XMLHttpRequest 用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n\n创建 XMLHttpRequest 对象\n\n    所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。\n\n创建 XMLHttpRequest 对象的语法：\n\n    variable=new XMLHttpRequest();\n\n老版本的 Internet Explorer （IE5 和 IE6）使用 ActiveX 对象：\n\n    variable=new ActiveXObject(\"Microsoft.XMLHTTP\");\n\n为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：\n\n    var xmlhttp;\n    if (window.XMLHttpRequest)\n    {// code for IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp=new XMLHttpRequest();\n    }\n    else\n    {// code for IE6, IE5\n    xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n\n","source":"_posts/javascript/ajaxѧϰ.md","raw":"---\ntitle: ajax学习\ndate: 2018-05-28 18:10:10\ntags: 前端js学习\n---\n\n<br/>\n\n#### AJAX概念\n\n> AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。\nAJAX 不是新的编程语言，而是一种使用现有标准的新方法。\nAJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下。\nAJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术\n\n> 什么是 AJAX ？\nAJAX = 异步 JavaScript 和 XML。\nAJAX 是一种用于创建快速动态网页的技术。\n通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。\n有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。\n\n> Google Suggest\n在 2005 年，Google 通过其 Google Suggest 使 AJAX 变得流行起来。\nGoogle Suggest 使用 AJAX 创造出动态性极强的 web 界面：当您在谷歌的搜索框输入关键字时，JavaScript 会把这些字符发送到服务器，然后服务器会返回一个搜索建议的列表。\n\n#### AJAX - 创建 XMLHttpRequest 对象\n\n> XMLHttpRequest 是 AJAX 的基础。\n\nXMLHttpRequest 对象\n\n    所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。\n    XMLHttpRequest 用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n\n创建 XMLHttpRequest 对象\n\n    所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。\n\n创建 XMLHttpRequest 对象的语法：\n\n    variable=new XMLHttpRequest();\n\n老版本的 Internet Explorer （IE5 和 IE6）使用 ActiveX 对象：\n\n    variable=new ActiveXObject(\"Microsoft.XMLHTTP\");\n\n为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：\n\n    var xmlhttp;\n    if (window.XMLHttpRequest)\n    {// code for IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp=new XMLHttpRequest();\n    }\n    else\n    {// code for IE6, IE5\n    xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n\n","slug":"javascript/ajaxѧϰ","published":1,"updated":"2018-05-30T07:17:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji0akoy50009kn3oyvsfxvx0","content":"<p><br></p>\n<h4 id=\"AJAX概念\"><a href=\"#AJAX概念\" class=\"headerlink\" title=\"AJAX概念\"></a>AJAX概念</h4><blockquote>\n<p>AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。<br>AJAX 不是新的编程语言，而是一种使用现有标准的新方法。<br>AJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下。<br>AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术</p>\n</blockquote>\n<blockquote>\n<p>什么是 AJAX ？<br>AJAX = 异步 JavaScript 和 XML。<br>AJAX 是一种用于创建快速动态网页的技术。<br>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。<br>传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。<br>有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。</p>\n</blockquote>\n<blockquote>\n<p>Google Suggest<br>在 2005 年，Google 通过其 Google Suggest 使 AJAX 变得流行起来。<br>Google Suggest 使用 AJAX 创造出动态性极强的 web 界面：当您在谷歌的搜索框输入关键字时，JavaScript 会把这些字符发送到服务器，然后服务器会返回一个搜索建议的列表。</p>\n</blockquote>\n<h4 id=\"AJAX-创建-XMLHttpRequest-对象\"><a href=\"#AJAX-创建-XMLHttpRequest-对象\" class=\"headerlink\" title=\"AJAX - 创建 XMLHttpRequest 对象\"></a>AJAX - 创建 XMLHttpRequest 对象</h4><blockquote>\n<p>XMLHttpRequest 是 AJAX 的基础。</p>\n</blockquote>\n<p>XMLHttpRequest 对象</p>\n<pre><code>所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。\nXMLHttpRequest 用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n</code></pre><p>创建 XMLHttpRequest 对象</p>\n<pre><code>所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。\n</code></pre><p>创建 XMLHttpRequest 对象的语法：</p>\n<pre><code>variable=new XMLHttpRequest();\n</code></pre><p>老版本的 Internet Explorer （IE5 和 IE6）使用 ActiveX 对象：</p>\n<pre><code>variable=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);\n</code></pre><p>为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：</p>\n<pre><code>var xmlhttp;\nif (window.XMLHttpRequest)\n{// code for IE7+, Firefox, Chrome, Opera, Safari\nxmlhttp=new XMLHttpRequest();\n}\nelse\n{// code for IE6, IE5\nxmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><br></p>\n<h4 id=\"AJAX概念\"><a href=\"#AJAX概念\" class=\"headerlink\" title=\"AJAX概念\"></a>AJAX概念</h4><blockquote>\n<p>AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。<br>AJAX 不是新的编程语言，而是一种使用现有标准的新方法。<br>AJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下。<br>AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术</p>\n</blockquote>\n<blockquote>\n<p>什么是 AJAX ？<br>AJAX = 异步 JavaScript 和 XML。<br>AJAX 是一种用于创建快速动态网页的技术。<br>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。<br>传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。<br>有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。</p>\n</blockquote>\n<blockquote>\n<p>Google Suggest<br>在 2005 年，Google 通过其 Google Suggest 使 AJAX 变得流行起来。<br>Google Suggest 使用 AJAX 创造出动态性极强的 web 界面：当您在谷歌的搜索框输入关键字时，JavaScript 会把这些字符发送到服务器，然后服务器会返回一个搜索建议的列表。</p>\n</blockquote>\n<h4 id=\"AJAX-创建-XMLHttpRequest-对象\"><a href=\"#AJAX-创建-XMLHttpRequest-对象\" class=\"headerlink\" title=\"AJAX - 创建 XMLHttpRequest 对象\"></a>AJAX - 创建 XMLHttpRequest 对象</h4><blockquote>\n<p>XMLHttpRequest 是 AJAX 的基础。</p>\n</blockquote>\n<p>XMLHttpRequest 对象</p>\n<pre><code>所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。\nXMLHttpRequest 用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n</code></pre><p>创建 XMLHttpRequest 对象</p>\n<pre><code>所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。\n</code></pre><p>创建 XMLHttpRequest 对象的语法：</p>\n<pre><code>variable=new XMLHttpRequest();\n</code></pre><p>老版本的 Internet Explorer （IE5 和 IE6）使用 ActiveX 对象：</p>\n<pre><code>variable=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);\n</code></pre><p>为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：</p>\n<pre><code>var xmlhttp;\nif (window.XMLHttpRequest)\n{// code for IE7+, Firefox, Chrome, Opera, Safari\nxmlhttp=new XMLHttpRequest();\n}\nelse\n{// code for IE6, IE5\nxmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);\n}\n</code></pre>"},{"title":"node.js第一个应用","date":"2018-05-15T08:10:10.000Z","_content":"\n<br/>\n\n#### 什么是node.js？\n\n> 简单的说node.js就是运行在服务端的JavaScript\n  node.js是一个基于chrome javascript 运行时建立的一个平台\n  node.js是一个事件驱动I/O服务器JavaScript环境，基于Google的v8殷勤，v8殷勤执行JavaScript的速度非常快，性能非常好\n\n#### 查看版本\n\n> node -v\n  注意：不同版本间是有差异性的\n\n#### 第一个node.js程序： hello world!\n\n> 脚本模式\n  console.log(\"hello world!\");\n  保存该文件，文件名为helloworld.js，并通过node命令来执行 node helloworld.js\n  程序执行结果为 hello world!\n\n> 交互模式\n  打开终端，输入node进入命令交互模式，可以输入一条代码语句后立即执行并显示结果\n  node\n  > console.log('hello world!')\n  hello world!\n\n#### 创建node的第一个应用\n\n> 如果我们使用PHP来编写后端的代码时，需要Apache或者Nginx的http服务器，并配置mod_php5模块和php_cgi\n  从这个角度看，整个接受http请求并提供web页面的需求根本不需要PHP来处理\n  不过对node.js来说，概念就完全不一样了，使用node.js时，我们不仅仅在实现一个应用，同事还实现了整个http服务器\n  事实上，我们的web应用以及对应的web服务器基本上是一致的\n  在我们创建node的第一个程序“hello world!”应用前，让我们先了解下node.js应用由那几个部分组成\n\n  1.引入required模块：我们可以使用require指令来载入node.js模块\n  2.穿件服务器：服务器可以监听客户端的请求，类似于Apache、Nginx等http服务器\n  3.接受请求与响应请求：服务器很容易创建，客户端可以使用浏览器或终端发送http请求，服务器接受请求后返回响应数据\n\n#### 创建node.js应用\n\n> 步骤一：引入required模块\n\n我们使用require指令来载入http模块，并将实例化的http赋值给变量http\n\n> var http = require('http')\n\n> 步骤二：创建服务器\n\n接下来我们使用http.createServer()方法创建服务器，并使用listen方法绑定8888端口。函数通过request、response参数来接收数据和响应数据\n实例如下，在你的项目的根目录下创建一个叫server.js的文件，并写入以下代码\n\n    var http = require('http);\n    http.createServer(function (request, response) {\n\n      // 发送http头部\n      // http状态值：200 : ok\n      // 内容类型：text/plain\n      response.writeHead(200, {\n        'Content-Type': 'text/plain'\n      })\n\n      // 发送响应数据“hello world”\n    }).listen(8888)\n\n    // 终端打印如下结果\n    console.log('Server running at http://127.0.0.1:8888/')\n\n以上代码我们完成了一个可以工作的http服务器\n使用node命令执行以上代码\n\n> node server.js\n\n结果：Server running at http://127.0.0.1:8888/\n\n> 分析：\n\n* 第一行请求（require）node.js自带的http模块，并把它赋值给http变量\n\n* 接下来我们调用http模块提供的函数：createServer，这个函数会返回一个对象，对象有个叫listen的方法，这个方法有个数值参数，指定这个http服务器监听的端口号\n\n\n\n\n\n\n\n\n","source":"_posts/node/node.js的第一个应用.md","raw":"---\ntitle: node.js第一个应用\ndate: 2018-05-15 16:10:10\ntags: node.js学习\n---\n\n<br/>\n\n#### 什么是node.js？\n\n> 简单的说node.js就是运行在服务端的JavaScript\n  node.js是一个基于chrome javascript 运行时建立的一个平台\n  node.js是一个事件驱动I/O服务器JavaScript环境，基于Google的v8殷勤，v8殷勤执行JavaScript的速度非常快，性能非常好\n\n#### 查看版本\n\n> node -v\n  注意：不同版本间是有差异性的\n\n#### 第一个node.js程序： hello world!\n\n> 脚本模式\n  console.log(\"hello world!\");\n  保存该文件，文件名为helloworld.js，并通过node命令来执行 node helloworld.js\n  程序执行结果为 hello world!\n\n> 交互模式\n  打开终端，输入node进入命令交互模式，可以输入一条代码语句后立即执行并显示结果\n  node\n  > console.log('hello world!')\n  hello world!\n\n#### 创建node的第一个应用\n\n> 如果我们使用PHP来编写后端的代码时，需要Apache或者Nginx的http服务器，并配置mod_php5模块和php_cgi\n  从这个角度看，整个接受http请求并提供web页面的需求根本不需要PHP来处理\n  不过对node.js来说，概念就完全不一样了，使用node.js时，我们不仅仅在实现一个应用，同事还实现了整个http服务器\n  事实上，我们的web应用以及对应的web服务器基本上是一致的\n  在我们创建node的第一个程序“hello world!”应用前，让我们先了解下node.js应用由那几个部分组成\n\n  1.引入required模块：我们可以使用require指令来载入node.js模块\n  2.穿件服务器：服务器可以监听客户端的请求，类似于Apache、Nginx等http服务器\n  3.接受请求与响应请求：服务器很容易创建，客户端可以使用浏览器或终端发送http请求，服务器接受请求后返回响应数据\n\n#### 创建node.js应用\n\n> 步骤一：引入required模块\n\n我们使用require指令来载入http模块，并将实例化的http赋值给变量http\n\n> var http = require('http')\n\n> 步骤二：创建服务器\n\n接下来我们使用http.createServer()方法创建服务器，并使用listen方法绑定8888端口。函数通过request、response参数来接收数据和响应数据\n实例如下，在你的项目的根目录下创建一个叫server.js的文件，并写入以下代码\n\n    var http = require('http);\n    http.createServer(function (request, response) {\n\n      // 发送http头部\n      // http状态值：200 : ok\n      // 内容类型：text/plain\n      response.writeHead(200, {\n        'Content-Type': 'text/plain'\n      })\n\n      // 发送响应数据“hello world”\n    }).listen(8888)\n\n    // 终端打印如下结果\n    console.log('Server running at http://127.0.0.1:8888/')\n\n以上代码我们完成了一个可以工作的http服务器\n使用node命令执行以上代码\n\n> node server.js\n\n结果：Server running at http://127.0.0.1:8888/\n\n> 分析：\n\n* 第一行请求（require）node.js自带的http模块，并把它赋值给http变量\n\n* 接下来我们调用http模块提供的函数：createServer，这个函数会返回一个对象，对象有个叫listen的方法，这个方法有个数值参数，指定这个http服务器监听的端口号\n\n\n\n\n\n\n\n\n","slug":"node/node.js的第一个应用","published":1,"updated":"2018-05-28T09:01:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji0akoy9000ckn3ogcb5i2ob","content":"<p><br></p>\n<h4 id=\"什么是node-js？\"><a href=\"#什么是node-js？\" class=\"headerlink\" title=\"什么是node.js？\"></a>什么是node.js？</h4><blockquote>\n<p>简单的说node.js就是运行在服务端的JavaScript<br>  node.js是一个基于chrome javascript 运行时建立的一个平台<br>  node.js是一个事件驱动I/O服务器JavaScript环境，基于Google的v8殷勤，v8殷勤执行JavaScript的速度非常快，性能非常好</p>\n</blockquote>\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><blockquote>\n<p>node -v<br>  注意：不同版本间是有差异性的</p>\n</blockquote>\n<h4 id=\"第一个node-js程序：-hello-world\"><a href=\"#第一个node-js程序：-hello-world\" class=\"headerlink\" title=\"第一个node.js程序： hello world!\"></a>第一个node.js程序： hello world!</h4><blockquote>\n<p>脚本模式<br>  console.log(“hello world!”);<br>  保存该文件，文件名为helloworld.js，并通过node命令来执行 node helloworld.js<br>  程序执行结果为 hello world!</p>\n</blockquote>\n<blockquote>\n<p>交互模式<br>  打开终端，输入node进入命令交互模式，可以输入一条代码语句后立即执行并显示结果<br>  node<br>console.log(‘hello world!’)<br>  hello world!</p>\n</blockquote>\n<h4 id=\"创建node的第一个应用\"><a href=\"#创建node的第一个应用\" class=\"headerlink\" title=\"创建node的第一个应用\"></a>创建node的第一个应用</h4><blockquote>\n<p>如果我们使用PHP来编写后端的代码时，需要Apache或者Nginx的http服务器，并配置mod_php5模块和php_cgi<br>  从这个角度看，整个接受http请求并提供web页面的需求根本不需要PHP来处理<br>  不过对node.js来说，概念就完全不一样了，使用node.js时，我们不仅仅在实现一个应用，同事还实现了整个http服务器<br>  事实上，我们的web应用以及对应的web服务器基本上是一致的<br>  在我们创建node的第一个程序“hello world!”应用前，让我们先了解下node.js应用由那几个部分组成</p>\n</blockquote>\n<p>  1.引入required模块：我们可以使用require指令来载入node.js模块<br>  2.穿件服务器：服务器可以监听客户端的请求，类似于Apache、Nginx等http服务器<br>  3.接受请求与响应请求：服务器很容易创建，客户端可以使用浏览器或终端发送http请求，服务器接受请求后返回响应数据</p>\n<h4 id=\"创建node-js应用\"><a href=\"#创建node-js应用\" class=\"headerlink\" title=\"创建node.js应用\"></a>创建node.js应用</h4><blockquote>\n<p>步骤一：引入required模块</p>\n</blockquote>\n<p>我们使用require指令来载入http模块，并将实例化的http赋值给变量http</p>\n<blockquote>\n<p>var http = require(‘http’)</p>\n</blockquote>\n<blockquote>\n<p>步骤二：创建服务器</p>\n</blockquote>\n<p>接下来我们使用http.createServer()方法创建服务器，并使用listen方法绑定8888端口。函数通过request、response参数来接收数据和响应数据<br>实例如下，在你的项目的根目录下创建一个叫server.js的文件，并写入以下代码</p>\n<pre><code>var http = require(&apos;http);\nhttp.createServer(function (request, response) {\n\n  // 发送http头部\n  // http状态值：200 : ok\n  // 内容类型：text/plain\n  response.writeHead(200, {\n    &apos;Content-Type&apos;: &apos;text/plain&apos;\n  })\n\n  // 发送响应数据“hello world”\n}).listen(8888)\n\n// 终端打印如下结果\nconsole.log(&apos;Server running at http://127.0.0.1:8888/&apos;)\n</code></pre><p>以上代码我们完成了一个可以工作的http服务器<br>使用node命令执行以上代码</p>\n<blockquote>\n<p>node server.js</p>\n</blockquote>\n<p>结果：Server running at <a href=\"http://127.0.0.1:8888/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/</a></p>\n<blockquote>\n<p>分析：</p>\n</blockquote>\n<ul>\n<li><p>第一行请求（require）node.js自带的http模块，并把它赋值给http变量</p>\n</li>\n<li><p>接下来我们调用http模块提供的函数：createServer，这个函数会返回一个对象，对象有个叫listen的方法，这个方法有个数值参数，指定这个http服务器监听的端口号</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><br></p>\n<h4 id=\"什么是node-js？\"><a href=\"#什么是node-js？\" class=\"headerlink\" title=\"什么是node.js？\"></a>什么是node.js？</h4><blockquote>\n<p>简单的说node.js就是运行在服务端的JavaScript<br>  node.js是一个基于chrome javascript 运行时建立的一个平台<br>  node.js是一个事件驱动I/O服务器JavaScript环境，基于Google的v8殷勤，v8殷勤执行JavaScript的速度非常快，性能非常好</p>\n</blockquote>\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><blockquote>\n<p>node -v<br>  注意：不同版本间是有差异性的</p>\n</blockquote>\n<h4 id=\"第一个node-js程序：-hello-world\"><a href=\"#第一个node-js程序：-hello-world\" class=\"headerlink\" title=\"第一个node.js程序： hello world!\"></a>第一个node.js程序： hello world!</h4><blockquote>\n<p>脚本模式<br>  console.log(“hello world!”);<br>  保存该文件，文件名为helloworld.js，并通过node命令来执行 node helloworld.js<br>  程序执行结果为 hello world!</p>\n</blockquote>\n<blockquote>\n<p>交互模式<br>  打开终端，输入node进入命令交互模式，可以输入一条代码语句后立即执行并显示结果<br>  node<br>console.log(‘hello world!’)<br>  hello world!</p>\n</blockquote>\n<h4 id=\"创建node的第一个应用\"><a href=\"#创建node的第一个应用\" class=\"headerlink\" title=\"创建node的第一个应用\"></a>创建node的第一个应用</h4><blockquote>\n<p>如果我们使用PHP来编写后端的代码时，需要Apache或者Nginx的http服务器，并配置mod_php5模块和php_cgi<br>  从这个角度看，整个接受http请求并提供web页面的需求根本不需要PHP来处理<br>  不过对node.js来说，概念就完全不一样了，使用node.js时，我们不仅仅在实现一个应用，同事还实现了整个http服务器<br>  事实上，我们的web应用以及对应的web服务器基本上是一致的<br>  在我们创建node的第一个程序“hello world!”应用前，让我们先了解下node.js应用由那几个部分组成</p>\n</blockquote>\n<p>  1.引入required模块：我们可以使用require指令来载入node.js模块<br>  2.穿件服务器：服务器可以监听客户端的请求，类似于Apache、Nginx等http服务器<br>  3.接受请求与响应请求：服务器很容易创建，客户端可以使用浏览器或终端发送http请求，服务器接受请求后返回响应数据</p>\n<h4 id=\"创建node-js应用\"><a href=\"#创建node-js应用\" class=\"headerlink\" title=\"创建node.js应用\"></a>创建node.js应用</h4><blockquote>\n<p>步骤一：引入required模块</p>\n</blockquote>\n<p>我们使用require指令来载入http模块，并将实例化的http赋值给变量http</p>\n<blockquote>\n<p>var http = require(‘http’)</p>\n</blockquote>\n<blockquote>\n<p>步骤二：创建服务器</p>\n</blockquote>\n<p>接下来我们使用http.createServer()方法创建服务器，并使用listen方法绑定8888端口。函数通过request、response参数来接收数据和响应数据<br>实例如下，在你的项目的根目录下创建一个叫server.js的文件，并写入以下代码</p>\n<pre><code>var http = require(&apos;http);\nhttp.createServer(function (request, response) {\n\n  // 发送http头部\n  // http状态值：200 : ok\n  // 内容类型：text/plain\n  response.writeHead(200, {\n    &apos;Content-Type&apos;: &apos;text/plain&apos;\n  })\n\n  // 发送响应数据“hello world”\n}).listen(8888)\n\n// 终端打印如下结果\nconsole.log(&apos;Server running at http://127.0.0.1:8888/&apos;)\n</code></pre><p>以上代码我们完成了一个可以工作的http服务器<br>使用node命令执行以上代码</p>\n<blockquote>\n<p>node server.js</p>\n</blockquote>\n<p>结果：Server running at <a href=\"http://127.0.0.1:8888/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/</a></p>\n<blockquote>\n<p>分析：</p>\n</blockquote>\n<ul>\n<li><p>第一行请求（require）node.js自带的http模块，并把它赋值给http变量</p>\n</li>\n<li><p>接下来我们调用http模块提供的函数：createServer，这个函数会返回一个对象，对象有个叫listen的方法，这个方法有个数值参数，指定这个http服务器监听的端口号</p>\n</li>\n</ul>\n"},{"title":"JS事件循环","date":"2018-05-15T08:10:10.000Z","_content":"\n<br/>\n\n#### 一、为什么JS是单线程\n\n    是由JS的用途决定的，其用途主要是与用户互动，以及操作DOM，如果不是单线程的话会带来很复杂的同步问题。比如：如果是多线程的话，一个用户新建一个DOM，另一个用户删除同一个DOM，该如何处理将变得非常麻烦。\n    在html5中提出了web worker（todo 改天添加web worker的讲解）标准，JS可以创建多个线程或者是iframe，但是其他子线程主要是用来进行JS计算不能操作DOM，且受到子线程的控制。所以也并没有改变JS单线程的本质\n\n#### 二、同步和异步\n\n    由于是单线程，所有任务需要排队，但是如果队列中所有的任务都是同步的话会造成资源的浪费。\n    于是任务分为两类：同步任务和异步任务。\n    异步任务的过程：\n        主线程（函数调用栈）发起一个异步请求，相应的工作线程接收请求，并告知主线程已经收到，主线程继续执行后面的同步代码，同时工作线程执行异步任务，工作线程完成工作后，通知主线程，主线程收到通知后，执行回调函数\n\n#### 三、宏任务和微任务\n\n    宏任务（micro-task）主要是：script代码段、setTimeout、setInterval、Promise的构造函数是同步的、setImmediate、I/O、UIrendering\n    微任务（macro-task）主要是：Promise的回调、process.nextTick\n\n#### 四、任务队列和事件循环\n\n    了解任务队列之前，先了解一下任务源，我们将发起异步任务的称之为任务源（setTimeout、Promise等），进入任务队列的是他们指定的任务。\n    在一个线程中，事件循环是唯一的，任务队列是多个的。来自不同任务源的队列进入到不同的任务队列，setTimeout和setInterval是同源的\n\n##### 事件循环的步骤：\n\n    1、运行主线程（函数调用栈）中的同步任务\n    2、主线程（函数调用栈）执行到任务源时，通知相应的webAPIs进行相应的执行异步任务，将任务源指定的异步任务放入任务队列中\n    3、主线程（函数调用栈）中的任务执行完毕后，然后执行所有的微任务，再执行宏任务，找到一个任务队列执行完毕，再执行所有的微任务\n    4、不断执行第三步\n\n> 事件循环：指主线程重复从任务队列中取消息，执行的过程\n\n先来一个简单的例子：\n\n    setTimeout(() => {\n        console.log('begin')\n    })\n\n    new Promise((resolve) => {\n        console.log('promise begin')\n        for(let i = 0; i < 1000; i++) {\n            i == 999 && resolve()\n        }\n    }).then(() => {\n        console.log('then begin')\n    })\n\n    console.log('end')\n\n因为promise的构造函数是同步的，promise.then是异步的微任务，所以promise beigin先于end\n根据上面对宏任务和微任务的分析，其输出的情况为【promise begin——end——then begin——begin】\n再来一个复杂点的，我们来一步一步的分析一个例子来看：\n\n    console.log('golb1');\n\n    setTimeout(function() {\n        console.log('timeout1');\n        process.nextTick(function() {\n            console.log('timeout1_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('timeout1_promise');\n            resolve();\n        }).then(function() {\n            console.log('timeout1_then')\n        })\n    })\n\n    setImmediate(function() {\n        console.log('immediate1');\n        process.nextTick(function() {\n            console.log('immediate1_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('immediate1_promise');\n            resolve();\n        }).then(function() {\n            console.log('immediate1_then')\n        })\n    })\n\n    process.nextTick(function() {\n        console.log('glob1_nextTick');\n    })\n\n    new Promise(function(resolve) {\n        console.log('glob1_promise');\n        resolve();\n    }).then(function() {\n        console.log('glob1_then')\n    })\n\n    setTimeout(function() {\n        console.log('timeout2');\n        process.nextTick(function() {\n            console.log('timeout2_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('timeout2_promise');\n            resolve();\n        }).then(function() {\n            console.log('timeout2_then')\n        })\n    })\n\n    process.nextTick(function() {\n        console.log('glob2_nextTick');\n    })\n\n    new Promise(function(resolve) {\n        console.log('glob2_promise');\n        resolve();\n    }).then(function() {\n        console.log('glob2_then')\n    })\n\n    setImmediate(function() {\n        console.log('immediate2');\n        process.nextTick(function() {\n            console.log('immediate2_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('immediate2_promise');\n            resolve();\n        }).then(function() {\n            console.log('immediate2_then')\n        })\n    })\n\n一、第一步、首先执行宏任务script。全局入栈。输出glob1\n\n![][1]\n\n[1]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d563d442f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n二、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列\n\n![][2]\n\n[2]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8926f643?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n三、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列\n\n![][3]\n\n[3]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d56422aa4?imageslim\n\n四、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列\n\n![][4]\n\n[4]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8eefb889?imageslim\n\n五、遇到Promise的构造函数，进入执行栈，输出glob1_promise，Promise.then()作为任务源，将指定的任务加入微任务\n\n![][5]\n\n[5]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d565af410?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n六、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列\n\n![][6]\n\n[6]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d6135495e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n七、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列\n\n![][7]\n\n[7]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61da8ad8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n八、遇到Promise的构造函数，进入执行栈，输出glob2_promise，Promise.then()作为任务源，将指定的任务加入微任务\n\n![][8]\n\n[8]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61c59908?imageslim\n\n九、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列\n\n![][9]\n\n[9]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d82ecee97?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n十、执行所有微任务队列，输出glob1_nextTick和glob2_nextTick、glob1_then、glob2_then\n\n![][10]\n\n[10]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d83193a9d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n> 事件机制其实就是异步任务的通知机制\n","source":"_posts/javascript/js事件循环.md","raw":"---\ntitle: JS事件循环\ndate: 2018-05-15 16:10:10\ntags: 前端js学习\n---\n\n<br/>\n\n#### 一、为什么JS是单线程\n\n    是由JS的用途决定的，其用途主要是与用户互动，以及操作DOM，如果不是单线程的话会带来很复杂的同步问题。比如：如果是多线程的话，一个用户新建一个DOM，另一个用户删除同一个DOM，该如何处理将变得非常麻烦。\n    在html5中提出了web worker（todo 改天添加web worker的讲解）标准，JS可以创建多个线程或者是iframe，但是其他子线程主要是用来进行JS计算不能操作DOM，且受到子线程的控制。所以也并没有改变JS单线程的本质\n\n#### 二、同步和异步\n\n    由于是单线程，所有任务需要排队，但是如果队列中所有的任务都是同步的话会造成资源的浪费。\n    于是任务分为两类：同步任务和异步任务。\n    异步任务的过程：\n        主线程（函数调用栈）发起一个异步请求，相应的工作线程接收请求，并告知主线程已经收到，主线程继续执行后面的同步代码，同时工作线程执行异步任务，工作线程完成工作后，通知主线程，主线程收到通知后，执行回调函数\n\n#### 三、宏任务和微任务\n\n    宏任务（micro-task）主要是：script代码段、setTimeout、setInterval、Promise的构造函数是同步的、setImmediate、I/O、UIrendering\n    微任务（macro-task）主要是：Promise的回调、process.nextTick\n\n#### 四、任务队列和事件循环\n\n    了解任务队列之前，先了解一下任务源，我们将发起异步任务的称之为任务源（setTimeout、Promise等），进入任务队列的是他们指定的任务。\n    在一个线程中，事件循环是唯一的，任务队列是多个的。来自不同任务源的队列进入到不同的任务队列，setTimeout和setInterval是同源的\n\n##### 事件循环的步骤：\n\n    1、运行主线程（函数调用栈）中的同步任务\n    2、主线程（函数调用栈）执行到任务源时，通知相应的webAPIs进行相应的执行异步任务，将任务源指定的异步任务放入任务队列中\n    3、主线程（函数调用栈）中的任务执行完毕后，然后执行所有的微任务，再执行宏任务，找到一个任务队列执行完毕，再执行所有的微任务\n    4、不断执行第三步\n\n> 事件循环：指主线程重复从任务队列中取消息，执行的过程\n\n先来一个简单的例子：\n\n    setTimeout(() => {\n        console.log('begin')\n    })\n\n    new Promise((resolve) => {\n        console.log('promise begin')\n        for(let i = 0; i < 1000; i++) {\n            i == 999 && resolve()\n        }\n    }).then(() => {\n        console.log('then begin')\n    })\n\n    console.log('end')\n\n因为promise的构造函数是同步的，promise.then是异步的微任务，所以promise beigin先于end\n根据上面对宏任务和微任务的分析，其输出的情况为【promise begin——end——then begin——begin】\n再来一个复杂点的，我们来一步一步的分析一个例子来看：\n\n    console.log('golb1');\n\n    setTimeout(function() {\n        console.log('timeout1');\n        process.nextTick(function() {\n            console.log('timeout1_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('timeout1_promise');\n            resolve();\n        }).then(function() {\n            console.log('timeout1_then')\n        })\n    })\n\n    setImmediate(function() {\n        console.log('immediate1');\n        process.nextTick(function() {\n            console.log('immediate1_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('immediate1_promise');\n            resolve();\n        }).then(function() {\n            console.log('immediate1_then')\n        })\n    })\n\n    process.nextTick(function() {\n        console.log('glob1_nextTick');\n    })\n\n    new Promise(function(resolve) {\n        console.log('glob1_promise');\n        resolve();\n    }).then(function() {\n        console.log('glob1_then')\n    })\n\n    setTimeout(function() {\n        console.log('timeout2');\n        process.nextTick(function() {\n            console.log('timeout2_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('timeout2_promise');\n            resolve();\n        }).then(function() {\n            console.log('timeout2_then')\n        })\n    })\n\n    process.nextTick(function() {\n        console.log('glob2_nextTick');\n    })\n\n    new Promise(function(resolve) {\n        console.log('glob2_promise');\n        resolve();\n    }).then(function() {\n        console.log('glob2_then')\n    })\n\n    setImmediate(function() {\n        console.log('immediate2');\n        process.nextTick(function() {\n            console.log('immediate2_nextTick');\n        })\n        new Promise(function(resolve) {\n            console.log('immediate2_promise');\n            resolve();\n        }).then(function() {\n            console.log('immediate2_then')\n        })\n    })\n\n一、第一步、首先执行宏任务script。全局入栈。输出glob1\n\n![][1]\n\n[1]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d563d442f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n二、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列\n\n![][2]\n\n[2]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8926f643?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n三、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列\n\n![][3]\n\n[3]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d56422aa4?imageslim\n\n四、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列\n\n![][4]\n\n[4]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8eefb889?imageslim\n\n五、遇到Promise的构造函数，进入执行栈，输出glob1_promise，Promise.then()作为任务源，将指定的任务加入微任务\n\n![][5]\n\n[5]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d565af410?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n六、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列\n\n![][6]\n\n[6]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d6135495e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n七、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列\n\n![][7]\n\n[7]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61da8ad8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n八、遇到Promise的构造函数，进入执行栈，输出glob2_promise，Promise.then()作为任务源，将指定的任务加入微任务\n\n![][8]\n\n[8]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61c59908?imageslim\n\n九、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列\n\n![][9]\n\n[9]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d82ecee97?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n十、执行所有微任务队列，输出glob1_nextTick和glob2_nextTick、glob1_then、glob2_then\n\n![][10]\n\n[10]: https://user-gold-cdn.xitu.io/2018/3/19/1623d52d83193a9d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\n\n> 事件机制其实就是异步任务的通知机制\n","slug":"javascript/js事件循环","published":1,"updated":"2018-05-16T03:11:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji0akoyc000dkn3omj8kp2ir","content":"<p><br></p>\n<h4 id=\"一、为什么JS是单线程\"><a href=\"#一、为什么JS是单线程\" class=\"headerlink\" title=\"一、为什么JS是单线程\"></a>一、为什么JS是单线程</h4><pre><code>是由JS的用途决定的，其用途主要是与用户互动，以及操作DOM，如果不是单线程的话会带来很复杂的同步问题。比如：如果是多线程的话，一个用户新建一个DOM，另一个用户删除同一个DOM，该如何处理将变得非常麻烦。\n在html5中提出了web worker（todo 改天添加web worker的讲解）标准，JS可以创建多个线程或者是iframe，但是其他子线程主要是用来进行JS计算不能操作DOM，且受到子线程的控制。所以也并没有改变JS单线程的本质\n</code></pre><h4 id=\"二、同步和异步\"><a href=\"#二、同步和异步\" class=\"headerlink\" title=\"二、同步和异步\"></a>二、同步和异步</h4><pre><code>由于是单线程，所有任务需要排队，但是如果队列中所有的任务都是同步的话会造成资源的浪费。\n于是任务分为两类：同步任务和异步任务。\n异步任务的过程：\n    主线程（函数调用栈）发起一个异步请求，相应的工作线程接收请求，并告知主线程已经收到，主线程继续执行后面的同步代码，同时工作线程执行异步任务，工作线程完成工作后，通知主线程，主线程收到通知后，执行回调函数\n</code></pre><h4 id=\"三、宏任务和微任务\"><a href=\"#三、宏任务和微任务\" class=\"headerlink\" title=\"三、宏任务和微任务\"></a>三、宏任务和微任务</h4><pre><code>宏任务（micro-task）主要是：script代码段、setTimeout、setInterval、Promise的构造函数是同步的、setImmediate、I/O、UIrendering\n微任务（macro-task）主要是：Promise的回调、process.nextTick\n</code></pre><h4 id=\"四、任务队列和事件循环\"><a href=\"#四、任务队列和事件循环\" class=\"headerlink\" title=\"四、任务队列和事件循环\"></a>四、任务队列和事件循环</h4><pre><code>了解任务队列之前，先了解一下任务源，我们将发起异步任务的称之为任务源（setTimeout、Promise等），进入任务队列的是他们指定的任务。\n在一个线程中，事件循环是唯一的，任务队列是多个的。来自不同任务源的队列进入到不同的任务队列，setTimeout和setInterval是同源的\n</code></pre><h5 id=\"事件循环的步骤：\"><a href=\"#事件循环的步骤：\" class=\"headerlink\" title=\"事件循环的步骤：\"></a>事件循环的步骤：</h5><pre><code>1、运行主线程（函数调用栈）中的同步任务\n2、主线程（函数调用栈）执行到任务源时，通知相应的webAPIs进行相应的执行异步任务，将任务源指定的异步任务放入任务队列中\n3、主线程（函数调用栈）中的任务执行完毕后，然后执行所有的微任务，再执行宏任务，找到一个任务队列执行完毕，再执行所有的微任务\n4、不断执行第三步\n</code></pre><blockquote>\n<p>事件循环：指主线程重复从任务队列中取消息，执行的过程</p>\n</blockquote>\n<p>先来一个简单的例子：</p>\n<pre><code>setTimeout(() =&gt; {\n    console.log(&apos;begin&apos;)\n})\n\nnew Promise((resolve) =&gt; {\n    console.log(&apos;promise begin&apos;)\n    for(let i = 0; i &lt; 1000; i++) {\n        i == 999 &amp;&amp; resolve()\n    }\n}).then(() =&gt; {\n    console.log(&apos;then begin&apos;)\n})\n\nconsole.log(&apos;end&apos;)\n</code></pre><p>因为promise的构造函数是同步的，promise.then是异步的微任务，所以promise beigin先于end<br>根据上面对宏任务和微任务的分析，其输出的情况为【promise begin——end——then begin——begin】<br>再来一个复杂点的，我们来一步一步的分析一个例子来看：</p>\n<pre><code>console.log(&apos;golb1&apos;);\n\nsetTimeout(function() {\n    console.log(&apos;timeout1&apos;);\n    process.nextTick(function() {\n        console.log(&apos;timeout1_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;timeout1_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;timeout1_then&apos;)\n    })\n})\n\nsetImmediate(function() {\n    console.log(&apos;immediate1&apos;);\n    process.nextTick(function() {\n        console.log(&apos;immediate1_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;immediate1_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;immediate1_then&apos;)\n    })\n})\n\nprocess.nextTick(function() {\n    console.log(&apos;glob1_nextTick&apos;);\n})\n\nnew Promise(function(resolve) {\n    console.log(&apos;glob1_promise&apos;);\n    resolve();\n}).then(function() {\n    console.log(&apos;glob1_then&apos;)\n})\n\nsetTimeout(function() {\n    console.log(&apos;timeout2&apos;);\n    process.nextTick(function() {\n        console.log(&apos;timeout2_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;timeout2_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;timeout2_then&apos;)\n    })\n})\n\nprocess.nextTick(function() {\n    console.log(&apos;glob2_nextTick&apos;);\n})\n\nnew Promise(function(resolve) {\n    console.log(&apos;glob2_promise&apos;);\n    resolve();\n}).then(function() {\n    console.log(&apos;glob2_then&apos;)\n})\n\nsetImmediate(function() {\n    console.log(&apos;immediate2&apos;);\n    process.nextTick(function() {\n        console.log(&apos;immediate2_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;immediate2_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;immediate2_then&apos;)\n    })\n})\n</code></pre><p>一、第一步、首先执行宏任务script。全局入栈。输出glob1</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d563d442f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>二、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8926f643?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>三、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d56422aa4?imageslim\" alt=\"\"></p>\n<p>四、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8eefb889?imageslim\" alt=\"\"></p>\n<p>五、遇到Promise的构造函数，进入执行栈，输出glob1_promise，Promise.then()作为任务源，将指定的任务加入微任务</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d565af410?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>六、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d6135495e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>七、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61da8ad8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>八、遇到Promise的构造函数，进入执行栈，输出glob2_promise，Promise.then()作为任务源，将指定的任务加入微任务</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61c59908?imageslim\" alt=\"\"></p>\n<p>九、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d82ecee97?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>十、执行所有微任务队列，输出glob1_nextTick和glob2_nextTick、glob1_then、glob2_then</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d83193a9d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<blockquote>\n<p>事件机制其实就是异步任务的通知机制</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><br></p>\n<h4 id=\"一、为什么JS是单线程\"><a href=\"#一、为什么JS是单线程\" class=\"headerlink\" title=\"一、为什么JS是单线程\"></a>一、为什么JS是单线程</h4><pre><code>是由JS的用途决定的，其用途主要是与用户互动，以及操作DOM，如果不是单线程的话会带来很复杂的同步问题。比如：如果是多线程的话，一个用户新建一个DOM，另一个用户删除同一个DOM，该如何处理将变得非常麻烦。\n在html5中提出了web worker（todo 改天添加web worker的讲解）标准，JS可以创建多个线程或者是iframe，但是其他子线程主要是用来进行JS计算不能操作DOM，且受到子线程的控制。所以也并没有改变JS单线程的本质\n</code></pre><h4 id=\"二、同步和异步\"><a href=\"#二、同步和异步\" class=\"headerlink\" title=\"二、同步和异步\"></a>二、同步和异步</h4><pre><code>由于是单线程，所有任务需要排队，但是如果队列中所有的任务都是同步的话会造成资源的浪费。\n于是任务分为两类：同步任务和异步任务。\n异步任务的过程：\n    主线程（函数调用栈）发起一个异步请求，相应的工作线程接收请求，并告知主线程已经收到，主线程继续执行后面的同步代码，同时工作线程执行异步任务，工作线程完成工作后，通知主线程，主线程收到通知后，执行回调函数\n</code></pre><h4 id=\"三、宏任务和微任务\"><a href=\"#三、宏任务和微任务\" class=\"headerlink\" title=\"三、宏任务和微任务\"></a>三、宏任务和微任务</h4><pre><code>宏任务（micro-task）主要是：script代码段、setTimeout、setInterval、Promise的构造函数是同步的、setImmediate、I/O、UIrendering\n微任务（macro-task）主要是：Promise的回调、process.nextTick\n</code></pre><h4 id=\"四、任务队列和事件循环\"><a href=\"#四、任务队列和事件循环\" class=\"headerlink\" title=\"四、任务队列和事件循环\"></a>四、任务队列和事件循环</h4><pre><code>了解任务队列之前，先了解一下任务源，我们将发起异步任务的称之为任务源（setTimeout、Promise等），进入任务队列的是他们指定的任务。\n在一个线程中，事件循环是唯一的，任务队列是多个的。来自不同任务源的队列进入到不同的任务队列，setTimeout和setInterval是同源的\n</code></pre><h5 id=\"事件循环的步骤：\"><a href=\"#事件循环的步骤：\" class=\"headerlink\" title=\"事件循环的步骤：\"></a>事件循环的步骤：</h5><pre><code>1、运行主线程（函数调用栈）中的同步任务\n2、主线程（函数调用栈）执行到任务源时，通知相应的webAPIs进行相应的执行异步任务，将任务源指定的异步任务放入任务队列中\n3、主线程（函数调用栈）中的任务执行完毕后，然后执行所有的微任务，再执行宏任务，找到一个任务队列执行完毕，再执行所有的微任务\n4、不断执行第三步\n</code></pre><blockquote>\n<p>事件循环：指主线程重复从任务队列中取消息，执行的过程</p>\n</blockquote>\n<p>先来一个简单的例子：</p>\n<pre><code>setTimeout(() =&gt; {\n    console.log(&apos;begin&apos;)\n})\n\nnew Promise((resolve) =&gt; {\n    console.log(&apos;promise begin&apos;)\n    for(let i = 0; i &lt; 1000; i++) {\n        i == 999 &amp;&amp; resolve()\n    }\n}).then(() =&gt; {\n    console.log(&apos;then begin&apos;)\n})\n\nconsole.log(&apos;end&apos;)\n</code></pre><p>因为promise的构造函数是同步的，promise.then是异步的微任务，所以promise beigin先于end<br>根据上面对宏任务和微任务的分析，其输出的情况为【promise begin——end——then begin——begin】<br>再来一个复杂点的，我们来一步一步的分析一个例子来看：</p>\n<pre><code>console.log(&apos;golb1&apos;);\n\nsetTimeout(function() {\n    console.log(&apos;timeout1&apos;);\n    process.nextTick(function() {\n        console.log(&apos;timeout1_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;timeout1_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;timeout1_then&apos;)\n    })\n})\n\nsetImmediate(function() {\n    console.log(&apos;immediate1&apos;);\n    process.nextTick(function() {\n        console.log(&apos;immediate1_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;immediate1_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;immediate1_then&apos;)\n    })\n})\n\nprocess.nextTick(function() {\n    console.log(&apos;glob1_nextTick&apos;);\n})\n\nnew Promise(function(resolve) {\n    console.log(&apos;glob1_promise&apos;);\n    resolve();\n}).then(function() {\n    console.log(&apos;glob1_then&apos;)\n})\n\nsetTimeout(function() {\n    console.log(&apos;timeout2&apos;);\n    process.nextTick(function() {\n        console.log(&apos;timeout2_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;timeout2_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;timeout2_then&apos;)\n    })\n})\n\nprocess.nextTick(function() {\n    console.log(&apos;glob2_nextTick&apos;);\n})\n\nnew Promise(function(resolve) {\n    console.log(&apos;glob2_promise&apos;);\n    resolve();\n}).then(function() {\n    console.log(&apos;glob2_then&apos;)\n})\n\nsetImmediate(function() {\n    console.log(&apos;immediate2&apos;);\n    process.nextTick(function() {\n        console.log(&apos;immediate2_nextTick&apos;);\n    })\n    new Promise(function(resolve) {\n        console.log(&apos;immediate2_promise&apos;);\n        resolve();\n    }).then(function() {\n        console.log(&apos;immediate2_then&apos;)\n    })\n})\n</code></pre><p>一、第一步、首先执行宏任务script。全局入栈。输出glob1</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d563d442f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>二、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8926f643?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>三、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d56422aa4?imageslim\" alt=\"\"></p>\n<p>四、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d8eefb889?imageslim\" alt=\"\"></p>\n<p>五、遇到Promise的构造函数，进入执行栈，输出glob1_promise，Promise.then()作为任务源，将指定的任务加入微任务</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d565af410?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>六、遇到setTimeout，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d6135495e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>七、遇到process.nextTick，作为任务源，将指定的任务加入微任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61da8ad8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>八、遇到Promise的构造函数，进入执行栈，输出glob2_promise，Promise.then()作为任务源，将指定的任务加入微任务</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d61c59908?imageslim\" alt=\"\"></p>\n<p>九、遇到setImmediate，作为任务源，将指定的任务加入宏任务队列</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d82ecee97?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>十、执行所有微任务队列，输出glob1_nextTick和glob2_nextTick、glob1_then、glob2_then</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/19/1623d52d83193a9d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<blockquote>\n<p>事件机制其实就是异步任务的通知机制</p>\n</blockquote>\n"},{"title":"常用工具类的封装（javascript）","date":"2018-05-23T08:26:10.000Z","_content":"\n<br/>\n\n本文转载过来\n作者：cd-dongzi\n链接：https://juejin.im/post/5a7523af5188257a7d6e028e\n来源：掘金\n\n在工作中经常用到这些工具类的封装\n\n> Javascript\n\n#### type 类型判断\n    isString (o) { //是否字符串\n        return Object.prototype.toString.call(o).slice(8, -1) === 'String'\n    }\n\n    isNumber (o) { //是否数字\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Number'\n    }\n\n    isBoolean (o) { //是否boolean\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Boolean'\n    }\n\n    isFunction (o) { //是否函数\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Function'\n    }\n\n    isNull (o) { //是否为null\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Null'\n    }\n\n    isUndefined (o) { //是否undefined\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Undefined'\n    }\n\n    isObj (o) { //是否对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Object'\n    }\n\n    isArray (o) { //是否数组\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Array'\n    }\n\n    isDate (o) { //是否时间\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Date'\n    }\n\n    isRegExp (o) { //是否正则\n        return Object.prototype.toString.call(o).slice(8, -1) === 'RegExp'\n    }\n\n    isError (o) { //是否错误对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Error'\n    }\n\n    isSymbol (o) { //是否Symbol函数\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Symbol'\n    }\n\n    isPromise (o) { //是否Promise对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Promise'\n    }\n\n    isSet (o) { //是否Set对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Set'\n    }\n\n\n\n    isFalse (o) {\n        if (!o || o === 'null' || o === 'undefined' || o === 'false' || o === 'NaN') return true\n            return false\n    }\n\n    isTrue (o) {\n        return !this.isFalse(o)\n    }\n\n    isIos () {\n        var u = navigator.userAgent;\n        if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {//安卓手机\n            // return \"Android\";\n            return false\n        } else if (u.indexOf('iPhone') > -1) {//苹果手机\n            // return \"iPhone\";\n            return true\n        } else if (u.indexOf('iPad') > -1) {//iPad\n            // return \"iPad\";\n            return false\n        } else if (u.indexOf('Windows Phone') > -1) {//winphone手机\n            // return \"Windows Phone\";\n            return false\n        }else{\n            return false\n        }\n    }\n\n    isPC () { //是否为PC端\n        var userAgentInfo = navigator.userAgent;\n        var Agents = [\"Android\", \"iPhone\",\n                    \"SymbianOS\", \"Windows Phone\",\n                    \"iPad\", \"iPod\"];\n        var flag = true;\n        for (var v = 0; v < Agents.length; v++) {\n            if (userAgentInfo.indexOf(Agents[v]) > 0) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    browserType(){\n        var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n        var isOpera = userAgent.indexOf(\"Opera\") > -1; //判断是否Opera浏览器\n        var isIE = userAgent.indexOf(\"compatible\") > -1 && userAgent.indexOf(\"MSIE\") > -1 && !isOpera; //判断是否IE浏览器\n        var isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf(\"rv:11.0\") > -1;\n        var isEdge = userAgent.indexOf(\"Edge\") > -1 && !isIE; //判断是否IE的Edge浏览器  \n        var isFF = userAgent.indexOf(\"Firefox\") > -1; //判断是否Firefox浏览器\n        var isSafari = userAgent.indexOf(\"Safari\") > -1 && userAgent.indexOf(\"Chrome\") == -1; //判断是否Safari浏览器\n        var isChrome = userAgent.indexOf(\"Chrome\") > -1 && userAgent.indexOf(\"Safari\") > -1; //判断Chrome浏览器\n\n        if (isIE) {\n            var reIE = new RegExp(\"MSIE (\\\\d+\\\\.\\\\d+);\");\n            reIE.test(userAgent);\n            var fIEVersion = parseFloat(RegExp[\"$1\"]);\n            if(fIEVersion == 7) return \"IE7\"\n            else if(fIEVersion == 8) return \"IE8\";\n            else if(fIEVersion == 9) return \"IE9\";\n            else if(fIEVersion == 10) return \"IE10\";\n            else return \"IE7以下\"//IE版本过低\n        }\n        if (isIE11) return 'IE11';\n        if (isEdge) return \"Edge\";\n        if (isFF) return \"FF\";\n        if (isOpera) return \"Opera\";\n        if (isSafari) return \"Safari\";\n        if (isChrome) return \"Chrome\";\n    }\n\n    checkStr (str, type) {\n        switch (type) {\n            case 'phone':   //手机号码\n                return /^1[3|4|5|6|7|8|9][0-9]{9}$/.test(str);\n            case 'tel':     //座机\n                return /^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$/.test(str);\n            case 'card':    //身份证\n                return /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(str);\n            case 'pwd':     //密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线\n                return /^[a-zA-Z]\\w{5,17}$/.test(str)\n            case 'postal':  //邮政编码\n                return /[1-9]\\d{5}(?!\\d)/.test(str);\n            case 'QQ':      //QQ号\n                return /^[1-9][0-9]{4,9}$/.test(str);\n            case 'email':   //邮箱\n                return /^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/.test(str);\n            case 'money':   //金额(小数点2位)\n                return /^\\d*(?:\\.\\d{0,2})?$/.test(str);\n            case 'URL':     //网址\n                return /(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?/.test(str)\n            case 'IP':      //IP\n                return /((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))/.test(str);\n            case 'date':    //日期时间\n                return /^(\\d{4})\\-(\\d{2})\\-(\\d{2}) (\\d{2})(?:\\:\\d{2}|:(\\d{2}):(\\d{2}))$/.test(str) || /^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/.test(str)\n            case 'number':  //数字\n                return /^[0-9]$/.test(str);\n            case 'english': //英文\n                return /^[a-zA-Z]+$/.test(str);\n            case 'chinese': //中文\n                return /^[\\u4E00-\\u9FA5]+$/.test(str);\n            case 'lower':   //小写\n                return /^[a-z]+$/.test(str);\n            case 'upper':   //大写\n                return /^[A-Z]+$/.test(str);\n            case 'HTML':    //HTML标记\n                return /<(\"[^\"]*\"|'[^']*'|[^'\">])*>/.test(str);\n            default:\n                return true;\n        }\n        \n        // 严格的身份证校验\n        isCardID(sId) {\n            if (!/(^\\d{15}$)|(^\\d{17}(\\d|X|x)$)/.test(sId)) {\n                alert('你输入的身份证长度或格式错误')\n                return false\n            }\n            //身份证城市\n            var aCity={11:\"北京\",12:\"天津\",13:\"河北\",14:\"山西\",15:\"内蒙古\",21:\"辽宁\",22:\"吉林\",23:\"黑龙江\",31:\"上海\",32:\"江苏\",33:\"浙江\",34:\"安徽\",35:\"福建\",36:\"江西\",37:\"山东\",41:\"河南\",42:\"湖北\",43:\"湖南\",44:\"广东\",45:\"广西\",46:\"海南\",50:\"重庆\",51:\"四川\",52:\"贵州\",53:\"云南\",54:\"西藏\",61:\"陕西\",62:\"甘肃\",63:\"青海\",64:\"宁夏\",65:\"新疆\",71:\"台湾\",81:\"香港\",82:\"澳门\",91:\"国外\"};\n            if(!aCity[parseInt(sId.substr(0,2))]) { \n                alert('你的身份证地区非法')\n                return false\n            }\n\n            // 出生日期验证\n            var sBirthday=(sId.substr(6,4)+\"-\"+Number(sId.substr(10,2))+\"-\"+Number(sId.substr(12,2))).replace(/-/g,\"/\"),\n                d = new Date(sBirthday)\n            if(sBirthday != (d.getFullYear()+\"/\"+ (d.getMonth()+1) + \"/\" + d.getDate())) {\n                alert('身份证上的出生日期非法')\n                return false\n            }\n\n            // 身份证号码校验\n            var sum = 0,\n                weights =  [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2],\n                codes = \"10X98765432\"\n            for (var i = 0; i < sId.length - 1; i++) {\n                sum += sId[i] * weights[i];\n            }\n            var last = codes[sum % 11]; //计算出来的最后一位身份证号码\n            if (sId[sId.length-1] != last) { \n                alert('你输入的身份证号非法')\n                return false\n            }\n            \n            return true\n        }\n    }\n\n\n####  Date\n\n/**\n    * 格式化时间\n    * \n    * @param  {time} 时间\n    * @param  {cFormat} 格式\n    * @return {String} 字符串\n    *\n    * @example formatTime('2018-1-29', '{y}/{m}/{d} {h}:{i}:{s}') // -> 2018/01/29 00:00:00\n*/\n\n    formatTime(time, cFormat) {\n        if (arguments.length === 0) return null\n        if ((time + '').length === 10) {\n            time = +time * 1000\n        }\n\n        var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}', date\n        if (typeof time === 'object') {\n            date = time\n        } else {\n            date = new Date(time)\n        }\n\n        var formatObj = {\n            y: date.getFullYear(),\n            m: date.getMonth() + 1,\n            d: date.getDate(),\n            h: date.getHours(),\n            i: date.getMinutes(),\n            s: date.getSeconds(),\n            a: date.getDay()\n        }\n        var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n            var value = formatObj[key]\n            if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]\n            if (result.length > 0 && value < 10) {\n                value = '0' + value\n            }\n            return value || 0\n        })\n        return time_str\n    }\n\n\n/**\n    * 返回指定长度的月份集合\n    * \n    * @param  {time} 时间\n    * @param  {len} 长度\n    * @param  {direction} 方向：  1: 前几个月;  2: 后几个月;  3:前后几个月  默认 3\n    * @return {Array} 数组\n    * \n    * @example   getMonths('2018-1-29', 6, 1)  // ->  [\"2018-1\", \"2017-12\", \"2017-11\", \"2017-10\", \"2017-9\", \"2017-8\", \"2017-7\"]\n*/\n\n    getMonths(time, len, direction) {\n        var mm = new Date(time).getMonth(),\n            yy = new Date(time).getFullYear(),\n            direction = isNaN(direction) ? 3 : direction,\n            index = mm;\n        var cutMonth = function(index) {\n            if ( index <= len && index >= -len) {\n                return direction === 1 ? formatPre(index).concat(cutMonth(++index)):\n                    direction === 2 ? formatNext(index).concat(cutMonth(++index)):formatCurr(index).concat(cutMonth(++index))\n            }\n            return []\n        }\n        var formatNext = function(i) {\n            var y = Math.floor(i/12),\n                m = i%12\n            return [yy+y + '-' + (m+1)]\n        }\n        var formatPre = function(i) {\n            var y = Math.ceil(i/12),\n                m = i%12\n            m = m===0 ? 12 : m\n            return [yy-y + '-' + (13 - m)]\n        }\n        var formatCurr = function(i) {\n            var y = Math.floor(i/12),\n                yNext = Math.ceil(i/12),\n                m = i%12,\n                mNext = m===0 ? 12 : m\n            return [yy-yNext + '-' + (13 - mNext),yy+y + '-' + (m+1)]\n        }\n        // 数组去重\n        var unique = function(arr) {\n            if ( Array.hasOwnProperty('from') ) {\n                return Array.from(new Set(arr));\n            }else{\n                var n = {},r=[]; \n                for(var i = 0; i < arr.length; i++){\n                    if (!n[arr[i]]){\n                        n[arr[i]] = true; \n                        r.push(arr[i]);\n                    }\n                }\n                return r;\n            }\n        }\n        return direction !== 3 ? cutMonth(index) : unique(cutMonth(index).sort(function(t1, t2){\n            return new Date(t1).getTime() - new Date(t2).getTime()\n        }))\n    }\n\n\n\n/**\n    * 返回指定长度的天数集合\n    * \n    * @param  {time} 时间\n    * @param  {len} 长度\n    * @param  {direction} 方向： 1: 前几天;  2: 后几天;  3:前后几天  默认 3\n    * @return {Array} 数组\n    *\n    * @example date.getDays('2018-1-29', 6) // -> [\"2018-1-26\", \"2018-1-27\", \"2018-1-28\", \"2018-1-29\", \"2018-1-30\", \"2018-1-31\", \"2018-2-1\"]\n*/\n\n    getDays(time, len, diretion) {\n        var tt = new Date(time)\n        var getDay = function(day) {\n            var t = new Date(time)\n            t.setDate(t.getDate() + day)\n            var m = t.getMonth()+1\n            return t.getFullYear()+'-'+m+'-'+t.getDate()\n        }\n        var arr = []\n        if (diretion === 1) {\n            for (var i = 1; i <= len; i++) {\n                arr.unshift(getDay(-i))\n            }\n        }else if(diretion === 2) {\n            for (var i = 1; i <= len; i++) {\n                arr.push(getDay(i))\n            }\n        }else {\n            for (var i = 1; i <= len; i++) {\n                arr.unshift(getDay(-i))\n            }\n            arr.push(tt.getFullYear()+'-'+(tt.getMonth()+1)+'-'+tt.getDate())\n            for (var i = 1; i <= len; i++) {\n                arr.push(getDay(i))\n            }\n        }\n        return diretion === 1 ? arr.concat([tt.getFullYear()+'-'+(tt.getMonth()+1)+'-'+tt.getDate()]) : \n            diretion === 2 ? [tt.getFullYear()+'-'+(tt.getMonth()+1)+'-'+tt.getDate()].concat(arr) : arr\n    }\n\n\n/**\n    * @param  {s} 秒数\n    * @return {String} 字符串 \n    *\n    * @example formatHMS(3610) // -> 1h0m10s\n*/\n\n    formatHMS (s) {\n        var str = ''\n        if (s > 3600) {\n            str = Math.floor(s/3600)+'h'+Math.floor(s%3600/60)+'m'+s%60+'s'\n        }else if(s > 60) {\n            str = Math.floor(s/60)+'m'+s%60+'s'\n        }else{\n            str = s%60+'s'\n        }\n        return str\n    }\n\n    /*获取某月有多少天*/\n    getMonthOfDay (time) {\n        var date = new Date(time)\n        var year = date.getFullYear()\n        var mouth = date.getMonth() + 1\n        var days\n\n        //当月份为二月时，根据闰年还是非闰年判断天数\n        if (mouth == 2) {\n            days = (year%4==0 && year%100==0 && year%400==0) || (year%4==0 && year%100!=0) ? 28 : 29\n        } else if (mouth == 1 || mouth == 3 || mouth == 5 || mouth == 7 || mouth == 8 || mouth == 10 || mouth == 12) {\n            //月份为：1,3,5,7,8,10,12 时，为大月.则天数为31；\n            days = 31\n        } else {\n            //其他月份，天数为：30.\n            days = 30\n        }\n        return days\n    }\n\n    /*获取某年有多少天*/\n    getYearOfDay (time) {\n        var firstDayYear = this.getFirstDayOfYear(time);\n        var lastDayYear = this.getLastDayOfYear(time);\n        var numSecond = (new Date(lastDayYear).getTime() - new Date(firstDayYear).getTime())/1000;\n        return Math.ceil(numSecond/(24*3600));\n    }\n\n    /*获取某年的第一天*/\n    getFirstDayOfYear (time) {\n        var year = new Date(time).getFullYear();\n        return year + \"-01-01 00:00:00\";\n    }\n\n    /*获取某年最后一天*/\n    getLastDayOfYear (time) {\n        var year = new Date(time).getFullYear();\n        var dateString = year + \"-12-01 00:00:00\";\n        var endDay = this.getMonthOfDay(dateString);\n        return year + \"-12-\" + endDay + \" 23:59:59\";\n    }\n\n    /*获取某个日期是当年中的第几天*/\n    getDayOfYear (time) {\n        var firstDayYear = this.getFirstDayOfYear(time);\n        var numSecond = (new Date(time).getTime() - new Date(firstDayYear).getTime())/1000;\n        return Math.ceil(numSecond/(24*3600));\n    }\n\n    /*获取某个日期在这一年的第几周*/\n    getDayOfYearWeek (time) {\n        var numdays = this.getDayOfYear(time);\n        return Math.ceil(numdays / 7);\n    }\n\n#### Array\n\n    /*判断一个元素是否在数组中*/\n    contains (arr, val) {\n        return arr.indexOf(val) != -1 ? true : false;\n    }\n\n\n    /**\n    * @param  {arr} 数组\n    * @param  {fn} 回调函数\n    * @return {undefined}\n    */\n    each (arr, fn) {\n        fn = fn || Function;\n        var a = [];\n        var args = Array.prototype.slice.call(arguments, 1);\n        for(var i = 0; i < arr.length; i++) {\n            var res = fn.apply(arr, [arr[i], i].concat(args));\n            if(res != null) a.push(res);\n        }\n    }\n\n    /**\n    * @param  {arr} 数组\n    * @param  {fn} 回调函数\n    * @param  {thisObj} this指向\n    * @return {Array} \n    */\n    map (arr, fn, thisObj) {\n        var scope = thisObj || window;\n        var a = [];\n        for(var i = 0, j = arr.length; i < j; ++i) {\n            var res = fn.call(scope, arr[i], i, this);\n            if(res != null) a.push(res);\n        }\n        return a;\n    }\n\n\n    /**\n    * @param  {arr} 数组\n    * @param  {type} 1：从小到大   2：从大到小   3：随机\n    * @return {Array}\n    */\n    sort (arr, type = 1) {\n        return arr.sort( (a, b) => {\n            switch(type) {\n                case 1:\n                    return a - b;\n                case 2:\n                    return b - a;\n                case 3:\n                    return Math.random() - 0.5;\n                default:\n                    return arr;\n            }\n        })\n    }\n\n    /*去重*/\n    unique (arr) {\n        if ( Array.hasOwnProperty('from') ) {\n            return Array.from(new Set(arr));\n        }else{\n            var n = {},r=[]; \n            for(var i = 0; i < arr.length; i++){\n                if (!n[arr[i]]){\n                    n[arr[i]] = true; \n                    r.push(arr[i]);\n                }\n            }\n            return r;\n        }\n        // 注：上面 else 里面的排重并不能区分 2 和 '2'，但能减少用indexOf带来的性能,暂时没找到替代的方法。。。\n        /* 正确排重\n        if ( Array.hasOwnProperty('from') ) {\n            return Array.from(new Set(arr))\n        }else{\n            var r = [], NaNBol = true\n            for(var i=0; i < arr.length; i++) {\n                if (arr[i] !== arr[i]) {\n                    if (NaNBol && r.indexOf(arr[i]) === -1) {\n                        r.push(arr[i])\n                        NaNBol = false\n                    }\n                }else{\n                    if(r.indexOf(arr[i]) === -1) r.push(arr[i])\n                }\n            }\n            return r\n        }\n\n        */\n    }\n\n\n    /*求两个集合的并集*/\n    union (a, b) {\n        var newArr = a.concat(b);\n        return this.unique(newArr);\n    }\n\n    /*求两个集合的交集*/\n    intersect (a, b) {\n        var _this = this;\n        a = this.unique(a);\n        return this.map(a, function(o) {\n            return _this.contains(b, o) ? o : null;\n        });\n    }\n\n    /*删除其中一个元素*/\n    remove (arr, ele) {\n        var index = arr.indexOf(ele);\n        if(index > -1) {\n            arr.splice(index, 1);\n        }\n        return arr;\n    }\n\n    /*将类数组转换为数组的方法*/\n    formArray (ary) {\n        var arr = [];\n        if(Array.isArray(ary)) {\n            arr = ary;\n        } else {\n            arr = Array.prototype.slice.call(ary);\n        };\n        return arr;\n    }\n\n    /*最大值*/\n    max (arr) {\n        return Math.max.apply(null, arr);\n    }\n\n    /*最小值*/\n    min (arr) {\n        return Math.min.apply(null, arr);\n    }\n\n    /*求和*/\n    sum (arr) {\n        return arr.reduce( (pre, cur) => {\n            return pre + cur\n        })\n    }\n\n    /*平均值*/\n    average (arr) {\n        return this.sum(arr)/arr.length\n    }\n\n#### String 字符串操作\n\n/**\n    * 去除空格\n    * @param  {str}\n    * @param  {type} \n    *       type:  1-所有空格  2-前后空格  3-前空格 4-后空格\n    * @return {String}\n*/\n\n    trim (str, type) {\n        type = type || 1\n        switch (type) {\n            case 1:\n                return str.replace(/\\s+/g, \"\");\n            case 2:\n                return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n            case 3:\n                return str.replace(/(^\\s*)/g, \"\");\n            case 4:\n                return str.replace(/(\\s*$)/g, \"\");\n            default:\n                return str;\n        }\n    }\n\n/**\n    * @param  {str} \n    * @param  {type}\n    *       type:  1:首字母大写  2：首页母小写  3：大小写转换  4：全部大写  5：全部小写\n    * @return {String}\n*/\n\n    changeCase (str, type) {\n        type = type || 4\n        switch (type) {\n            case 1:\n                return str.replace(/\\b\\w+\\b/g, function (word) {\n                    return word.substring(0, 1).toUpperCase() + word.substring(1).toLowerCase();\n\n                });\n            case 2:\n                return str.replace(/\\b\\w+\\b/g, function (word) {\n                    return word.substring(0, 1).toLowerCase() + word.substring(1).toUpperCase();\n                });\n            case 3:\n                return str.split('').map( function(word){\n                    if (/[a-z]/.test(word)) {\n                        return word.toUpperCase();\n                    }else{\n                        return word.toLowerCase()\n                    }\n                }).join('')\n            case 4:\n                return str.toUpperCase();\n            case 5:\n                return str.toLowerCase();\n            default:\n                return str;\n        }\n    }\n\n\n/*\n    检测密码强度\n*/\n\n    checkPwd (str) {\n        var Lv = 0;\n        if (str.length < 6) {\n            return Lv\n        }\n        if (/[0-9]/.test(str)) {\n            Lv++\n        }\n        if (/[a-z]/.test(str)) {\n            Lv++\n        }\n        if (/[A-Z]/.test(str)) {\n            Lv++\n        }\n        if (/[\\.|-|_]/.test(str)) {\n            Lv++\n        }\n        return Lv;\n    }\n\n    /*过滤html代码(把<>转换)*/\n    filterTag (str) {\n        str = str.replace(/&/ig, \"&amp;\");\n        str = str.replace(/</ig, \"&lt;\");\n        str = str.replace(/>/ig, \"&gt;\");\n        str = str.replace(\" \", \"&nbsp;\");\n        return str;\n    }\n\n#### Number\n\n/*随机数范围*/\nrandom (min, max) {\n    if (arguments.length === 2) {\n        return Math.floor(min + Math.random() * ( (max+1) - min ))\n    }else{\n        return null;\n    }\n    \n}\n\n/*将阿拉伯数字翻译成中文的大写数字*/\nnumberToChinese (num) {\n    var AA = new Array(\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\", \"十\");\n    var BB = new Array(\"\", \"十\", \"百\", \"仟\", \"萬\", \"億\", \"点\", \"\");\n    var a = (\"\" + num).replace(/(^0*)/g, \"\").split(\".\"),\n        k = 0,\n        re = \"\";\n    for(var i = a[0].length - 1; i >= 0; i--) {\n        switch(k) {\n            case 0:\n                re = BB[7] + re;\n                break;\n            case 4:\n                if(!new RegExp(\"0{4}//d{\" + (a[0].length - i - 1) + \"}$\")\n                    .test(a[0]))\n                    re = BB[4] + re;\n                break;\n            case 8:\n                re = BB[5] + re;\n                BB[7] = BB[5];\n                k = 0;\n                break;\n        }\n        if(k % 4 == 2 && a[0].charAt(i + 2) != 0 && a[0].charAt(i + 1) == 0)\n            re = AA[0] + re;\n        if(a[0].charAt(i) != 0)\n            re = AA[a[0].charAt(i)] + BB[k % 4] + re;\n        k++;\n    }\n\n    if(a.length > 1) // 加上小数部分(如果有小数部分)\n    {\n        re += BB[6];\n        for(var i = 0; i < a[1].length; i++)\n            re += AA[a[1].charAt(i)];\n    }\n    if(re == '一十')\n        re = \"十\";\n    if(re.match(/^一/) && re.length == 3)\n        re = re.replace(\"一\", \"\");\n    return re;\n}\n\n/*将数字转换为大写金额*/\nchangeToChinese (Num) {\n        //判断如果传递进来的不是字符的话转换为字符\n        if(typeof Num == \"number\") {\n            Num = new String(Num);\n        };\n        Num = Num.replace(/,/g, \"\") //替换tomoney()中的“,”\n        Num = Num.replace(/ /g, \"\") //替换tomoney()中的空格\n        Num = Num.replace(/￥/g, \"\") //替换掉可能出现的￥字符\n        if(isNaN(Num)) { //验证输入的字符是否为数字\n            //alert(\"请检查小写金额是否正确\");\n            return \"\";\n        };\n        //字符处理完毕后开始转换，采用前后两部分分别转换\n        var part = String(Num).split(\".\");\n        var newchar = \"\";\n        //小数点前进行转化\n        for(var i = part[0].length - 1; i >= 0; i--) {\n            if(part[0].length > 10) {\n                return \"\";\n                //若数量超过拾亿单位，提示\n            }\n            var tmpnewchar = \"\"\n            var perchar = part[0].charAt(i);\n            switch(perchar) {\n                case \"0\":\n                    tmpnewchar = \"零\" + tmpnewchar;\n                    break;\n                case \"1\":\n                    tmpnewchar = \"壹\" + tmpnewchar;\n                    break;\n                case \"2\":\n                    tmpnewchar = \"贰\" + tmpnewchar;\n                    break;\n                case \"3\":\n                    tmpnewchar = \"叁\" + tmpnewchar;\n                    break;\n                case \"4\":\n                    tmpnewchar = \"肆\" + tmpnewchar;\n                    break;\n                case \"5\":\n                    tmpnewchar = \"伍\" + tmpnewchar;\n                    break;\n                case \"6\":\n                    tmpnewchar = \"陆\" + tmpnewchar;\n                    break;\n                case \"7\":\n                    tmpnewchar = \"柒\" + tmpnewchar;\n                    break;\n                case \"8\":\n                    tmpnewchar = \"捌\" + tmpnewchar;\n                    break;\n                case \"9\":\n                    tmpnewchar = \"玖\" + tmpnewchar;\n                    break;\n            }\n            switch(part[0].length - i - 1) {\n                case 0:\n                    tmpnewchar = tmpnewchar + \"元\";\n                    break;\n                case 1:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"拾\";\n                    break;\n                case 2:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"佰\";\n                    break;\n                case 3:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"仟\";\n                    break;\n                case 4:\n                    tmpnewchar = tmpnewchar + \"万\";\n                    break;\n                case 5:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"拾\";\n                    break;\n                case 6:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"佰\";\n                    break;\n                case 7:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"仟\";\n                    break;\n                case 8:\n                    tmpnewchar = tmpnewchar + \"亿\";\n                    break;\n                case 9:\n                    tmpnewchar = tmpnewchar + \"拾\";\n                    break;\n            }\n            var newchar = tmpnewchar + newchar;\n        }\n        //小数点之后进行转化\n        if(Num.indexOf(\".\") != -1) {\n            if(part[1].length > 2) {\n                // alert(\"小数点之后只能保留两位,系统将自动截断\");\n                part[1] = part[1].substr(0, 2)\n            }\n            for(i = 0; i < part[1].length; i++) {\n                tmpnewchar = \"\"\n                perchar = part[1].charAt(i)\n                switch(perchar) {\n                    case \"0\":\n                        tmpnewchar = \"零\" + tmpnewchar;\n                        break;\n                    case \"1\":\n                        tmpnewchar = \"壹\" + tmpnewchar;\n                        break;\n                    case \"2\":\n                        tmpnewchar = \"贰\" + tmpnewchar;\n                        break;\n                    case \"3\":\n                        tmpnewchar = \"叁\" + tmpnewchar;\n                        break;\n                    case \"4\":\n                        tmpnewchar = \"肆\" + tmpnewchar;\n                        break;\n                    case \"5\":\n                        tmpnewchar = \"伍\" + tmpnewchar;\n                        break;\n                    case \"6\":\n                        tmpnewchar = \"陆\" + tmpnewchar;\n                        break;\n                    case \"7\":\n                        tmpnewchar = \"柒\" + tmpnewchar;\n                        break;\n                    case \"8\":\n                        tmpnewchar = \"捌\" + tmpnewchar;\n                        break;\n                    case \"9\":\n                        tmpnewchar = \"玖\" + tmpnewchar;\n                        break;\n                }\n                if(i == 0) tmpnewchar = tmpnewchar + \"角\";\n                if(i == 1) tmpnewchar = tmpnewchar + \"分\";\n                newchar = newchar + tmpnewchar;\n            }\n        }\n        //替换所有无用汉字\n        while(newchar.search(\"零零\") != -1)\n            newchar = newchar.replace(\"零零\", \"零\");\n        newchar = newchar.replace(\"零亿\", \"亿\");\n        newchar = newchar.replace(\"亿万\", \"亿\");\n        newchar = newchar.replace(\"零万\", \"万\");\n        newchar = newchar.replace(\"零元\", \"元\");\n        newchar = newchar.replace(\"零角\", \"\");\n        newchar = newchar.replace(\"零分\", \"\");\n        if(newchar.charAt(newchar.length - 1) == \"元\") {\n            newchar = newchar + \"整\"\n        }\n        return newchar;\n    }\n\n#### Http\n\n/**\n    * @param  {setting}\n*/\n\n    ajax(setting){\n        //设置参数的初始值\n        var opts={\n            method: (setting.method || \"GET\").toUpperCase(), //请求方式\n            url: setting.url || \"\", // 请求地址\n            async: setting.async || true, // 是否异步\n            dataType: setting.dataType || \"json\", // 解析方式\n            data: setting.data || \"\", // 参数\n            success: setting.success || function(){}, // 请求成功回调\n            error: setting.error || function(){} // 请求失败回调\n        }\n\n        // 参数格式化\n        function params_format (obj) {\n            var str = ''\n            for (var i in obj) {\n                str += i + '=' + obj[i] + '&'\n            }\n            return str.split('').slice(0, -1).join('')\n        }\n\n        // 创建ajax对象\n        var xhr=new XMLHttpRequest();\n\n        // 连接服务器open(方法GET/POST，请求地址， 异步传输)\n        if(opts.method == 'GET'){\n            xhr.open(opts.method, opts.url + \"?\" + params_format(opts.data), opts.async);\n            xhr.send();\n        }else{\n            xhr.open(opts.method, opts.url, opts.async);\n            xhr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n            xhr.send(opts.data);\n        }\n        \n/*\n    ** 每当readyState改变时，就会触发onreadystatechange事件\n    ** readyState属性存储有XMLHttpRequest的状态信息\n    ** 0 ：请求未初始化\n    ** 1 ：服务器连接已建立\n    ** 2 ：请求已接受\n    ** 3 : 请求处理中\n    ** 4 ：请求已完成，且相应就绪\n*/\n\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState === 4 && (xhr.status === 200 || xhr.status === 304)) {\n                switch(opts.dataType){\n                    case \"json\":\n                        var json = JSON.parse(xhr.responseText);\n                        opts.success(json);\n                        break;\n                    case \"xml\":\n                        opts.success(xhr.responseXML);\n                        break;\n                    default:\n                        opts.success(xhr.responseText);\n                        break;\n                }\n            }\n        }\n\n        xhr.onerror = function(err) {\n            opts.error(err);\n        }\n    }\n\n/**\n    * @param  {url}\n    * @param  {setting}\n    * @return {Promise}\n*/\n\n    fetch(url, setting) {\n        //设置参数的初始值\n        let opts={\n            method: (setting.method || 'GET').toUpperCase(), //请求方式\n            headers : setting.headers  || {}, // 请求头设置\n            credentials : setting.credentials  || true, // 设置cookie是否一起发送\n            body: setting.body || {},\n            mode : setting.mode  || 'no-cors', // 可以设置 cors, no-cors, same-origin\n            redirect : setting.redirect  || 'follow', // follow, error, manual\n            cache : setting.cache  || 'default' // 设置 cache 模式 (default, reload, no-cache)\n        }\n        let dataType = setting.dataType || \"json\", // 解析方式  \n            data = setting.data || \"\" // 参数\n\n        // 参数格式化\n        function params_format (obj) {\n            var str = ''\n            for (var i in obj) {\n                str += `${i}=${obj[i]}&`\n            }\n            return str.split('').slice(0, -1).join('')\n        }\n\n        if (opts.method === 'GET') {\n            url = url + (data?`?${params_format(data)}`:'')\n        }else{\n            setting.body = data || {}\n        }\n\n        return new Promise( (resolve, reject) => {\n            fetch(url, opts).then( async res => {\n                let data = dataType === 'text' ? await res.text() :\n                    dataType === 'blob' ? await res.blob() : await res.json() \n                resolve(data)\n            }).catch( e => {\n                reject(e)\n            })\n        })\n        \n    }\n\n#### DOM\n    $ (selector){ \n        var type = selector.substring(0, 1);\n        if (type === '#') {\n            if (document.querySelecotor) return document.querySelector(selector)\n                return document.getElementById(selector.substring(1))\n            \n        }else if (type === '.') {\n            if (document.querySelecotorAll) return document.querySelectorAll(selector)\n                return document.getElementsByClassName(selector.substring(1))\n        }else{\n            return document['querySelectorAll' ? 'querySelectorAll':'getElementsByTagName'](selector)\n        }\n    } \n\n    /*检测类名*/\n    hasClass (ele, name) {\n        return ele.className.match(new RegExp('(\\\\s|^)' + name + '(\\\\s|$)'));\n    }\n\n    /*添加类名*/\n    addClass (ele, name) {\n        if (!this.hasClass(ele, name)) ele.className += \" \" + name;\n    }\n\n    /*删除类名*/\n    removeClass (ele, name) {\n        if (this.hasClass(ele, name)) {\n            var reg = new RegExp('(\\\\s|^)' + name + '(\\\\s|$)');\n            ele.className = ele.className.replace(reg, '');\n        }\n    }\n\n    /*替换类名*/\n    replaceClass (ele, newName, oldName) {\n        this.removeClass(ele, oldName);\n        this.addClass(ele, newName);\n    }\n\n    /*获取兄弟节点*/\n    siblings (ele) {\n        console.log(ele.parentNode)\n        var chid = ele.parentNode.children,eleMatch = []; \n        for(var i = 0, len = chid.length; i < len; i ++){ \n            if(chid[i] != ele){ \n                eleMatch.push(chid[i]); \n            } \n        } \n        return eleMatch;\n    }\n\n    /*获取行间样式属性*/\n    getByStyle (obj,name){\n        if(obj.currentStyle){\n            return  obj.currentStyle[name];\n        }else{\n            return  getComputedStyle(obj,false)[name];\n        }\n    }\n\n#### Storage 储存操作\n\n    class StorageFn {\n        constructor () {\n            this.ls = window.localStorage;\n            this.ss = window.sessionStorage;\n        }\n\n        /*-----------------cookie---------------------*/\n        /*设置cookie*/\n        setCookie (name, value, day) {\n            var setting = arguments[0];\n            if (Object.prototype.toString.call(setting).slice(8, -1) === 'Object'){\n                for (var i in setting) {\n                    var oDate = new Date();\n                    oDate.setDate(oDate.getDate() + day);\n                    document.cookie = i + '=' + setting[i] + ';expires=' + oDate;\n                }\n            }else{\n                var oDate = new Date();\n                oDate.setDate(oDate.getDate() + day);\n                document.cookie = name + '=' + value + ';expires=' + oDate;\n            }\n            \n        }\n\n        /*获取cookie*/\n        getCookie (name) {\n            var arr = document.cookie.split('; ');\n            for (var i = 0; i < arr.length; i++) {\n                var arr2 = arr[i].split('=');\n                if (arr2[0] == name) {\n                    return arr2[1];\n                }\n            }\n            return '';\n        }\n\n        /*删除cookie*/\n        removeCookie (name) {\n            this.setCookie(name, 1, -1);\n        }\n\n\n        /*-----------------localStorage---------------------*/\n        /*设置localStorage*/\n        setLocal(key, val) {\n            var setting = arguments[0];\n            if (Object.prototype.toString.call(setting).slice(8, -1) === 'Object'){\n                for(var i in setting){\n                    this.ls.setItem(i, JSON.stringify(setting[i]))\n                }\n            }else{\n                this.ls.setItem(key, JSON.stringify(val))\n            }\n            \n        }\n\n        /*获取localStorage*/\n        getLocal(key) {\n            if (key) return JSON.parse(this.ls.getItem(key))\n            return null;\n            \n        }\n\n        /*移除localStorage*/\n        removeLocal(key) {\n            this.ls.removeItem(key)\n        }\n\n        /*移除所有localStorage*/\n        clearLocal() {\n            this.ls.clear()\n        }\n\n\n        /*-----------------sessionStorage---------------------*/\n        /*设置sessionStorage*/\n        setSession(key, val) {\n            var setting = arguments[0];\n            if (Object.prototype.toString.call(setting).slice(8, -1) === 'Object'){\n                for(var i in setting){\n                    this.ss.setItem(i, JSON.stringify(setting[i]))\n                }\n            }else{\n                this.ss.setItem(key, JSON.stringify(val))\n            }\n            \n        }\n\n        /*获取sessionStorage*/\n        getSession(key) {\n            if (key) return JSON.parse(this.ss.getItem(key))\n            return null;\n            \n        }\n\n        /*移除sessionStorage*/\n        removeSession(key) {\n            this.ss.removeItem(key)\n        }\n\n        /*移除所有sessionStorage*/\n        clearSession() {\n            this.ss.clear()\n        }\n\n        \n    }\n\n#### Other 其它操作\n\n    /*获取网址参数*/\n    getURL(name){\n        var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\");\n        var r = decodeURI(window.location.search).substr(1).match(reg);\n        if(r!=null) return  r[2]; return null;\n    }\n\n    /*获取全部url参数,并转换成json对象*/\n    getUrlAllParams (url) {\n        var url = url ? url : window.location.href;\n        var _pa = url.substring(url.indexOf('?') + 1),\n            _arrS = _pa.split('&'),\n            _rs = {};\n        for (var i = 0, _len = _arrS.length; i < _len; i++) {\n            var pos = _arrS[i].indexOf('=');\n            if (pos == -1) {\n                continue;\n            }\n            var name = _arrS[i].substring(0, pos),\n                value = window.decodeURIComponent(_arrS[i].substring(pos + 1));\n            _rs[name] = value;\n        }\n        return _rs;\n    }\n\n    /*删除url指定参数，返回url*/\n    delParamsUrl(url, name){\n        var baseUrl = url.split('?')[0] + '?';\n        var query = url.split('?')[1];\n        if (query.indexOf(name)>-1) {\n            var obj = {}\n            var arr = query.split(\"&\");\n            for (var i = 0; i < arr.length; i++) {\n                arr[i] = arr[i].split(\"=\");\n                obj[arr[i][0]] = arr[i][1];\n            };\n            delete obj[name];\n            var url = baseUrl + JSON.stringify(obj).replace(/[\\\"\\{\\}]/g,\"\").replace(/\\:/g,\"=\").replace(/\\,/g,\"&\");\n            return url\n        }else{\n            return url;\n        }\n    }\n\n    /*获取十六进制随机颜色*/\n    getRandomColor () {\n        return '#' + (function(h) {\n            return new Array(7 - h.length).join(\"0\") + h;\n        })((Math.random() * 0x1000000 << 0).toString(16));\n    }\n\n    /*图片加载*/\n    imgLoadAll(arr,callback){\n        var arrImg = []; \n        for (var i = 0; i < arr.length; i++) {\n            var img = new Image();\n            img.src = arr[i];\n            img.onload = function(){\n                arrImg.push(this);\n                if (arrImg.length == arr.length) {\n                    callback && callback();\n                }\n            }\n        }\n    }\n\n    /*音频加载*/\n    loadAudio(src, callback) {\n        var audio = new Audio(src);\n        audio.onloadedmetadata = callback;\n        audio.src = src;\n    }\n\n    /*DOM转字符串*/\n    domToStirng(htmlDOM){\n        var div= document.createElement(\"div\");\n        div.appendChild(htmlDOM);\n        return div.innerHTML\n    }\n\n    /*字符串转DOM*/\n    stringToDom(htmlString){\n        var div= document.createElement(\"div\");\n        div.innerHTML=htmlString;\n        return div.children[0];\n    }\n\n\n/**\n    * 光标所在位置插入字符，并设置光标位置\n    * \n    * @param {dom} 输入框\n    * @param {val} 插入的值\n    * @param {posLen} 光标位置处在 插入的值的哪个位置\n*/\n\n    setCursorPosition (dom,val,posLen) {\n        var cursorPosition = 0;\n        if(dom.selectionStart){\n            cursorPosition = dom.selectionStart;\n        }\n        this.insertAtCursor(dom,val);\n        dom.focus();\n        console.log(posLen)\n        dom.setSelectionRange(dom.value.length,cursorPosition + (posLen || val.length));\n    }\n\n    /*光标所在位置插入字符*/\n    insertAtCursor(dom, val) {\n        if (document.selection){\n            dom.focus();\n            sel = document.selection.createRange();\n            sel.text = val;\n            sel.select();\n        }else if (dom.selectionStart || dom.selectionStart == '0'){\n            let startPos = dom.selectionStart;\n            let endPos = dom.selectionEnd;\n            let restoreTop = dom.scrollTop;\n            dom.value = dom.value.substring(0, startPos) + val + dom.value.substring(endPos, dom.value.length);\n            if (restoreTop > 0){\n                dom.scrollTop = restoreTop;\n            }\n            dom.focus();\n            dom.selectionStart = startPos + val.length;\n            dom.selectionEnd = startPos + val.length;\n        } else {\n            dom.value += val;\n            dom.focus();\n        }\n    }\n\n> CSS\n\n#### pc-reset PC样式初始化\n\n    /* normalize.css */\n\n    html {\n    line-height: 1.15;\n    /* 1 */\n    -ms-text-size-adjust: 100%;\n    /* 2 */\n    -webkit-text-size-adjust: 100%;\n    /* 2 */\n    }\n\n    body {\n    margin: 0;\n    }\n\n    article,\n    aside,\n    footer,\n    header,\n    nav,\n    section {\n    display: block;\n    }\n\n    h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n    }\n\n    figcaption,\n    figure,\n    main {\n    /* 1 */\n    display: block;\n    }\n\n    figure {\n    margin: 1em 40px;\n    }\n\n    hr {\n    box-sizing: content-box;\n    /* 1 */\n    height: 0;\n    /* 1 */\n    overflow: visible;\n    /* 2 */\n    }\n\n    pre {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    a {\n    background-color: transparent;\n    /* 1 */\n    -webkit-text-decoration-skip: objects;\n    /* 2 */\n    }\n\n    abbr[title] {\n    border-bottom: none;\n    /* 1 */\n    text-decoration: underline;\n    /* 2 */\n    text-decoration: underline dotted;\n    /* 2 */\n    }\n\n    b,\n    strong {\n    font-weight: inherit;\n    }\n\n    b,\n    strong {\n    font-weight: bolder;\n    }\n\n    code,\n    kbd,\n    samp {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    dfn {\n    font-style: italic;\n    }\n\n    mark {\n    background-color: #ff0;\n    color: #000;\n    }\n\n    small {\n    font-size: 80%;\n    }\n\n    sub,\n    sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n    }\n\n    sub {\n    bottom: -0.25em;\n    }\n\n    sup {\n    top: -0.5em;\n    }\n\n    audio,\n    video {\n    display: inline-block;\n    }\n\n    audio:not([controls]) {\n    display: none;\n    height: 0;\n    }\n\n    img {\n    border-style: none;\n    }\n\n    svg:not(:root) {\n    overflow: hidden;\n    }\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n    font-family: sans-serif;\n    /* 1 */\n    font-size: 100%;\n    /* 1 */\n    line-height: 1.15;\n    /* 1 */\n    margin: 0;\n    /* 2 */\n    }\n\n    button,\n    input {\n    /* 1 */\n    overflow: visible;\n    }\n\n    button,\n    select {\n    /* 1 */\n    text-transform: none;\n    }\n\n    button,\n    html [type=\"button\"],\n\n    /* 1 */\n\n    [type=\"reset\"],\n    [type=\"submit\"] {\n    -webkit-appearance: button;\n    /* 2 */\n    }\n\n    button::-moz-focus-inner,\n    [type=\"button\"]::-moz-focus-inner,\n    [type=\"reset\"]::-moz-focus-inner,\n    [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n    }\n\n    button:-moz-focusring,\n    [type=\"button\"]:-moz-focusring,\n    [type=\"reset\"]:-moz-focusring,\n    [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n    }\n\n    fieldset {\n    padding: 0.35em 0.75em 0.625em;\n    }\n\n    legend {\n    box-sizing: border-box;\n    /* 1 */\n    color: inherit;\n    /* 2 */\n    display: table;\n    /* 1 */\n    max-width: 100%;\n    /* 1 */\n    padding: 0;\n    /* 3 */\n    white-space: normal;\n    /* 1 */\n    }\n\n    progress {\n    display: inline-block;\n    /* 1 */\n    vertical-align: baseline;\n    /* 2 */\n    }\n\n    textarea {\n    overflow: auto;\n    }\n\n    [type=\"checkbox\"],\n    [type=\"radio\"] {\n    box-sizing: border-box;\n    /* 1 */\n    padding: 0;\n    /* 2 */\n    }\n\n    [type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n    }\n\n    [type=\"search\"] {\n    -webkit-appearance: textfield;\n    /* 1 */\n    outline-offset: -2px;\n    /* 2 */\n    }\n\n    [type=\"search\"]::-webkit-search-cancel-button,\n    [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n    }\n\n    ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    /* 1 */\n    font: inherit;\n    /* 2 */\n    }\n\n    details,\n\n    /* 1 */\n\n    menu {\n    display: block;\n    }\n\n    summary {\n    display: list-item;\n    }\n\n    canvas {\n    display: inline-block;\n    }\n\n    template {\n    display: none;\n    }\n\n    [hidden] {\n    display: none;\n    }\n\n\n    /* reset */\n\n    html,\n    body,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    div,\n    dl,\n    dt,\n    dd,\n    ul,\n    ol,\n    li,\n    p,\n    blockquote,\n    pre,\n    hr,\n    figure,\n    table,\n    caption,\n    th,\n    td,\n    form,\n    fieldset,\n    legend,\n    input,\n    button,\n    textarea,\n    menu {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    }\n\n#### Phone-reset\n\n    /* normalize.css */\n\n    html {\n    line-height: 1.15;\n    /* 1 */\n    -ms-text-size-adjust: 100%;\n    /* 2 */\n    -webkit-text-size-adjust: 100%;\n    /* 2 */\n    }\n\n    body {\n    margin: 0;\n    }\n\n    article,\n    aside,\n    footer,\n    header,\n    nav,\n    section {\n    display: block;\n    }\n\n    h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n    }\n\n    figcaption,\n    figure,\n    main {\n    /* 1 */\n    display: block;\n    }\n\n    figure {\n    margin: 1em 40px;\n    }\n\n    hr {\n    box-sizing: content-box;\n    /* 1 */\n    height: 0;\n    /* 1 */\n    overflow: visible;\n    /* 2 */\n    }\n\n    pre {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    a {\n    background-color: transparent;\n    /* 1 */\n    -webkit-text-decoration-skip: objects;\n    /* 2 */\n    }\n\n    abbr[title] {\n    border-bottom: none;\n    /* 1 */\n    text-decoration: underline;\n    /* 2 */\n    text-decoration: underline dotted;\n    /* 2 */\n    }\n\n    b,\n    strong {\n    font-weight: inherit;\n    }\n\n    b,\n    strong {\n    font-weight: bolder;\n    }\n\n    code,\n    kbd,\n    samp {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    dfn {\n    font-style: italic;\n    }\n\n    mark {\n    background-color: #ff0;\n    color: #000;\n    }\n\n    small {\n    font-size: 80%;\n    }\n\n    sub,\n    sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n    }\n\n    sub {\n    bottom: -0.25em;\n    }\n\n    sup {\n    top: -0.5em;\n    }\n\n    audio,\n    video {\n    display: inline-block;\n    }\n\n    audio:not([controls]) {\n    display: none;\n    height: 0;\n    }\n\n    img {\n    border-style: none;\n    }\n\n    svg:not(:root) {\n    overflow: hidden;\n    }\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n    font-family: sans-serif;\n    /* 1 */\n    font-size: 100%;\n    /* 1 */\n    line-height: 1.15;\n    /* 1 */\n    margin: 0;\n    /* 2 */\n    }\n\n    button,\n    input {\n    /* 1 */\n    overflow: visible;\n    }\n\n    button,\n    select {\n    /* 1 */\n    text-transform: none;\n    }\n\n    button,\n    html [type=\"button\"],\n\n    /* 1 */\n\n    [type=\"reset\"],\n    [type=\"submit\"] {\n    -webkit-appearance: button;\n    /* 2 */\n    }\n\n    button::-moz-focus-inner,\n    [type=\"button\"]::-moz-focus-inner,\n    [type=\"reset\"]::-moz-focus-inner,\n    [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n    }\n\n    button:-moz-focusring,\n    [type=\"button\"]:-moz-focusring,\n    [type=\"reset\"]:-moz-focusring,\n    [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n    }\n\n    fieldset {\n    padding: 0.35em 0.75em 0.625em;\n    }\n\n    legend {\n    box-sizing: border-box;\n    /* 1 */\n    color: inherit;\n    /* 2 */\n    display: table;\n    /* 1 */\n    max-width: 100%;\n    /* 1 */\n    padding: 0;\n    /* 3 */\n    white-space: normal;\n    /* 1 */\n    }\n\n    progress {\n    display: inline-block;\n    /* 1 */\n    vertical-align: baseline;\n    /* 2 */\n    }\n\n    textarea {\n    overflow: auto;\n    }\n\n    [type=\"checkbox\"],\n    [type=\"radio\"] {\n    box-sizing: border-box;\n    /* 1 */\n    padding: 0;\n    /* 2 */\n    }\n\n    [type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n    }\n\n    [type=\"search\"] {\n    -webkit-appearance: textfield;\n    /* 1 */\n    outline-offset: -2px;\n    /* 2 */\n    }\n\n    [type=\"search\"]::-webkit-search-cancel-button,\n    [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n    }\n\n    ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    /* 1 */\n    font: inherit;\n    /* 2 */\n    }\n\n    details,\n\n    /* 1 */\n\n    menu {\n    display: block;\n    }\n\n    summary {\n    display: list-item;\n    }\n\n    canvas {\n    display: inline-block;\n    }\n\n    template {\n    display: none;\n    }\n\n    [hidden] {\n    display: none;\n    }\n\n\n    /* reset */\n\n    html,\n    body,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    div,\n    dl,\n    dt,\n    dd,\n    ul,\n    ol,\n    li,\n    p,\n    blockquote,\n    pre,\n    hr,\n    figure,\n    table,\n    caption,\n    th,\n    td,\n    form,\n    fieldset,\n    legend,\n    input,\n    button,\n    textarea,\n    menu {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    }\n\n    html,\n    body {\n    /* 禁止选中文本 */\n    -webkit-user-select: none;\n    user-select: none;\n    font: Oswald, 'Open Sans', Helvetica, Arial, sans-serif\n    }\n\n\n    /* 禁止长按链接与图片弹出菜单 */\n\n    a,\n    img {\n    -webkit-touch-callout: none;\n    }\n\n\n    /*ios android去除自带阴影的样式*/\n\n    a,\n    input {\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    }\n\n    input[type=\"text\"] {\n    -webkit-appearance: none;\n    }\n\n#### 公共样式提取\n\n    /* 禁止选中文本 */\n    .usn{\n        -webkit-user-select:none;\n        -moz-user-select:none;\n        -ms-user-select:none;\n        -o-user-select:none;\n        user-select:none;\n    }\n    /* 浮动 */\n    .fl { float: left; }\n    .fr { float: right; }\n    .cf { zoom: 1; }\n    .cf:after {\n        content:\".\";\n        display:block;\n        clear:both;\n        visibility:hidden;\n        height:0;\n        overflow:hidden;\n    }\n\n    /* 元素类型 */\n    .db { display: block; }\n    .dn { display: none; }\n    .di { display: inline }\n    .dib {display: inline-block;}\n    .transparent { opacity: 0 }\n\n\n    /*文字排版、颜色*/\n    .f12 { font-size:12px }\n    .f14 { font-size:14px }\n    .f16 { font-size:16px }\n    .f18 { font-size:18px }\n    .f20 { font-size:20px }\n    .fb { font-weight:bold }\n    .fn { font-weight:normal }\n    .t2 { text-indent:2em }\n    .red,a.red { color:#cc0031 }\n    .darkblue,a.darkblue { color:#039 }\n    .gray,a.gray { color:#878787 }\n    .lh150 { line-height:150% }\n    .lh180 { line-height:180% }\n    .lh200 { line-height:200% }\n    .unl { text-decoration:underline; }\n    .no_unl { text-decoration:none; }\n    .tl { text-align: left; }\n    .tc { text-align: center; }\n    .tr { text-align: right; }\n    .tj { text-align: justify; text-justify: inter-ideograph; }\n    .wn { /* 强制不换行 */\n        word-wrap:normal;\n        white-space:nowrap;\n    }\n    .wb { /* 强制换行 */\n        white-space:normal;\n        word-wrap:break-word;\n        word-break:break-all;\n    }\n    .wp { /* 保持空白序列*/\n        overflow:hidden;text-align:left;white-space:pre-wrap;word-wrap:break-word;word-break:break-all;\n    }\n    .wes { /* 多出部分用省略号表示 , 用于一行 */\n        overflow:hidden;\n        word-wrap:normal;\n        white-space:nowrap;\n        text-overflow:ellipsis;\n    }\n    .wes-2 { /* 适用于webkit内核和移动端 */\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n        overflow: hidden;\n    } \n    .wes-3 {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 3;\n        overflow: hidden;\n    }\n    .wes-4 {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 4;\n        overflow: hidden;\n    }\n\n    /* 溢出样式 */\n    .ofh { overflow: hidden; }\n    .ofs {overflow: scroll; }\n    .ofa {overflow: auto; }\n    .ofv {overflow: visible; }\n\n    /* 定位方式 */\n    .ps {position: static; }\n    .pr {position: relative;zoom:1; }\n    .pa {position: absolute; }\n    .pf {position: fixed; }\n\n\n    /* 垂直对齐方式 */\n    .vt {vertical-align: top; }\n    .vm {vertical-align: middle; }\n    .vb {vertical-align: bottom; }\n\n\n    /* 鼠标样式 */\n    .csd {cursor: default; }\n    .csp {cursor: pointer; }\n    .csh {cursor: help; }\n    .csm {cursor: move; }\n\n    /* flex布局 */\n    .df-sb {\n        display:flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .df-sa {\n        display:flex;\n        align-items: center;\n        justify-content: space-around;\n    }\n\n    /* 垂直居中 */\n    .df-c {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .tb-c {\n        text-align:center;\n        display:table-cell;\n        vertical-align:middle;\n    }\n    .ts-c {\n        position: absolute;\n        left: 50%; top: 50%;\n        transform: translate(-50%, -50%);\n    }\n    .ts-mc {\n        position: absolute;\n        left: 0;right: 0;\n        bottom: 0; top: 0;\n        margin: auto;\n    }\n\n    /* 辅助 */\n    .mask-fixed-wrapper {\n        width: 100%;\n        height: 100%;\n        position: fixed;\n        left:0;top:0;\n        background: rgba(0, 0, 0, 0.65);\n        z-index: 999;\n    }\n    .bg-cover {\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n    .bg-cover-all {\n        background-size: 100% 100%;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n","source":"_posts/javascript/js工具类封装.md","raw":"---\ntitle: 常用工具类的封装（javascript）\ndate: 2018-05-23 16:26:10\ntags: 前端js学习\n---\n\n<br/>\n\n本文转载过来\n作者：cd-dongzi\n链接：https://juejin.im/post/5a7523af5188257a7d6e028e\n来源：掘金\n\n在工作中经常用到这些工具类的封装\n\n> Javascript\n\n#### type 类型判断\n    isString (o) { //是否字符串\n        return Object.prototype.toString.call(o).slice(8, -1) === 'String'\n    }\n\n    isNumber (o) { //是否数字\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Number'\n    }\n\n    isBoolean (o) { //是否boolean\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Boolean'\n    }\n\n    isFunction (o) { //是否函数\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Function'\n    }\n\n    isNull (o) { //是否为null\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Null'\n    }\n\n    isUndefined (o) { //是否undefined\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Undefined'\n    }\n\n    isObj (o) { //是否对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Object'\n    }\n\n    isArray (o) { //是否数组\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Array'\n    }\n\n    isDate (o) { //是否时间\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Date'\n    }\n\n    isRegExp (o) { //是否正则\n        return Object.prototype.toString.call(o).slice(8, -1) === 'RegExp'\n    }\n\n    isError (o) { //是否错误对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Error'\n    }\n\n    isSymbol (o) { //是否Symbol函数\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Symbol'\n    }\n\n    isPromise (o) { //是否Promise对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Promise'\n    }\n\n    isSet (o) { //是否Set对象\n        return Object.prototype.toString.call(o).slice(8, -1) === 'Set'\n    }\n\n\n\n    isFalse (o) {\n        if (!o || o === 'null' || o === 'undefined' || o === 'false' || o === 'NaN') return true\n            return false\n    }\n\n    isTrue (o) {\n        return !this.isFalse(o)\n    }\n\n    isIos () {\n        var u = navigator.userAgent;\n        if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {//安卓手机\n            // return \"Android\";\n            return false\n        } else if (u.indexOf('iPhone') > -1) {//苹果手机\n            // return \"iPhone\";\n            return true\n        } else if (u.indexOf('iPad') > -1) {//iPad\n            // return \"iPad\";\n            return false\n        } else if (u.indexOf('Windows Phone') > -1) {//winphone手机\n            // return \"Windows Phone\";\n            return false\n        }else{\n            return false\n        }\n    }\n\n    isPC () { //是否为PC端\n        var userAgentInfo = navigator.userAgent;\n        var Agents = [\"Android\", \"iPhone\",\n                    \"SymbianOS\", \"Windows Phone\",\n                    \"iPad\", \"iPod\"];\n        var flag = true;\n        for (var v = 0; v < Agents.length; v++) {\n            if (userAgentInfo.indexOf(Agents[v]) > 0) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    browserType(){\n        var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n        var isOpera = userAgent.indexOf(\"Opera\") > -1; //判断是否Opera浏览器\n        var isIE = userAgent.indexOf(\"compatible\") > -1 && userAgent.indexOf(\"MSIE\") > -1 && !isOpera; //判断是否IE浏览器\n        var isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf(\"rv:11.0\") > -1;\n        var isEdge = userAgent.indexOf(\"Edge\") > -1 && !isIE; //判断是否IE的Edge浏览器  \n        var isFF = userAgent.indexOf(\"Firefox\") > -1; //判断是否Firefox浏览器\n        var isSafari = userAgent.indexOf(\"Safari\") > -1 && userAgent.indexOf(\"Chrome\") == -1; //判断是否Safari浏览器\n        var isChrome = userAgent.indexOf(\"Chrome\") > -1 && userAgent.indexOf(\"Safari\") > -1; //判断Chrome浏览器\n\n        if (isIE) {\n            var reIE = new RegExp(\"MSIE (\\\\d+\\\\.\\\\d+);\");\n            reIE.test(userAgent);\n            var fIEVersion = parseFloat(RegExp[\"$1\"]);\n            if(fIEVersion == 7) return \"IE7\"\n            else if(fIEVersion == 8) return \"IE8\";\n            else if(fIEVersion == 9) return \"IE9\";\n            else if(fIEVersion == 10) return \"IE10\";\n            else return \"IE7以下\"//IE版本过低\n        }\n        if (isIE11) return 'IE11';\n        if (isEdge) return \"Edge\";\n        if (isFF) return \"FF\";\n        if (isOpera) return \"Opera\";\n        if (isSafari) return \"Safari\";\n        if (isChrome) return \"Chrome\";\n    }\n\n    checkStr (str, type) {\n        switch (type) {\n            case 'phone':   //手机号码\n                return /^1[3|4|5|6|7|8|9][0-9]{9}$/.test(str);\n            case 'tel':     //座机\n                return /^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$/.test(str);\n            case 'card':    //身份证\n                return /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(str);\n            case 'pwd':     //密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线\n                return /^[a-zA-Z]\\w{5,17}$/.test(str)\n            case 'postal':  //邮政编码\n                return /[1-9]\\d{5}(?!\\d)/.test(str);\n            case 'QQ':      //QQ号\n                return /^[1-9][0-9]{4,9}$/.test(str);\n            case 'email':   //邮箱\n                return /^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/.test(str);\n            case 'money':   //金额(小数点2位)\n                return /^\\d*(?:\\.\\d{0,2})?$/.test(str);\n            case 'URL':     //网址\n                return /(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?/.test(str)\n            case 'IP':      //IP\n                return /((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))/.test(str);\n            case 'date':    //日期时间\n                return /^(\\d{4})\\-(\\d{2})\\-(\\d{2}) (\\d{2})(?:\\:\\d{2}|:(\\d{2}):(\\d{2}))$/.test(str) || /^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/.test(str)\n            case 'number':  //数字\n                return /^[0-9]$/.test(str);\n            case 'english': //英文\n                return /^[a-zA-Z]+$/.test(str);\n            case 'chinese': //中文\n                return /^[\\u4E00-\\u9FA5]+$/.test(str);\n            case 'lower':   //小写\n                return /^[a-z]+$/.test(str);\n            case 'upper':   //大写\n                return /^[A-Z]+$/.test(str);\n            case 'HTML':    //HTML标记\n                return /<(\"[^\"]*\"|'[^']*'|[^'\">])*>/.test(str);\n            default:\n                return true;\n        }\n        \n        // 严格的身份证校验\n        isCardID(sId) {\n            if (!/(^\\d{15}$)|(^\\d{17}(\\d|X|x)$)/.test(sId)) {\n                alert('你输入的身份证长度或格式错误')\n                return false\n            }\n            //身份证城市\n            var aCity={11:\"北京\",12:\"天津\",13:\"河北\",14:\"山西\",15:\"内蒙古\",21:\"辽宁\",22:\"吉林\",23:\"黑龙江\",31:\"上海\",32:\"江苏\",33:\"浙江\",34:\"安徽\",35:\"福建\",36:\"江西\",37:\"山东\",41:\"河南\",42:\"湖北\",43:\"湖南\",44:\"广东\",45:\"广西\",46:\"海南\",50:\"重庆\",51:\"四川\",52:\"贵州\",53:\"云南\",54:\"西藏\",61:\"陕西\",62:\"甘肃\",63:\"青海\",64:\"宁夏\",65:\"新疆\",71:\"台湾\",81:\"香港\",82:\"澳门\",91:\"国外\"};\n            if(!aCity[parseInt(sId.substr(0,2))]) { \n                alert('你的身份证地区非法')\n                return false\n            }\n\n            // 出生日期验证\n            var sBirthday=(sId.substr(6,4)+\"-\"+Number(sId.substr(10,2))+\"-\"+Number(sId.substr(12,2))).replace(/-/g,\"/\"),\n                d = new Date(sBirthday)\n            if(sBirthday != (d.getFullYear()+\"/\"+ (d.getMonth()+1) + \"/\" + d.getDate())) {\n                alert('身份证上的出生日期非法')\n                return false\n            }\n\n            // 身份证号码校验\n            var sum = 0,\n                weights =  [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2],\n                codes = \"10X98765432\"\n            for (var i = 0; i < sId.length - 1; i++) {\n                sum += sId[i] * weights[i];\n            }\n            var last = codes[sum % 11]; //计算出来的最后一位身份证号码\n            if (sId[sId.length-1] != last) { \n                alert('你输入的身份证号非法')\n                return false\n            }\n            \n            return true\n        }\n    }\n\n\n####  Date\n\n/**\n    * 格式化时间\n    * \n    * @param  {time} 时间\n    * @param  {cFormat} 格式\n    * @return {String} 字符串\n    *\n    * @example formatTime('2018-1-29', '{y}/{m}/{d} {h}:{i}:{s}') // -> 2018/01/29 00:00:00\n*/\n\n    formatTime(time, cFormat) {\n        if (arguments.length === 0) return null\n        if ((time + '').length === 10) {\n            time = +time * 1000\n        }\n\n        var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}', date\n        if (typeof time === 'object') {\n            date = time\n        } else {\n            date = new Date(time)\n        }\n\n        var formatObj = {\n            y: date.getFullYear(),\n            m: date.getMonth() + 1,\n            d: date.getDate(),\n            h: date.getHours(),\n            i: date.getMinutes(),\n            s: date.getSeconds(),\n            a: date.getDay()\n        }\n        var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n            var value = formatObj[key]\n            if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]\n            if (result.length > 0 && value < 10) {\n                value = '0' + value\n            }\n            return value || 0\n        })\n        return time_str\n    }\n\n\n/**\n    * 返回指定长度的月份集合\n    * \n    * @param  {time} 时间\n    * @param  {len} 长度\n    * @param  {direction} 方向：  1: 前几个月;  2: 后几个月;  3:前后几个月  默认 3\n    * @return {Array} 数组\n    * \n    * @example   getMonths('2018-1-29', 6, 1)  // ->  [\"2018-1\", \"2017-12\", \"2017-11\", \"2017-10\", \"2017-9\", \"2017-8\", \"2017-7\"]\n*/\n\n    getMonths(time, len, direction) {\n        var mm = new Date(time).getMonth(),\n            yy = new Date(time).getFullYear(),\n            direction = isNaN(direction) ? 3 : direction,\n            index = mm;\n        var cutMonth = function(index) {\n            if ( index <= len && index >= -len) {\n                return direction === 1 ? formatPre(index).concat(cutMonth(++index)):\n                    direction === 2 ? formatNext(index).concat(cutMonth(++index)):formatCurr(index).concat(cutMonth(++index))\n            }\n            return []\n        }\n        var formatNext = function(i) {\n            var y = Math.floor(i/12),\n                m = i%12\n            return [yy+y + '-' + (m+1)]\n        }\n        var formatPre = function(i) {\n            var y = Math.ceil(i/12),\n                m = i%12\n            m = m===0 ? 12 : m\n            return [yy-y + '-' + (13 - m)]\n        }\n        var formatCurr = function(i) {\n            var y = Math.floor(i/12),\n                yNext = Math.ceil(i/12),\n                m = i%12,\n                mNext = m===0 ? 12 : m\n            return [yy-yNext + '-' + (13 - mNext),yy+y + '-' + (m+1)]\n        }\n        // 数组去重\n        var unique = function(arr) {\n            if ( Array.hasOwnProperty('from') ) {\n                return Array.from(new Set(arr));\n            }else{\n                var n = {},r=[]; \n                for(var i = 0; i < arr.length; i++){\n                    if (!n[arr[i]]){\n                        n[arr[i]] = true; \n                        r.push(arr[i]);\n                    }\n                }\n                return r;\n            }\n        }\n        return direction !== 3 ? cutMonth(index) : unique(cutMonth(index).sort(function(t1, t2){\n            return new Date(t1).getTime() - new Date(t2).getTime()\n        }))\n    }\n\n\n\n/**\n    * 返回指定长度的天数集合\n    * \n    * @param  {time} 时间\n    * @param  {len} 长度\n    * @param  {direction} 方向： 1: 前几天;  2: 后几天;  3:前后几天  默认 3\n    * @return {Array} 数组\n    *\n    * @example date.getDays('2018-1-29', 6) // -> [\"2018-1-26\", \"2018-1-27\", \"2018-1-28\", \"2018-1-29\", \"2018-1-30\", \"2018-1-31\", \"2018-2-1\"]\n*/\n\n    getDays(time, len, diretion) {\n        var tt = new Date(time)\n        var getDay = function(day) {\n            var t = new Date(time)\n            t.setDate(t.getDate() + day)\n            var m = t.getMonth()+1\n            return t.getFullYear()+'-'+m+'-'+t.getDate()\n        }\n        var arr = []\n        if (diretion === 1) {\n            for (var i = 1; i <= len; i++) {\n                arr.unshift(getDay(-i))\n            }\n        }else if(diretion === 2) {\n            for (var i = 1; i <= len; i++) {\n                arr.push(getDay(i))\n            }\n        }else {\n            for (var i = 1; i <= len; i++) {\n                arr.unshift(getDay(-i))\n            }\n            arr.push(tt.getFullYear()+'-'+(tt.getMonth()+1)+'-'+tt.getDate())\n            for (var i = 1; i <= len; i++) {\n                arr.push(getDay(i))\n            }\n        }\n        return diretion === 1 ? arr.concat([tt.getFullYear()+'-'+(tt.getMonth()+1)+'-'+tt.getDate()]) : \n            diretion === 2 ? [tt.getFullYear()+'-'+(tt.getMonth()+1)+'-'+tt.getDate()].concat(arr) : arr\n    }\n\n\n/**\n    * @param  {s} 秒数\n    * @return {String} 字符串 \n    *\n    * @example formatHMS(3610) // -> 1h0m10s\n*/\n\n    formatHMS (s) {\n        var str = ''\n        if (s > 3600) {\n            str = Math.floor(s/3600)+'h'+Math.floor(s%3600/60)+'m'+s%60+'s'\n        }else if(s > 60) {\n            str = Math.floor(s/60)+'m'+s%60+'s'\n        }else{\n            str = s%60+'s'\n        }\n        return str\n    }\n\n    /*获取某月有多少天*/\n    getMonthOfDay (time) {\n        var date = new Date(time)\n        var year = date.getFullYear()\n        var mouth = date.getMonth() + 1\n        var days\n\n        //当月份为二月时，根据闰年还是非闰年判断天数\n        if (mouth == 2) {\n            days = (year%4==0 && year%100==0 && year%400==0) || (year%4==0 && year%100!=0) ? 28 : 29\n        } else if (mouth == 1 || mouth == 3 || mouth == 5 || mouth == 7 || mouth == 8 || mouth == 10 || mouth == 12) {\n            //月份为：1,3,5,7,8,10,12 时，为大月.则天数为31；\n            days = 31\n        } else {\n            //其他月份，天数为：30.\n            days = 30\n        }\n        return days\n    }\n\n    /*获取某年有多少天*/\n    getYearOfDay (time) {\n        var firstDayYear = this.getFirstDayOfYear(time);\n        var lastDayYear = this.getLastDayOfYear(time);\n        var numSecond = (new Date(lastDayYear).getTime() - new Date(firstDayYear).getTime())/1000;\n        return Math.ceil(numSecond/(24*3600));\n    }\n\n    /*获取某年的第一天*/\n    getFirstDayOfYear (time) {\n        var year = new Date(time).getFullYear();\n        return year + \"-01-01 00:00:00\";\n    }\n\n    /*获取某年最后一天*/\n    getLastDayOfYear (time) {\n        var year = new Date(time).getFullYear();\n        var dateString = year + \"-12-01 00:00:00\";\n        var endDay = this.getMonthOfDay(dateString);\n        return year + \"-12-\" + endDay + \" 23:59:59\";\n    }\n\n    /*获取某个日期是当年中的第几天*/\n    getDayOfYear (time) {\n        var firstDayYear = this.getFirstDayOfYear(time);\n        var numSecond = (new Date(time).getTime() - new Date(firstDayYear).getTime())/1000;\n        return Math.ceil(numSecond/(24*3600));\n    }\n\n    /*获取某个日期在这一年的第几周*/\n    getDayOfYearWeek (time) {\n        var numdays = this.getDayOfYear(time);\n        return Math.ceil(numdays / 7);\n    }\n\n#### Array\n\n    /*判断一个元素是否在数组中*/\n    contains (arr, val) {\n        return arr.indexOf(val) != -1 ? true : false;\n    }\n\n\n    /**\n    * @param  {arr} 数组\n    * @param  {fn} 回调函数\n    * @return {undefined}\n    */\n    each (arr, fn) {\n        fn = fn || Function;\n        var a = [];\n        var args = Array.prototype.slice.call(arguments, 1);\n        for(var i = 0; i < arr.length; i++) {\n            var res = fn.apply(arr, [arr[i], i].concat(args));\n            if(res != null) a.push(res);\n        }\n    }\n\n    /**\n    * @param  {arr} 数组\n    * @param  {fn} 回调函数\n    * @param  {thisObj} this指向\n    * @return {Array} \n    */\n    map (arr, fn, thisObj) {\n        var scope = thisObj || window;\n        var a = [];\n        for(var i = 0, j = arr.length; i < j; ++i) {\n            var res = fn.call(scope, arr[i], i, this);\n            if(res != null) a.push(res);\n        }\n        return a;\n    }\n\n\n    /**\n    * @param  {arr} 数组\n    * @param  {type} 1：从小到大   2：从大到小   3：随机\n    * @return {Array}\n    */\n    sort (arr, type = 1) {\n        return arr.sort( (a, b) => {\n            switch(type) {\n                case 1:\n                    return a - b;\n                case 2:\n                    return b - a;\n                case 3:\n                    return Math.random() - 0.5;\n                default:\n                    return arr;\n            }\n        })\n    }\n\n    /*去重*/\n    unique (arr) {\n        if ( Array.hasOwnProperty('from') ) {\n            return Array.from(new Set(arr));\n        }else{\n            var n = {},r=[]; \n            for(var i = 0; i < arr.length; i++){\n                if (!n[arr[i]]){\n                    n[arr[i]] = true; \n                    r.push(arr[i]);\n                }\n            }\n            return r;\n        }\n        // 注：上面 else 里面的排重并不能区分 2 和 '2'，但能减少用indexOf带来的性能,暂时没找到替代的方法。。。\n        /* 正确排重\n        if ( Array.hasOwnProperty('from') ) {\n            return Array.from(new Set(arr))\n        }else{\n            var r = [], NaNBol = true\n            for(var i=0; i < arr.length; i++) {\n                if (arr[i] !== arr[i]) {\n                    if (NaNBol && r.indexOf(arr[i]) === -1) {\n                        r.push(arr[i])\n                        NaNBol = false\n                    }\n                }else{\n                    if(r.indexOf(arr[i]) === -1) r.push(arr[i])\n                }\n            }\n            return r\n        }\n\n        */\n    }\n\n\n    /*求两个集合的并集*/\n    union (a, b) {\n        var newArr = a.concat(b);\n        return this.unique(newArr);\n    }\n\n    /*求两个集合的交集*/\n    intersect (a, b) {\n        var _this = this;\n        a = this.unique(a);\n        return this.map(a, function(o) {\n            return _this.contains(b, o) ? o : null;\n        });\n    }\n\n    /*删除其中一个元素*/\n    remove (arr, ele) {\n        var index = arr.indexOf(ele);\n        if(index > -1) {\n            arr.splice(index, 1);\n        }\n        return arr;\n    }\n\n    /*将类数组转换为数组的方法*/\n    formArray (ary) {\n        var arr = [];\n        if(Array.isArray(ary)) {\n            arr = ary;\n        } else {\n            arr = Array.prototype.slice.call(ary);\n        };\n        return arr;\n    }\n\n    /*最大值*/\n    max (arr) {\n        return Math.max.apply(null, arr);\n    }\n\n    /*最小值*/\n    min (arr) {\n        return Math.min.apply(null, arr);\n    }\n\n    /*求和*/\n    sum (arr) {\n        return arr.reduce( (pre, cur) => {\n            return pre + cur\n        })\n    }\n\n    /*平均值*/\n    average (arr) {\n        return this.sum(arr)/arr.length\n    }\n\n#### String 字符串操作\n\n/**\n    * 去除空格\n    * @param  {str}\n    * @param  {type} \n    *       type:  1-所有空格  2-前后空格  3-前空格 4-后空格\n    * @return {String}\n*/\n\n    trim (str, type) {\n        type = type || 1\n        switch (type) {\n            case 1:\n                return str.replace(/\\s+/g, \"\");\n            case 2:\n                return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n            case 3:\n                return str.replace(/(^\\s*)/g, \"\");\n            case 4:\n                return str.replace(/(\\s*$)/g, \"\");\n            default:\n                return str;\n        }\n    }\n\n/**\n    * @param  {str} \n    * @param  {type}\n    *       type:  1:首字母大写  2：首页母小写  3：大小写转换  4：全部大写  5：全部小写\n    * @return {String}\n*/\n\n    changeCase (str, type) {\n        type = type || 4\n        switch (type) {\n            case 1:\n                return str.replace(/\\b\\w+\\b/g, function (word) {\n                    return word.substring(0, 1).toUpperCase() + word.substring(1).toLowerCase();\n\n                });\n            case 2:\n                return str.replace(/\\b\\w+\\b/g, function (word) {\n                    return word.substring(0, 1).toLowerCase() + word.substring(1).toUpperCase();\n                });\n            case 3:\n                return str.split('').map( function(word){\n                    if (/[a-z]/.test(word)) {\n                        return word.toUpperCase();\n                    }else{\n                        return word.toLowerCase()\n                    }\n                }).join('')\n            case 4:\n                return str.toUpperCase();\n            case 5:\n                return str.toLowerCase();\n            default:\n                return str;\n        }\n    }\n\n\n/*\n    检测密码强度\n*/\n\n    checkPwd (str) {\n        var Lv = 0;\n        if (str.length < 6) {\n            return Lv\n        }\n        if (/[0-9]/.test(str)) {\n            Lv++\n        }\n        if (/[a-z]/.test(str)) {\n            Lv++\n        }\n        if (/[A-Z]/.test(str)) {\n            Lv++\n        }\n        if (/[\\.|-|_]/.test(str)) {\n            Lv++\n        }\n        return Lv;\n    }\n\n    /*过滤html代码(把<>转换)*/\n    filterTag (str) {\n        str = str.replace(/&/ig, \"&amp;\");\n        str = str.replace(/</ig, \"&lt;\");\n        str = str.replace(/>/ig, \"&gt;\");\n        str = str.replace(\" \", \"&nbsp;\");\n        return str;\n    }\n\n#### Number\n\n/*随机数范围*/\nrandom (min, max) {\n    if (arguments.length === 2) {\n        return Math.floor(min + Math.random() * ( (max+1) - min ))\n    }else{\n        return null;\n    }\n    \n}\n\n/*将阿拉伯数字翻译成中文的大写数字*/\nnumberToChinese (num) {\n    var AA = new Array(\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\", \"十\");\n    var BB = new Array(\"\", \"十\", \"百\", \"仟\", \"萬\", \"億\", \"点\", \"\");\n    var a = (\"\" + num).replace(/(^0*)/g, \"\").split(\".\"),\n        k = 0,\n        re = \"\";\n    for(var i = a[0].length - 1; i >= 0; i--) {\n        switch(k) {\n            case 0:\n                re = BB[7] + re;\n                break;\n            case 4:\n                if(!new RegExp(\"0{4}//d{\" + (a[0].length - i - 1) + \"}$\")\n                    .test(a[0]))\n                    re = BB[4] + re;\n                break;\n            case 8:\n                re = BB[5] + re;\n                BB[7] = BB[5];\n                k = 0;\n                break;\n        }\n        if(k % 4 == 2 && a[0].charAt(i + 2) != 0 && a[0].charAt(i + 1) == 0)\n            re = AA[0] + re;\n        if(a[0].charAt(i) != 0)\n            re = AA[a[0].charAt(i)] + BB[k % 4] + re;\n        k++;\n    }\n\n    if(a.length > 1) // 加上小数部分(如果有小数部分)\n    {\n        re += BB[6];\n        for(var i = 0; i < a[1].length; i++)\n            re += AA[a[1].charAt(i)];\n    }\n    if(re == '一十')\n        re = \"十\";\n    if(re.match(/^一/) && re.length == 3)\n        re = re.replace(\"一\", \"\");\n    return re;\n}\n\n/*将数字转换为大写金额*/\nchangeToChinese (Num) {\n        //判断如果传递进来的不是字符的话转换为字符\n        if(typeof Num == \"number\") {\n            Num = new String(Num);\n        };\n        Num = Num.replace(/,/g, \"\") //替换tomoney()中的“,”\n        Num = Num.replace(/ /g, \"\") //替换tomoney()中的空格\n        Num = Num.replace(/￥/g, \"\") //替换掉可能出现的￥字符\n        if(isNaN(Num)) { //验证输入的字符是否为数字\n            //alert(\"请检查小写金额是否正确\");\n            return \"\";\n        };\n        //字符处理完毕后开始转换，采用前后两部分分别转换\n        var part = String(Num).split(\".\");\n        var newchar = \"\";\n        //小数点前进行转化\n        for(var i = part[0].length - 1; i >= 0; i--) {\n            if(part[0].length > 10) {\n                return \"\";\n                //若数量超过拾亿单位，提示\n            }\n            var tmpnewchar = \"\"\n            var perchar = part[0].charAt(i);\n            switch(perchar) {\n                case \"0\":\n                    tmpnewchar = \"零\" + tmpnewchar;\n                    break;\n                case \"1\":\n                    tmpnewchar = \"壹\" + tmpnewchar;\n                    break;\n                case \"2\":\n                    tmpnewchar = \"贰\" + tmpnewchar;\n                    break;\n                case \"3\":\n                    tmpnewchar = \"叁\" + tmpnewchar;\n                    break;\n                case \"4\":\n                    tmpnewchar = \"肆\" + tmpnewchar;\n                    break;\n                case \"5\":\n                    tmpnewchar = \"伍\" + tmpnewchar;\n                    break;\n                case \"6\":\n                    tmpnewchar = \"陆\" + tmpnewchar;\n                    break;\n                case \"7\":\n                    tmpnewchar = \"柒\" + tmpnewchar;\n                    break;\n                case \"8\":\n                    tmpnewchar = \"捌\" + tmpnewchar;\n                    break;\n                case \"9\":\n                    tmpnewchar = \"玖\" + tmpnewchar;\n                    break;\n            }\n            switch(part[0].length - i - 1) {\n                case 0:\n                    tmpnewchar = tmpnewchar + \"元\";\n                    break;\n                case 1:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"拾\";\n                    break;\n                case 2:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"佰\";\n                    break;\n                case 3:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"仟\";\n                    break;\n                case 4:\n                    tmpnewchar = tmpnewchar + \"万\";\n                    break;\n                case 5:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"拾\";\n                    break;\n                case 6:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"佰\";\n                    break;\n                case 7:\n                    if(perchar != 0) tmpnewchar = tmpnewchar + \"仟\";\n                    break;\n                case 8:\n                    tmpnewchar = tmpnewchar + \"亿\";\n                    break;\n                case 9:\n                    tmpnewchar = tmpnewchar + \"拾\";\n                    break;\n            }\n            var newchar = tmpnewchar + newchar;\n        }\n        //小数点之后进行转化\n        if(Num.indexOf(\".\") != -1) {\n            if(part[1].length > 2) {\n                // alert(\"小数点之后只能保留两位,系统将自动截断\");\n                part[1] = part[1].substr(0, 2)\n            }\n            for(i = 0; i < part[1].length; i++) {\n                tmpnewchar = \"\"\n                perchar = part[1].charAt(i)\n                switch(perchar) {\n                    case \"0\":\n                        tmpnewchar = \"零\" + tmpnewchar;\n                        break;\n                    case \"1\":\n                        tmpnewchar = \"壹\" + tmpnewchar;\n                        break;\n                    case \"2\":\n                        tmpnewchar = \"贰\" + tmpnewchar;\n                        break;\n                    case \"3\":\n                        tmpnewchar = \"叁\" + tmpnewchar;\n                        break;\n                    case \"4\":\n                        tmpnewchar = \"肆\" + tmpnewchar;\n                        break;\n                    case \"5\":\n                        tmpnewchar = \"伍\" + tmpnewchar;\n                        break;\n                    case \"6\":\n                        tmpnewchar = \"陆\" + tmpnewchar;\n                        break;\n                    case \"7\":\n                        tmpnewchar = \"柒\" + tmpnewchar;\n                        break;\n                    case \"8\":\n                        tmpnewchar = \"捌\" + tmpnewchar;\n                        break;\n                    case \"9\":\n                        tmpnewchar = \"玖\" + tmpnewchar;\n                        break;\n                }\n                if(i == 0) tmpnewchar = tmpnewchar + \"角\";\n                if(i == 1) tmpnewchar = tmpnewchar + \"分\";\n                newchar = newchar + tmpnewchar;\n            }\n        }\n        //替换所有无用汉字\n        while(newchar.search(\"零零\") != -1)\n            newchar = newchar.replace(\"零零\", \"零\");\n        newchar = newchar.replace(\"零亿\", \"亿\");\n        newchar = newchar.replace(\"亿万\", \"亿\");\n        newchar = newchar.replace(\"零万\", \"万\");\n        newchar = newchar.replace(\"零元\", \"元\");\n        newchar = newchar.replace(\"零角\", \"\");\n        newchar = newchar.replace(\"零分\", \"\");\n        if(newchar.charAt(newchar.length - 1) == \"元\") {\n            newchar = newchar + \"整\"\n        }\n        return newchar;\n    }\n\n#### Http\n\n/**\n    * @param  {setting}\n*/\n\n    ajax(setting){\n        //设置参数的初始值\n        var opts={\n            method: (setting.method || \"GET\").toUpperCase(), //请求方式\n            url: setting.url || \"\", // 请求地址\n            async: setting.async || true, // 是否异步\n            dataType: setting.dataType || \"json\", // 解析方式\n            data: setting.data || \"\", // 参数\n            success: setting.success || function(){}, // 请求成功回调\n            error: setting.error || function(){} // 请求失败回调\n        }\n\n        // 参数格式化\n        function params_format (obj) {\n            var str = ''\n            for (var i in obj) {\n                str += i + '=' + obj[i] + '&'\n            }\n            return str.split('').slice(0, -1).join('')\n        }\n\n        // 创建ajax对象\n        var xhr=new XMLHttpRequest();\n\n        // 连接服务器open(方法GET/POST，请求地址， 异步传输)\n        if(opts.method == 'GET'){\n            xhr.open(opts.method, opts.url + \"?\" + params_format(opts.data), opts.async);\n            xhr.send();\n        }else{\n            xhr.open(opts.method, opts.url, opts.async);\n            xhr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n            xhr.send(opts.data);\n        }\n        \n/*\n    ** 每当readyState改变时，就会触发onreadystatechange事件\n    ** readyState属性存储有XMLHttpRequest的状态信息\n    ** 0 ：请求未初始化\n    ** 1 ：服务器连接已建立\n    ** 2 ：请求已接受\n    ** 3 : 请求处理中\n    ** 4 ：请求已完成，且相应就绪\n*/\n\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState === 4 && (xhr.status === 200 || xhr.status === 304)) {\n                switch(opts.dataType){\n                    case \"json\":\n                        var json = JSON.parse(xhr.responseText);\n                        opts.success(json);\n                        break;\n                    case \"xml\":\n                        opts.success(xhr.responseXML);\n                        break;\n                    default:\n                        opts.success(xhr.responseText);\n                        break;\n                }\n            }\n        }\n\n        xhr.onerror = function(err) {\n            opts.error(err);\n        }\n    }\n\n/**\n    * @param  {url}\n    * @param  {setting}\n    * @return {Promise}\n*/\n\n    fetch(url, setting) {\n        //设置参数的初始值\n        let opts={\n            method: (setting.method || 'GET').toUpperCase(), //请求方式\n            headers : setting.headers  || {}, // 请求头设置\n            credentials : setting.credentials  || true, // 设置cookie是否一起发送\n            body: setting.body || {},\n            mode : setting.mode  || 'no-cors', // 可以设置 cors, no-cors, same-origin\n            redirect : setting.redirect  || 'follow', // follow, error, manual\n            cache : setting.cache  || 'default' // 设置 cache 模式 (default, reload, no-cache)\n        }\n        let dataType = setting.dataType || \"json\", // 解析方式  \n            data = setting.data || \"\" // 参数\n\n        // 参数格式化\n        function params_format (obj) {\n            var str = ''\n            for (var i in obj) {\n                str += `${i}=${obj[i]}&`\n            }\n            return str.split('').slice(0, -1).join('')\n        }\n\n        if (opts.method === 'GET') {\n            url = url + (data?`?${params_format(data)}`:'')\n        }else{\n            setting.body = data || {}\n        }\n\n        return new Promise( (resolve, reject) => {\n            fetch(url, opts).then( async res => {\n                let data = dataType === 'text' ? await res.text() :\n                    dataType === 'blob' ? await res.blob() : await res.json() \n                resolve(data)\n            }).catch( e => {\n                reject(e)\n            })\n        })\n        \n    }\n\n#### DOM\n    $ (selector){ \n        var type = selector.substring(0, 1);\n        if (type === '#') {\n            if (document.querySelecotor) return document.querySelector(selector)\n                return document.getElementById(selector.substring(1))\n            \n        }else if (type === '.') {\n            if (document.querySelecotorAll) return document.querySelectorAll(selector)\n                return document.getElementsByClassName(selector.substring(1))\n        }else{\n            return document['querySelectorAll' ? 'querySelectorAll':'getElementsByTagName'](selector)\n        }\n    } \n\n    /*检测类名*/\n    hasClass (ele, name) {\n        return ele.className.match(new RegExp('(\\\\s|^)' + name + '(\\\\s|$)'));\n    }\n\n    /*添加类名*/\n    addClass (ele, name) {\n        if (!this.hasClass(ele, name)) ele.className += \" \" + name;\n    }\n\n    /*删除类名*/\n    removeClass (ele, name) {\n        if (this.hasClass(ele, name)) {\n            var reg = new RegExp('(\\\\s|^)' + name + '(\\\\s|$)');\n            ele.className = ele.className.replace(reg, '');\n        }\n    }\n\n    /*替换类名*/\n    replaceClass (ele, newName, oldName) {\n        this.removeClass(ele, oldName);\n        this.addClass(ele, newName);\n    }\n\n    /*获取兄弟节点*/\n    siblings (ele) {\n        console.log(ele.parentNode)\n        var chid = ele.parentNode.children,eleMatch = []; \n        for(var i = 0, len = chid.length; i < len; i ++){ \n            if(chid[i] != ele){ \n                eleMatch.push(chid[i]); \n            } \n        } \n        return eleMatch;\n    }\n\n    /*获取行间样式属性*/\n    getByStyle (obj,name){\n        if(obj.currentStyle){\n            return  obj.currentStyle[name];\n        }else{\n            return  getComputedStyle(obj,false)[name];\n        }\n    }\n\n#### Storage 储存操作\n\n    class StorageFn {\n        constructor () {\n            this.ls = window.localStorage;\n            this.ss = window.sessionStorage;\n        }\n\n        /*-----------------cookie---------------------*/\n        /*设置cookie*/\n        setCookie (name, value, day) {\n            var setting = arguments[0];\n            if (Object.prototype.toString.call(setting).slice(8, -1) === 'Object'){\n                for (var i in setting) {\n                    var oDate = new Date();\n                    oDate.setDate(oDate.getDate() + day);\n                    document.cookie = i + '=' + setting[i] + ';expires=' + oDate;\n                }\n            }else{\n                var oDate = new Date();\n                oDate.setDate(oDate.getDate() + day);\n                document.cookie = name + '=' + value + ';expires=' + oDate;\n            }\n            \n        }\n\n        /*获取cookie*/\n        getCookie (name) {\n            var arr = document.cookie.split('; ');\n            for (var i = 0; i < arr.length; i++) {\n                var arr2 = arr[i].split('=');\n                if (arr2[0] == name) {\n                    return arr2[1];\n                }\n            }\n            return '';\n        }\n\n        /*删除cookie*/\n        removeCookie (name) {\n            this.setCookie(name, 1, -1);\n        }\n\n\n        /*-----------------localStorage---------------------*/\n        /*设置localStorage*/\n        setLocal(key, val) {\n            var setting = arguments[0];\n            if (Object.prototype.toString.call(setting).slice(8, -1) === 'Object'){\n                for(var i in setting){\n                    this.ls.setItem(i, JSON.stringify(setting[i]))\n                }\n            }else{\n                this.ls.setItem(key, JSON.stringify(val))\n            }\n            \n        }\n\n        /*获取localStorage*/\n        getLocal(key) {\n            if (key) return JSON.parse(this.ls.getItem(key))\n            return null;\n            \n        }\n\n        /*移除localStorage*/\n        removeLocal(key) {\n            this.ls.removeItem(key)\n        }\n\n        /*移除所有localStorage*/\n        clearLocal() {\n            this.ls.clear()\n        }\n\n\n        /*-----------------sessionStorage---------------------*/\n        /*设置sessionStorage*/\n        setSession(key, val) {\n            var setting = arguments[0];\n            if (Object.prototype.toString.call(setting).slice(8, -1) === 'Object'){\n                for(var i in setting){\n                    this.ss.setItem(i, JSON.stringify(setting[i]))\n                }\n            }else{\n                this.ss.setItem(key, JSON.stringify(val))\n            }\n            \n        }\n\n        /*获取sessionStorage*/\n        getSession(key) {\n            if (key) return JSON.parse(this.ss.getItem(key))\n            return null;\n            \n        }\n\n        /*移除sessionStorage*/\n        removeSession(key) {\n            this.ss.removeItem(key)\n        }\n\n        /*移除所有sessionStorage*/\n        clearSession() {\n            this.ss.clear()\n        }\n\n        \n    }\n\n#### Other 其它操作\n\n    /*获取网址参数*/\n    getURL(name){\n        var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\");\n        var r = decodeURI(window.location.search).substr(1).match(reg);\n        if(r!=null) return  r[2]; return null;\n    }\n\n    /*获取全部url参数,并转换成json对象*/\n    getUrlAllParams (url) {\n        var url = url ? url : window.location.href;\n        var _pa = url.substring(url.indexOf('?') + 1),\n            _arrS = _pa.split('&'),\n            _rs = {};\n        for (var i = 0, _len = _arrS.length; i < _len; i++) {\n            var pos = _arrS[i].indexOf('=');\n            if (pos == -1) {\n                continue;\n            }\n            var name = _arrS[i].substring(0, pos),\n                value = window.decodeURIComponent(_arrS[i].substring(pos + 1));\n            _rs[name] = value;\n        }\n        return _rs;\n    }\n\n    /*删除url指定参数，返回url*/\n    delParamsUrl(url, name){\n        var baseUrl = url.split('?')[0] + '?';\n        var query = url.split('?')[1];\n        if (query.indexOf(name)>-1) {\n            var obj = {}\n            var arr = query.split(\"&\");\n            for (var i = 0; i < arr.length; i++) {\n                arr[i] = arr[i].split(\"=\");\n                obj[arr[i][0]] = arr[i][1];\n            };\n            delete obj[name];\n            var url = baseUrl + JSON.stringify(obj).replace(/[\\\"\\{\\}]/g,\"\").replace(/\\:/g,\"=\").replace(/\\,/g,\"&\");\n            return url\n        }else{\n            return url;\n        }\n    }\n\n    /*获取十六进制随机颜色*/\n    getRandomColor () {\n        return '#' + (function(h) {\n            return new Array(7 - h.length).join(\"0\") + h;\n        })((Math.random() * 0x1000000 << 0).toString(16));\n    }\n\n    /*图片加载*/\n    imgLoadAll(arr,callback){\n        var arrImg = []; \n        for (var i = 0; i < arr.length; i++) {\n            var img = new Image();\n            img.src = arr[i];\n            img.onload = function(){\n                arrImg.push(this);\n                if (arrImg.length == arr.length) {\n                    callback && callback();\n                }\n            }\n        }\n    }\n\n    /*音频加载*/\n    loadAudio(src, callback) {\n        var audio = new Audio(src);\n        audio.onloadedmetadata = callback;\n        audio.src = src;\n    }\n\n    /*DOM转字符串*/\n    domToStirng(htmlDOM){\n        var div= document.createElement(\"div\");\n        div.appendChild(htmlDOM);\n        return div.innerHTML\n    }\n\n    /*字符串转DOM*/\n    stringToDom(htmlString){\n        var div= document.createElement(\"div\");\n        div.innerHTML=htmlString;\n        return div.children[0];\n    }\n\n\n/**\n    * 光标所在位置插入字符，并设置光标位置\n    * \n    * @param {dom} 输入框\n    * @param {val} 插入的值\n    * @param {posLen} 光标位置处在 插入的值的哪个位置\n*/\n\n    setCursorPosition (dom,val,posLen) {\n        var cursorPosition = 0;\n        if(dom.selectionStart){\n            cursorPosition = dom.selectionStart;\n        }\n        this.insertAtCursor(dom,val);\n        dom.focus();\n        console.log(posLen)\n        dom.setSelectionRange(dom.value.length,cursorPosition + (posLen || val.length));\n    }\n\n    /*光标所在位置插入字符*/\n    insertAtCursor(dom, val) {\n        if (document.selection){\n            dom.focus();\n            sel = document.selection.createRange();\n            sel.text = val;\n            sel.select();\n        }else if (dom.selectionStart || dom.selectionStart == '0'){\n            let startPos = dom.selectionStart;\n            let endPos = dom.selectionEnd;\n            let restoreTop = dom.scrollTop;\n            dom.value = dom.value.substring(0, startPos) + val + dom.value.substring(endPos, dom.value.length);\n            if (restoreTop > 0){\n                dom.scrollTop = restoreTop;\n            }\n            dom.focus();\n            dom.selectionStart = startPos + val.length;\n            dom.selectionEnd = startPos + val.length;\n        } else {\n            dom.value += val;\n            dom.focus();\n        }\n    }\n\n> CSS\n\n#### pc-reset PC样式初始化\n\n    /* normalize.css */\n\n    html {\n    line-height: 1.15;\n    /* 1 */\n    -ms-text-size-adjust: 100%;\n    /* 2 */\n    -webkit-text-size-adjust: 100%;\n    /* 2 */\n    }\n\n    body {\n    margin: 0;\n    }\n\n    article,\n    aside,\n    footer,\n    header,\n    nav,\n    section {\n    display: block;\n    }\n\n    h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n    }\n\n    figcaption,\n    figure,\n    main {\n    /* 1 */\n    display: block;\n    }\n\n    figure {\n    margin: 1em 40px;\n    }\n\n    hr {\n    box-sizing: content-box;\n    /* 1 */\n    height: 0;\n    /* 1 */\n    overflow: visible;\n    /* 2 */\n    }\n\n    pre {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    a {\n    background-color: transparent;\n    /* 1 */\n    -webkit-text-decoration-skip: objects;\n    /* 2 */\n    }\n\n    abbr[title] {\n    border-bottom: none;\n    /* 1 */\n    text-decoration: underline;\n    /* 2 */\n    text-decoration: underline dotted;\n    /* 2 */\n    }\n\n    b,\n    strong {\n    font-weight: inherit;\n    }\n\n    b,\n    strong {\n    font-weight: bolder;\n    }\n\n    code,\n    kbd,\n    samp {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    dfn {\n    font-style: italic;\n    }\n\n    mark {\n    background-color: #ff0;\n    color: #000;\n    }\n\n    small {\n    font-size: 80%;\n    }\n\n    sub,\n    sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n    }\n\n    sub {\n    bottom: -0.25em;\n    }\n\n    sup {\n    top: -0.5em;\n    }\n\n    audio,\n    video {\n    display: inline-block;\n    }\n\n    audio:not([controls]) {\n    display: none;\n    height: 0;\n    }\n\n    img {\n    border-style: none;\n    }\n\n    svg:not(:root) {\n    overflow: hidden;\n    }\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n    font-family: sans-serif;\n    /* 1 */\n    font-size: 100%;\n    /* 1 */\n    line-height: 1.15;\n    /* 1 */\n    margin: 0;\n    /* 2 */\n    }\n\n    button,\n    input {\n    /* 1 */\n    overflow: visible;\n    }\n\n    button,\n    select {\n    /* 1 */\n    text-transform: none;\n    }\n\n    button,\n    html [type=\"button\"],\n\n    /* 1 */\n\n    [type=\"reset\"],\n    [type=\"submit\"] {\n    -webkit-appearance: button;\n    /* 2 */\n    }\n\n    button::-moz-focus-inner,\n    [type=\"button\"]::-moz-focus-inner,\n    [type=\"reset\"]::-moz-focus-inner,\n    [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n    }\n\n    button:-moz-focusring,\n    [type=\"button\"]:-moz-focusring,\n    [type=\"reset\"]:-moz-focusring,\n    [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n    }\n\n    fieldset {\n    padding: 0.35em 0.75em 0.625em;\n    }\n\n    legend {\n    box-sizing: border-box;\n    /* 1 */\n    color: inherit;\n    /* 2 */\n    display: table;\n    /* 1 */\n    max-width: 100%;\n    /* 1 */\n    padding: 0;\n    /* 3 */\n    white-space: normal;\n    /* 1 */\n    }\n\n    progress {\n    display: inline-block;\n    /* 1 */\n    vertical-align: baseline;\n    /* 2 */\n    }\n\n    textarea {\n    overflow: auto;\n    }\n\n    [type=\"checkbox\"],\n    [type=\"radio\"] {\n    box-sizing: border-box;\n    /* 1 */\n    padding: 0;\n    /* 2 */\n    }\n\n    [type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n    }\n\n    [type=\"search\"] {\n    -webkit-appearance: textfield;\n    /* 1 */\n    outline-offset: -2px;\n    /* 2 */\n    }\n\n    [type=\"search\"]::-webkit-search-cancel-button,\n    [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n    }\n\n    ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    /* 1 */\n    font: inherit;\n    /* 2 */\n    }\n\n    details,\n\n    /* 1 */\n\n    menu {\n    display: block;\n    }\n\n    summary {\n    display: list-item;\n    }\n\n    canvas {\n    display: inline-block;\n    }\n\n    template {\n    display: none;\n    }\n\n    [hidden] {\n    display: none;\n    }\n\n\n    /* reset */\n\n    html,\n    body,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    div,\n    dl,\n    dt,\n    dd,\n    ul,\n    ol,\n    li,\n    p,\n    blockquote,\n    pre,\n    hr,\n    figure,\n    table,\n    caption,\n    th,\n    td,\n    form,\n    fieldset,\n    legend,\n    input,\n    button,\n    textarea,\n    menu {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    }\n\n#### Phone-reset\n\n    /* normalize.css */\n\n    html {\n    line-height: 1.15;\n    /* 1 */\n    -ms-text-size-adjust: 100%;\n    /* 2 */\n    -webkit-text-size-adjust: 100%;\n    /* 2 */\n    }\n\n    body {\n    margin: 0;\n    }\n\n    article,\n    aside,\n    footer,\n    header,\n    nav,\n    section {\n    display: block;\n    }\n\n    h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n    }\n\n    figcaption,\n    figure,\n    main {\n    /* 1 */\n    display: block;\n    }\n\n    figure {\n    margin: 1em 40px;\n    }\n\n    hr {\n    box-sizing: content-box;\n    /* 1 */\n    height: 0;\n    /* 1 */\n    overflow: visible;\n    /* 2 */\n    }\n\n    pre {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    a {\n    background-color: transparent;\n    /* 1 */\n    -webkit-text-decoration-skip: objects;\n    /* 2 */\n    }\n\n    abbr[title] {\n    border-bottom: none;\n    /* 1 */\n    text-decoration: underline;\n    /* 2 */\n    text-decoration: underline dotted;\n    /* 2 */\n    }\n\n    b,\n    strong {\n    font-weight: inherit;\n    }\n\n    b,\n    strong {\n    font-weight: bolder;\n    }\n\n    code,\n    kbd,\n    samp {\n    font-family: monospace, monospace;\n    /* 1 */\n    font-size: 1em;\n    /* 2 */\n    }\n\n    dfn {\n    font-style: italic;\n    }\n\n    mark {\n    background-color: #ff0;\n    color: #000;\n    }\n\n    small {\n    font-size: 80%;\n    }\n\n    sub,\n    sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n    }\n\n    sub {\n    bottom: -0.25em;\n    }\n\n    sup {\n    top: -0.5em;\n    }\n\n    audio,\n    video {\n    display: inline-block;\n    }\n\n    audio:not([controls]) {\n    display: none;\n    height: 0;\n    }\n\n    img {\n    border-style: none;\n    }\n\n    svg:not(:root) {\n    overflow: hidden;\n    }\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n    font-family: sans-serif;\n    /* 1 */\n    font-size: 100%;\n    /* 1 */\n    line-height: 1.15;\n    /* 1 */\n    margin: 0;\n    /* 2 */\n    }\n\n    button,\n    input {\n    /* 1 */\n    overflow: visible;\n    }\n\n    button,\n    select {\n    /* 1 */\n    text-transform: none;\n    }\n\n    button,\n    html [type=\"button\"],\n\n    /* 1 */\n\n    [type=\"reset\"],\n    [type=\"submit\"] {\n    -webkit-appearance: button;\n    /* 2 */\n    }\n\n    button::-moz-focus-inner,\n    [type=\"button\"]::-moz-focus-inner,\n    [type=\"reset\"]::-moz-focus-inner,\n    [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n    }\n\n    button:-moz-focusring,\n    [type=\"button\"]:-moz-focusring,\n    [type=\"reset\"]:-moz-focusring,\n    [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n    }\n\n    fieldset {\n    padding: 0.35em 0.75em 0.625em;\n    }\n\n    legend {\n    box-sizing: border-box;\n    /* 1 */\n    color: inherit;\n    /* 2 */\n    display: table;\n    /* 1 */\n    max-width: 100%;\n    /* 1 */\n    padding: 0;\n    /* 3 */\n    white-space: normal;\n    /* 1 */\n    }\n\n    progress {\n    display: inline-block;\n    /* 1 */\n    vertical-align: baseline;\n    /* 2 */\n    }\n\n    textarea {\n    overflow: auto;\n    }\n\n    [type=\"checkbox\"],\n    [type=\"radio\"] {\n    box-sizing: border-box;\n    /* 1 */\n    padding: 0;\n    /* 2 */\n    }\n\n    [type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n    }\n\n    [type=\"search\"] {\n    -webkit-appearance: textfield;\n    /* 1 */\n    outline-offset: -2px;\n    /* 2 */\n    }\n\n    [type=\"search\"]::-webkit-search-cancel-button,\n    [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n    }\n\n    ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    /* 1 */\n    font: inherit;\n    /* 2 */\n    }\n\n    details,\n\n    /* 1 */\n\n    menu {\n    display: block;\n    }\n\n    summary {\n    display: list-item;\n    }\n\n    canvas {\n    display: inline-block;\n    }\n\n    template {\n    display: none;\n    }\n\n    [hidden] {\n    display: none;\n    }\n\n\n    /* reset */\n\n    html,\n    body,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    div,\n    dl,\n    dt,\n    dd,\n    ul,\n    ol,\n    li,\n    p,\n    blockquote,\n    pre,\n    hr,\n    figure,\n    table,\n    caption,\n    th,\n    td,\n    form,\n    fieldset,\n    legend,\n    input,\n    button,\n    textarea,\n    menu {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    }\n\n    html,\n    body {\n    /* 禁止选中文本 */\n    -webkit-user-select: none;\n    user-select: none;\n    font: Oswald, 'Open Sans', Helvetica, Arial, sans-serif\n    }\n\n\n    /* 禁止长按链接与图片弹出菜单 */\n\n    a,\n    img {\n    -webkit-touch-callout: none;\n    }\n\n\n    /*ios android去除自带阴影的样式*/\n\n    a,\n    input {\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    }\n\n    input[type=\"text\"] {\n    -webkit-appearance: none;\n    }\n\n#### 公共样式提取\n\n    /* 禁止选中文本 */\n    .usn{\n        -webkit-user-select:none;\n        -moz-user-select:none;\n        -ms-user-select:none;\n        -o-user-select:none;\n        user-select:none;\n    }\n    /* 浮动 */\n    .fl { float: left; }\n    .fr { float: right; }\n    .cf { zoom: 1; }\n    .cf:after {\n        content:\".\";\n        display:block;\n        clear:both;\n        visibility:hidden;\n        height:0;\n        overflow:hidden;\n    }\n\n    /* 元素类型 */\n    .db { display: block; }\n    .dn { display: none; }\n    .di { display: inline }\n    .dib {display: inline-block;}\n    .transparent { opacity: 0 }\n\n\n    /*文字排版、颜色*/\n    .f12 { font-size:12px }\n    .f14 { font-size:14px }\n    .f16 { font-size:16px }\n    .f18 { font-size:18px }\n    .f20 { font-size:20px }\n    .fb { font-weight:bold }\n    .fn { font-weight:normal }\n    .t2 { text-indent:2em }\n    .red,a.red { color:#cc0031 }\n    .darkblue,a.darkblue { color:#039 }\n    .gray,a.gray { color:#878787 }\n    .lh150 { line-height:150% }\n    .lh180 { line-height:180% }\n    .lh200 { line-height:200% }\n    .unl { text-decoration:underline; }\n    .no_unl { text-decoration:none; }\n    .tl { text-align: left; }\n    .tc { text-align: center; }\n    .tr { text-align: right; }\n    .tj { text-align: justify; text-justify: inter-ideograph; }\n    .wn { /* 强制不换行 */\n        word-wrap:normal;\n        white-space:nowrap;\n    }\n    .wb { /* 强制换行 */\n        white-space:normal;\n        word-wrap:break-word;\n        word-break:break-all;\n    }\n    .wp { /* 保持空白序列*/\n        overflow:hidden;text-align:left;white-space:pre-wrap;word-wrap:break-word;word-break:break-all;\n    }\n    .wes { /* 多出部分用省略号表示 , 用于一行 */\n        overflow:hidden;\n        word-wrap:normal;\n        white-space:nowrap;\n        text-overflow:ellipsis;\n    }\n    .wes-2 { /* 适用于webkit内核和移动端 */\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n        overflow: hidden;\n    } \n    .wes-3 {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 3;\n        overflow: hidden;\n    }\n    .wes-4 {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 4;\n        overflow: hidden;\n    }\n\n    /* 溢出样式 */\n    .ofh { overflow: hidden; }\n    .ofs {overflow: scroll; }\n    .ofa {overflow: auto; }\n    .ofv {overflow: visible; }\n\n    /* 定位方式 */\n    .ps {position: static; }\n    .pr {position: relative;zoom:1; }\n    .pa {position: absolute; }\n    .pf {position: fixed; }\n\n\n    /* 垂直对齐方式 */\n    .vt {vertical-align: top; }\n    .vm {vertical-align: middle; }\n    .vb {vertical-align: bottom; }\n\n\n    /* 鼠标样式 */\n    .csd {cursor: default; }\n    .csp {cursor: pointer; }\n    .csh {cursor: help; }\n    .csm {cursor: move; }\n\n    /* flex布局 */\n    .df-sb {\n        display:flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .df-sa {\n        display:flex;\n        align-items: center;\n        justify-content: space-around;\n    }\n\n    /* 垂直居中 */\n    .df-c {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .tb-c {\n        text-align:center;\n        display:table-cell;\n        vertical-align:middle;\n    }\n    .ts-c {\n        position: absolute;\n        left: 50%; top: 50%;\n        transform: translate(-50%, -50%);\n    }\n    .ts-mc {\n        position: absolute;\n        left: 0;right: 0;\n        bottom: 0; top: 0;\n        margin: auto;\n    }\n\n    /* 辅助 */\n    .mask-fixed-wrapper {\n        width: 100%;\n        height: 100%;\n        position: fixed;\n        left:0;top:0;\n        background: rgba(0, 0, 0, 0.65);\n        z-index: 999;\n    }\n    .bg-cover {\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n    .bg-cover-all {\n        background-size: 100% 100%;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n","slug":"javascript/js工具类封装","published":1,"updated":"2018-05-23T09:10:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji0akp4h000lkn3odz9cotjb","content":"<p><br></p>\n<p>本文转载过来<br>作者：cd-dongzi<br>链接：<a href=\"https://juejin.im/post/5a7523af5188257a7d6e028e\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5a7523af5188257a7d6e028e</a><br>来源：掘金</p>\n<p>在工作中经常用到这些工具类的封装</p>\n<blockquote>\n<p>Javascript</p>\n</blockquote>\n<h4 id=\"type-类型判断\"><a href=\"#type-类型判断\" class=\"headerlink\" title=\"type 类型判断\"></a>type 类型判断</h4><pre><code>isString (o) { //是否字符串\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;String&apos;\n}\n\nisNumber (o) { //是否数字\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Number&apos;\n}\n\nisBoolean (o) { //是否boolean\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Boolean&apos;\n}\n\nisFunction (o) { //是否函数\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Function&apos;\n}\n\nisNull (o) { //是否为null\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Null&apos;\n}\n\nisUndefined (o) { //是否undefined\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Undefined&apos;\n}\n\nisObj (o) { //是否对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Object&apos;\n}\n\nisArray (o) { //是否数组\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Array&apos;\n}\n\nisDate (o) { //是否时间\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Date&apos;\n}\n\nisRegExp (o) { //是否正则\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;RegExp&apos;\n}\n\nisError (o) { //是否错误对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Error&apos;\n}\n\nisSymbol (o) { //是否Symbol函数\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Symbol&apos;\n}\n\nisPromise (o) { //是否Promise对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Promise&apos;\n}\n\nisSet (o) { //是否Set对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Set&apos;\n}\n\n\n\nisFalse (o) {\n    if (!o || o === &apos;null&apos; || o === &apos;undefined&apos; || o === &apos;false&apos; || o === &apos;NaN&apos;) return true\n        return false\n}\n\nisTrue (o) {\n    return !this.isFalse(o)\n}\n\nisIos () {\n    var u = navigator.userAgent;\n    if (u.indexOf(&apos;Android&apos;) &gt; -1 || u.indexOf(&apos;Linux&apos;) &gt; -1) {//安卓手机\n        // return &quot;Android&quot;;\n        return false\n    } else if (u.indexOf(&apos;iPhone&apos;) &gt; -1) {//苹果手机\n        // return &quot;iPhone&quot;;\n        return true\n    } else if (u.indexOf(&apos;iPad&apos;) &gt; -1) {//iPad\n        // return &quot;iPad&quot;;\n        return false\n    } else if (u.indexOf(&apos;Windows Phone&apos;) &gt; -1) {//winphone手机\n        // return &quot;Windows Phone&quot;;\n        return false\n    }else{\n        return false\n    }\n}\n\nisPC () { //是否为PC端\n    var userAgentInfo = navigator.userAgent;\n    var Agents = [&quot;Android&quot;, &quot;iPhone&quot;,\n                &quot;SymbianOS&quot;, &quot;Windows Phone&quot;,\n                &quot;iPad&quot;, &quot;iPod&quot;];\n    var flag = true;\n    for (var v = 0; v &lt; Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) &gt; 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nbrowserType(){\n    var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n    var isOpera = userAgent.indexOf(&quot;Opera&quot;) &gt; -1; //判断是否Opera浏览器\n    var isIE = userAgent.indexOf(&quot;compatible&quot;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;MSIE&quot;) &gt; -1 &amp;&amp; !isOpera; //判断是否IE浏览器\n    var isIE11 = userAgent.indexOf(&apos;Trident&apos;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;rv:11.0&quot;) &gt; -1;\n    var isEdge = userAgent.indexOf(&quot;Edge&quot;) &gt; -1 &amp;&amp; !isIE; //判断是否IE的Edge浏览器  \n    var isFF = userAgent.indexOf(&quot;Firefox&quot;) &gt; -1; //判断是否Firefox浏览器\n    var isSafari = userAgent.indexOf(&quot;Safari&quot;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;Chrome&quot;) == -1; //判断是否Safari浏览器\n    var isChrome = userAgent.indexOf(&quot;Chrome&quot;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;Safari&quot;) &gt; -1; //判断Chrome浏览器\n\n    if (isIE) {\n        var reIE = new RegExp(&quot;MSIE (\\\\d+\\\\.\\\\d+);&quot;);\n        reIE.test(userAgent);\n        var fIEVersion = parseFloat(RegExp[&quot;$1&quot;]);\n        if(fIEVersion == 7) return &quot;IE7&quot;\n        else if(fIEVersion == 8) return &quot;IE8&quot;;\n        else if(fIEVersion == 9) return &quot;IE9&quot;;\n        else if(fIEVersion == 10) return &quot;IE10&quot;;\n        else return &quot;IE7以下&quot;//IE版本过低\n    }\n    if (isIE11) return &apos;IE11&apos;;\n    if (isEdge) return &quot;Edge&quot;;\n    if (isFF) return &quot;FF&quot;;\n    if (isOpera) return &quot;Opera&quot;;\n    if (isSafari) return &quot;Safari&quot;;\n    if (isChrome) return &quot;Chrome&quot;;\n}\n\ncheckStr (str, type) {\n    switch (type) {\n        case &apos;phone&apos;:   //手机号码\n            return /^1[3|4|5|6|7|8|9][0-9]{9}$/.test(str);\n        case &apos;tel&apos;:     //座机\n            return /^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$/.test(str);\n        case &apos;card&apos;:    //身份证\n            return /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(str);\n        case &apos;pwd&apos;:     //密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线\n            return /^[a-zA-Z]\\w{5,17}$/.test(str)\n        case &apos;postal&apos;:  //邮政编码\n            return /[1-9]\\d{5}(?!\\d)/.test(str);\n        case &apos;QQ&apos;:      //QQ号\n            return /^[1-9][0-9]{4,9}$/.test(str);\n        case &apos;email&apos;:   //邮箱\n            return /^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/.test(str);\n        case &apos;money&apos;:   //金额(小数点2位)\n            return /^\\d*(?:\\.\\d{0,2})?$/.test(str);\n        case &apos;URL&apos;:     //网址\n            return /(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?/.test(str)\n        case &apos;IP&apos;:      //IP\n            return /((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))/.test(str);\n        case &apos;date&apos;:    //日期时间\n            return /^(\\d{4})\\-(\\d{2})\\-(\\d{2}) (\\d{2})(?:\\:\\d{2}|:(\\d{2}):(\\d{2}))$/.test(str) || /^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/.test(str)\n        case &apos;number&apos;:  //数字\n            return /^[0-9]$/.test(str);\n        case &apos;english&apos;: //英文\n            return /^[a-zA-Z]+$/.test(str);\n        case &apos;chinese&apos;: //中文\n            return /^[\\u4E00-\\u9FA5]+$/.test(str);\n        case &apos;lower&apos;:   //小写\n            return /^[a-z]+$/.test(str);\n        case &apos;upper&apos;:   //大写\n            return /^[A-Z]+$/.test(str);\n        case &apos;HTML&apos;:    //HTML标记\n            return /&lt;(&quot;[^&quot;]*&quot;|&apos;[^&apos;]*&apos;|[^&apos;&quot;&gt;])*&gt;/.test(str);\n        default:\n            return true;\n    }\n\n    // 严格的身份证校验\n    isCardID(sId) {\n        if (!/(^\\d{15}$)|(^\\d{17}(\\d|X|x)$)/.test(sId)) {\n            alert(&apos;你输入的身份证长度或格式错误&apos;)\n            return false\n        }\n        //身份证城市\n        var aCity={11:&quot;北京&quot;,12:&quot;天津&quot;,13:&quot;河北&quot;,14:&quot;山西&quot;,15:&quot;内蒙古&quot;,21:&quot;辽宁&quot;,22:&quot;吉林&quot;,23:&quot;黑龙江&quot;,31:&quot;上海&quot;,32:&quot;江苏&quot;,33:&quot;浙江&quot;,34:&quot;安徽&quot;,35:&quot;福建&quot;,36:&quot;江西&quot;,37:&quot;山东&quot;,41:&quot;河南&quot;,42:&quot;湖北&quot;,43:&quot;湖南&quot;,44:&quot;广东&quot;,45:&quot;广西&quot;,46:&quot;海南&quot;,50:&quot;重庆&quot;,51:&quot;四川&quot;,52:&quot;贵州&quot;,53:&quot;云南&quot;,54:&quot;西藏&quot;,61:&quot;陕西&quot;,62:&quot;甘肃&quot;,63:&quot;青海&quot;,64:&quot;宁夏&quot;,65:&quot;新疆&quot;,71:&quot;台湾&quot;,81:&quot;香港&quot;,82:&quot;澳门&quot;,91:&quot;国外&quot;};\n        if(!aCity[parseInt(sId.substr(0,2))]) { \n            alert(&apos;你的身份证地区非法&apos;)\n            return false\n        }\n\n        // 出生日期验证\n        var sBirthday=(sId.substr(6,4)+&quot;-&quot;+Number(sId.substr(10,2))+&quot;-&quot;+Number(sId.substr(12,2))).replace(/-/g,&quot;/&quot;),\n            d = new Date(sBirthday)\n        if(sBirthday != (d.getFullYear()+&quot;/&quot;+ (d.getMonth()+1) + &quot;/&quot; + d.getDate())) {\n            alert(&apos;身份证上的出生日期非法&apos;)\n            return false\n        }\n\n        // 身份证号码校验\n        var sum = 0,\n            weights =  [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2],\n            codes = &quot;10X98765432&quot;\n        for (var i = 0; i &lt; sId.length - 1; i++) {\n            sum += sId[i] * weights[i];\n        }\n        var last = codes[sum % 11]; //计算出来的最后一位身份证号码\n        if (sId[sId.length-1] != last) { \n            alert(&apos;你输入的身份证号非法&apos;)\n            return false\n        }\n\n        return true\n    }\n}\n</code></pre><h4 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h4><p>/**</p>\n<pre><code>* 格式化时间\n* \n* @param  {time} 时间\n* @param  {cFormat} 格式\n* @return {String} 字符串\n*\n* @example formatTime(&apos;2018-1-29&apos;, &apos;{y}/{m}/{d} {h}:{i}:{s}&apos;) // -&gt; 2018/01/29 00:00:00\n</code></pre><p>*/</p>\n<pre><code>formatTime(time, cFormat) {\n    if (arguments.length === 0) return null\n    if ((time + &apos;&apos;).length === 10) {\n        time = +time * 1000\n    }\n\n    var format = cFormat || &apos;{y}-{m}-{d} {h}:{i}:{s}&apos;, date\n    if (typeof time === &apos;object&apos;) {\n        date = time\n    } else {\n        date = new Date(time)\n    }\n\n    var formatObj = {\n        y: date.getFullYear(),\n        m: date.getMonth() + 1,\n        d: date.getDate(),\n        h: date.getHours(),\n        i: date.getMinutes(),\n        s: date.getSeconds(),\n        a: date.getDay()\n    }\n    var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) =&gt; {\n        var value = formatObj[key]\n        if (key === &apos;a&apos;) return [&apos;一&apos;, &apos;二&apos;, &apos;三&apos;, &apos;四&apos;, &apos;五&apos;, &apos;六&apos;, &apos;日&apos;][value - 1]\n        if (result.length &gt; 0 &amp;&amp; value &lt; 10) {\n            value = &apos;0&apos; + value\n        }\n        return value || 0\n    })\n    return time_str\n}\n</code></pre><p>/**</p>\n<pre><code>* 返回指定长度的月份集合\n* \n* @param  {time} 时间\n* @param  {len} 长度\n* @param  {direction} 方向：  1: 前几个月;  2: 后几个月;  3:前后几个月  默认 3\n* @return {Array} 数组\n* \n* @example   getMonths(&apos;2018-1-29&apos;, 6, 1)  // -&gt;  [&quot;2018-1&quot;, &quot;2017-12&quot;, &quot;2017-11&quot;, &quot;2017-10&quot;, &quot;2017-9&quot;, &quot;2017-8&quot;, &quot;2017-7&quot;]\n</code></pre><p>*/</p>\n<pre><code>getMonths(time, len, direction) {\n    var mm = new Date(time).getMonth(),\n        yy = new Date(time).getFullYear(),\n        direction = isNaN(direction) ? 3 : direction,\n        index = mm;\n    var cutMonth = function(index) {\n        if ( index &lt;= len &amp;&amp; index &gt;= -len) {\n            return direction === 1 ? formatPre(index).concat(cutMonth(++index)):\n                direction === 2 ? formatNext(index).concat(cutMonth(++index)):formatCurr(index).concat(cutMonth(++index))\n        }\n        return []\n    }\n    var formatNext = function(i) {\n        var y = Math.floor(i/12),\n            m = i%12\n        return [yy+y + &apos;-&apos; + (m+1)]\n    }\n    var formatPre = function(i) {\n        var y = Math.ceil(i/12),\n            m = i%12\n        m = m===0 ? 12 : m\n        return [yy-y + &apos;-&apos; + (13 - m)]\n    }\n    var formatCurr = function(i) {\n        var y = Math.floor(i/12),\n            yNext = Math.ceil(i/12),\n            m = i%12,\n            mNext = m===0 ? 12 : m\n        return [yy-yNext + &apos;-&apos; + (13 - mNext),yy+y + &apos;-&apos; + (m+1)]\n    }\n    // 数组去重\n    var unique = function(arr) {\n        if ( Array.hasOwnProperty(&apos;from&apos;) ) {\n            return Array.from(new Set(arr));\n        }else{\n            var n = {},r=[]; \n            for(var i = 0; i &lt; arr.length; i++){\n                if (!n[arr[i]]){\n                    n[arr[i]] = true; \n                    r.push(arr[i]);\n                }\n            }\n            return r;\n        }\n    }\n    return direction !== 3 ? cutMonth(index) : unique(cutMonth(index).sort(function(t1, t2){\n        return new Date(t1).getTime() - new Date(t2).getTime()\n    }))\n}\n</code></pre><p>/**</p>\n<pre><code>* 返回指定长度的天数集合\n* \n* @param  {time} 时间\n* @param  {len} 长度\n* @param  {direction} 方向： 1: 前几天;  2: 后几天;  3:前后几天  默认 3\n* @return {Array} 数组\n*\n* @example date.getDays(&apos;2018-1-29&apos;, 6) // -&gt; [&quot;2018-1-26&quot;, &quot;2018-1-27&quot;, &quot;2018-1-28&quot;, &quot;2018-1-29&quot;, &quot;2018-1-30&quot;, &quot;2018-1-31&quot;, &quot;2018-2-1&quot;]\n</code></pre><p>*/</p>\n<pre><code>getDays(time, len, diretion) {\n    var tt = new Date(time)\n    var getDay = function(day) {\n        var t = new Date(time)\n        t.setDate(t.getDate() + day)\n        var m = t.getMonth()+1\n        return t.getFullYear()+&apos;-&apos;+m+&apos;-&apos;+t.getDate()\n    }\n    var arr = []\n    if (diretion === 1) {\n        for (var i = 1; i &lt;= len; i++) {\n            arr.unshift(getDay(-i))\n        }\n    }else if(diretion === 2) {\n        for (var i = 1; i &lt;= len; i++) {\n            arr.push(getDay(i))\n        }\n    }else {\n        for (var i = 1; i &lt;= len; i++) {\n            arr.unshift(getDay(-i))\n        }\n        arr.push(tt.getFullYear()+&apos;-&apos;+(tt.getMonth()+1)+&apos;-&apos;+tt.getDate())\n        for (var i = 1; i &lt;= len; i++) {\n            arr.push(getDay(i))\n        }\n    }\n    return diretion === 1 ? arr.concat([tt.getFullYear()+&apos;-&apos;+(tt.getMonth()+1)+&apos;-&apos;+tt.getDate()]) : \n        diretion === 2 ? [tt.getFullYear()+&apos;-&apos;+(tt.getMonth()+1)+&apos;-&apos;+tt.getDate()].concat(arr) : arr\n}\n</code></pre><p>/**</p>\n<pre><code>* @param  {s} 秒数\n* @return {String} 字符串 \n*\n* @example formatHMS(3610) // -&gt; 1h0m10s\n</code></pre><p>*/</p>\n<pre><code>formatHMS (s) {\n    var str = &apos;&apos;\n    if (s &gt; 3600) {\n        str = Math.floor(s/3600)+&apos;h&apos;+Math.floor(s%3600/60)+&apos;m&apos;+s%60+&apos;s&apos;\n    }else if(s &gt; 60) {\n        str = Math.floor(s/60)+&apos;m&apos;+s%60+&apos;s&apos;\n    }else{\n        str = s%60+&apos;s&apos;\n    }\n    return str\n}\n\n/*获取某月有多少天*/\ngetMonthOfDay (time) {\n    var date = new Date(time)\n    var year = date.getFullYear()\n    var mouth = date.getMonth() + 1\n    var days\n\n    //当月份为二月时，根据闰年还是非闰年判断天数\n    if (mouth == 2) {\n        days = (year%4==0 &amp;&amp; year%100==0 &amp;&amp; year%400==0) || (year%4==0 &amp;&amp; year%100!=0) ? 28 : 29\n    } else if (mouth == 1 || mouth == 3 || mouth == 5 || mouth == 7 || mouth == 8 || mouth == 10 || mouth == 12) {\n        //月份为：1,3,5,7,8,10,12 时，为大月.则天数为31；\n        days = 31\n    } else {\n        //其他月份，天数为：30.\n        days = 30\n    }\n    return days\n}\n\n/*获取某年有多少天*/\ngetYearOfDay (time) {\n    var firstDayYear = this.getFirstDayOfYear(time);\n    var lastDayYear = this.getLastDayOfYear(time);\n    var numSecond = (new Date(lastDayYear).getTime() - new Date(firstDayYear).getTime())/1000;\n    return Math.ceil(numSecond/(24*3600));\n}\n\n/*获取某年的第一天*/\ngetFirstDayOfYear (time) {\n    var year = new Date(time).getFullYear();\n    return year + &quot;-01-01 00:00:00&quot;;\n}\n\n/*获取某年最后一天*/\ngetLastDayOfYear (time) {\n    var year = new Date(time).getFullYear();\n    var dateString = year + &quot;-12-01 00:00:00&quot;;\n    var endDay = this.getMonthOfDay(dateString);\n    return year + &quot;-12-&quot; + endDay + &quot; 23:59:59&quot;;\n}\n\n/*获取某个日期是当年中的第几天*/\ngetDayOfYear (time) {\n    var firstDayYear = this.getFirstDayOfYear(time);\n    var numSecond = (new Date(time).getTime() - new Date(firstDayYear).getTime())/1000;\n    return Math.ceil(numSecond/(24*3600));\n}\n\n/*获取某个日期在这一年的第几周*/\ngetDayOfYearWeek (time) {\n    var numdays = this.getDayOfYear(time);\n    return Math.ceil(numdays / 7);\n}\n</code></pre><h4 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h4><pre><code>/*判断一个元素是否在数组中*/\ncontains (arr, val) {\n    return arr.indexOf(val) != -1 ? true : false;\n}\n\n\n/**\n* @param  {arr} 数组\n* @param  {fn} 回调函数\n* @return {undefined}\n*/\neach (arr, fn) {\n    fn = fn || Function;\n    var a = [];\n    var args = Array.prototype.slice.call(arguments, 1);\n    for(var i = 0; i &lt; arr.length; i++) {\n        var res = fn.apply(arr, [arr[i], i].concat(args));\n        if(res != null) a.push(res);\n    }\n}\n\n/**\n* @param  {arr} 数组\n* @param  {fn} 回调函数\n* @param  {thisObj} this指向\n* @return {Array} \n*/\nmap (arr, fn, thisObj) {\n    var scope = thisObj || window;\n    var a = [];\n    for(var i = 0, j = arr.length; i &lt; j; ++i) {\n        var res = fn.call(scope, arr[i], i, this);\n        if(res != null) a.push(res);\n    }\n    return a;\n}\n\n\n/**\n* @param  {arr} 数组\n* @param  {type} 1：从小到大   2：从大到小   3：随机\n* @return {Array}\n*/\nsort (arr, type = 1) {\n    return arr.sort( (a, b) =&gt; {\n        switch(type) {\n            case 1:\n                return a - b;\n            case 2:\n                return b - a;\n            case 3:\n                return Math.random() - 0.5;\n            default:\n                return arr;\n        }\n    })\n}\n\n/*去重*/\nunique (arr) {\n    if ( Array.hasOwnProperty(&apos;from&apos;) ) {\n        return Array.from(new Set(arr));\n    }else{\n        var n = {},r=[]; \n        for(var i = 0; i &lt; arr.length; i++){\n            if (!n[arr[i]]){\n                n[arr[i]] = true; \n                r.push(arr[i]);\n            }\n        }\n        return r;\n    }\n    // 注：上面 else 里面的排重并不能区分 2 和 &apos;2&apos;，但能减少用indexOf带来的性能,暂时没找到替代的方法。。。\n    /* 正确排重\n    if ( Array.hasOwnProperty(&apos;from&apos;) ) {\n        return Array.from(new Set(arr))\n    }else{\n        var r = [], NaNBol = true\n        for(var i=0; i &lt; arr.length; i++) {\n            if (arr[i] !== arr[i]) {\n                if (NaNBol &amp;&amp; r.indexOf(arr[i]) === -1) {\n                    r.push(arr[i])\n                    NaNBol = false\n                }\n            }else{\n                if(r.indexOf(arr[i]) === -1) r.push(arr[i])\n            }\n        }\n        return r\n    }\n\n    */\n}\n\n\n/*求两个集合的并集*/\nunion (a, b) {\n    var newArr = a.concat(b);\n    return this.unique(newArr);\n}\n\n/*求两个集合的交集*/\nintersect (a, b) {\n    var _this = this;\n    a = this.unique(a);\n    return this.map(a, function(o) {\n        return _this.contains(b, o) ? o : null;\n    });\n}\n\n/*删除其中一个元素*/\nremove (arr, ele) {\n    var index = arr.indexOf(ele);\n    if(index &gt; -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\n\n/*将类数组转换为数组的方法*/\nformArray (ary) {\n    var arr = [];\n    if(Array.isArray(ary)) {\n        arr = ary;\n    } else {\n        arr = Array.prototype.slice.call(ary);\n    };\n    return arr;\n}\n\n/*最大值*/\nmax (arr) {\n    return Math.max.apply(null, arr);\n}\n\n/*最小值*/\nmin (arr) {\n    return Math.min.apply(null, arr);\n}\n\n/*求和*/\nsum (arr) {\n    return arr.reduce( (pre, cur) =&gt; {\n        return pre + cur\n    })\n}\n\n/*平均值*/\naverage (arr) {\n    return this.sum(arr)/arr.length\n}\n</code></pre><h4 id=\"String-字符串操作\"><a href=\"#String-字符串操作\" class=\"headerlink\" title=\"String 字符串操作\"></a>String 字符串操作</h4><p>/**</p>\n<pre><code>* 去除空格\n* @param  {str}\n* @param  {type} \n*       type:  1-所有空格  2-前后空格  3-前空格 4-后空格\n* @return {String}\n</code></pre><p>*/</p>\n<pre><code>trim (str, type) {\n    type = type || 1\n    switch (type) {\n        case 1:\n            return str.replace(/\\s+/g, &quot;&quot;);\n        case 2:\n            return str.replace(/(^\\s*)|(\\s*$)/g, &quot;&quot;);\n        case 3:\n            return str.replace(/(^\\s*)/g, &quot;&quot;);\n        case 4:\n            return str.replace(/(\\s*$)/g, &quot;&quot;);\n        default:\n            return str;\n    }\n}\n</code></pre><p>/**</p>\n<pre><code>* @param  {str} \n* @param  {type}\n*       type:  1:首字母大写  2：首页母小写  3：大小写转换  4：全部大写  5：全部小写\n* @return {String}\n</code></pre><p>*/</p>\n<pre><code>changeCase (str, type) {\n    type = type || 4\n    switch (type) {\n        case 1:\n            return str.replace(/\\b\\w+\\b/g, function (word) {\n                return word.substring(0, 1).toUpperCase() + word.substring(1).toLowerCase();\n\n            });\n        case 2:\n            return str.replace(/\\b\\w+\\b/g, function (word) {\n                return word.substring(0, 1).toLowerCase() + word.substring(1).toUpperCase();\n            });\n        case 3:\n            return str.split(&apos;&apos;).map( function(word){\n                if (/[a-z]/.test(word)) {\n                    return word.toUpperCase();\n                }else{\n                    return word.toLowerCase()\n                }\n            }).join(&apos;&apos;)\n        case 4:\n            return str.toUpperCase();\n        case 5:\n            return str.toLowerCase();\n        default:\n            return str;\n    }\n}\n</code></pre><p>/<em><br>    检测密码强度\n</em>/</p>\n<pre><code>checkPwd (str) {\n    var Lv = 0;\n    if (str.length &lt; 6) {\n        return Lv\n    }\n    if (/[0-9]/.test(str)) {\n        Lv++\n    }\n    if (/[a-z]/.test(str)) {\n        Lv++\n    }\n    if (/[A-Z]/.test(str)) {\n        Lv++\n    }\n    if (/[\\.|-|_]/.test(str)) {\n        Lv++\n    }\n    return Lv;\n}\n\n/*过滤html代码(把&lt;&gt;转换)*/\nfilterTag (str) {\n    str = str.replace(/&amp;/ig, &quot;&amp;amp;&quot;);\n    str = str.replace(/&lt;/ig, &quot;&amp;lt;&quot;);\n    str = str.replace(/&gt;/ig, &quot;&amp;gt;&quot;);\n    str = str.replace(&quot; &quot;, &quot;&amp;nbsp;&quot;);\n    return str;\n}\n</code></pre><h4 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h4><p>/<em>随机数范围</em>/<br>random (min, max) {<br>    if (arguments.length === 2) {<br>        return Math.floor(min + Math.random() * ( (max+1) - min ))<br>    }else{<br>        return null;<br>    }</p>\n<p>}</p>\n<p>/<em>将阿拉伯数字翻译成中文的大写数字</em>/<br>numberToChinese (num) {<br>    var AA = new Array(“零”, “一”, “二”, “三”, “四”, “五”, “六”, “七”, “八”, “九”, “十”);<br>    var BB = new Array(“”, “十”, “百”, “仟”, “萬”, “億”, “点”, “”);<br>    var a = (“” + num).replace(/(^0*)/g, “”).split(“.”),<br>        k = 0,<br>        re = “”;<br>    for(var i = a[0].length - 1; i &gt;= 0; i–) {<br>        switch(k) {<br>            case 0:<br>                re = BB[7] + re;<br>                break;<br>            case 4:<br>                if(!new RegExp(“0{4}//d{“ + (a[0].length - i - 1) + “}$”)<br>                    .test(a[0]))<br>                    re = BB[4] + re;<br>                break;<br>            case 8:<br>                re = BB[5] + re;<br>                BB[7] = BB[5];<br>                k = 0;<br>                break;<br>        }<br>        if(k % 4 == 2 &amp;&amp; a[0].charAt(i + 2) != 0 &amp;&amp; a[0].charAt(i + 1) == 0)<br>            re = AA[0] + re;<br>        if(a[0].charAt(i) != 0)<br>            re = AA[a[0].charAt(i)] + BB[k % 4] + re;<br>        k++;<br>    }</p>\n<pre><code>if(a.length &gt; 1) // 加上小数部分(如果有小数部分)\n{\n    re += BB[6];\n    for(var i = 0; i &lt; a[1].length; i++)\n        re += AA[a[1].charAt(i)];\n}\nif(re == &apos;一十&apos;)\n    re = &quot;十&quot;;\nif(re.match(/^一/) &amp;&amp; re.length == 3)\n    re = re.replace(&quot;一&quot;, &quot;&quot;);\nreturn re;\n</code></pre><p>}</p>\n<p>/<em>将数字转换为大写金额</em>/<br>changeToChinese (Num) {<br>        //判断如果传递进来的不是字符的话转换为字符<br>        if(typeof Num == “number”) {<br>            Num = new String(Num);<br>        };<br>        Num = Num.replace(/,/g, “”) //替换tomoney()中的“,”<br>        Num = Num.replace(/ /g, “”) //替换tomoney()中的空格<br>        Num = Num.replace(/￥/g, “”) //替换掉可能出现的￥字符<br>        if(isNaN(Num)) { //验证输入的字符是否为数字<br>            //alert(“请检查小写金额是否正确”);<br>            return “”;<br>        };<br>        //字符处理完毕后开始转换，采用前后两部分分别转换<br>        var part = String(Num).split(“.”);<br>        var newchar = “”;<br>        //小数点前进行转化<br>        for(var i = part[0].length - 1; i &gt;= 0; i–) {<br>            if(part[0].length &gt; 10) {<br>                return “”;<br>                //若数量超过拾亿单位，提示<br>            }<br>            var tmpnewchar = “”<br>            var perchar = part[0].charAt(i);<br>            switch(perchar) {<br>                case “0”:<br>                    tmpnewchar = “零” + tmpnewchar;<br>                    break;<br>                case “1”:<br>                    tmpnewchar = “壹” + tmpnewchar;<br>                    break;<br>                case “2”:<br>                    tmpnewchar = “贰” + tmpnewchar;<br>                    break;<br>                case “3”:<br>                    tmpnewchar = “叁” + tmpnewchar;<br>                    break;<br>                case “4”:<br>                    tmpnewchar = “肆” + tmpnewchar;<br>                    break;<br>                case “5”:<br>                    tmpnewchar = “伍” + tmpnewchar;<br>                    break;<br>                case “6”:<br>                    tmpnewchar = “陆” + tmpnewchar;<br>                    break;<br>                case “7”:<br>                    tmpnewchar = “柒” + tmpnewchar;<br>                    break;<br>                case “8”:<br>                    tmpnewchar = “捌” + tmpnewchar;<br>                    break;<br>                case “9”:<br>                    tmpnewchar = “玖” + tmpnewchar;<br>                    break;<br>            }<br>            switch(part[0].length - i - 1) {<br>                case 0:<br>                    tmpnewchar = tmpnewchar + “元”;<br>                    break;<br>                case 1:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “拾”;<br>                    break;<br>                case 2:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “佰”;<br>                    break;<br>                case 3:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “仟”;<br>                    break;<br>                case 4:<br>                    tmpnewchar = tmpnewchar + “万”;<br>                    break;<br>                case 5:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “拾”;<br>                    break;<br>                case 6:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “佰”;<br>                    break;<br>                case 7:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “仟”;<br>                    break;<br>                case 8:<br>                    tmpnewchar = tmpnewchar + “亿”;<br>                    break;<br>                case 9:<br>                    tmpnewchar = tmpnewchar + “拾”;<br>                    break;<br>            }<br>            var newchar = tmpnewchar + newchar;<br>        }<br>        //小数点之后进行转化<br>        if(Num.indexOf(“.”) != -1) {<br>            if(part[1].length &gt; 2) {<br>                // alert(“小数点之后只能保留两位,系统将自动截断”);<br>                part[1] = part[1].substr(0, 2)<br>            }<br>            for(i = 0; i &lt; part[1].length; i++) {<br>                tmpnewchar = “”<br>                perchar = part[1].charAt(i)<br>                switch(perchar) {<br>                    case “0”:<br>                        tmpnewchar = “零” + tmpnewchar;<br>                        break;<br>                    case “1”:<br>                        tmpnewchar = “壹” + tmpnewchar;<br>                        break;<br>                    case “2”:<br>                        tmpnewchar = “贰” + tmpnewchar;<br>                        break;<br>                    case “3”:<br>                        tmpnewchar = “叁” + tmpnewchar;<br>                        break;<br>                    case “4”:<br>                        tmpnewchar = “肆” + tmpnewchar;<br>                        break;<br>                    case “5”:<br>                        tmpnewchar = “伍” + tmpnewchar;<br>                        break;<br>                    case “6”:<br>                        tmpnewchar = “陆” + tmpnewchar;<br>                        break;<br>                    case “7”:<br>                        tmpnewchar = “柒” + tmpnewchar;<br>                        break;<br>                    case “8”:<br>                        tmpnewchar = “捌” + tmpnewchar;<br>                        break;<br>                    case “9”:<br>                        tmpnewchar = “玖” + tmpnewchar;<br>                        break;<br>                }<br>                if(i == 0) tmpnewchar = tmpnewchar + “角”;<br>                if(i == 1) tmpnewchar = tmpnewchar + “分”;<br>                newchar = newchar + tmpnewchar;<br>            }<br>        }<br>        //替换所有无用汉字<br>        while(newchar.search(“零零”) != -1)<br>            newchar = newchar.replace(“零零”, “零”);<br>        newchar = newchar.replace(“零亿”, “亿”);<br>        newchar = newchar.replace(“亿万”, “亿”);<br>        newchar = newchar.replace(“零万”, “万”);<br>        newchar = newchar.replace(“零元”, “元”);<br>        newchar = newchar.replace(“零角”, “”);<br>        newchar = newchar.replace(“零分”, “”);<br>        if(newchar.charAt(newchar.length - 1) == “元”) {<br>            newchar = newchar + “整”<br>        }<br>        return newchar;<br>    }</p>\n<h4 id=\"Http\"><a href=\"#Http\" class=\"headerlink\" title=\"Http\"></a>Http</h4><p>/**</p>\n<pre><code>* @param  {setting}\n</code></pre><p>*/</p>\n<pre><code>ajax(setting){\n    //设置参数的初始值\n    var opts={\n        method: (setting.method || &quot;GET&quot;).toUpperCase(), //请求方式\n        url: setting.url || &quot;&quot;, // 请求地址\n        async: setting.async || true, // 是否异步\n        dataType: setting.dataType || &quot;json&quot;, // 解析方式\n        data: setting.data || &quot;&quot;, // 参数\n        success: setting.success || function(){}, // 请求成功回调\n        error: setting.error || function(){} // 请求失败回调\n    }\n\n    // 参数格式化\n    function params_format (obj) {\n        var str = &apos;&apos;\n        for (var i in obj) {\n            str += i + &apos;=&apos; + obj[i] + &apos;&amp;&apos;\n        }\n        return str.split(&apos;&apos;).slice(0, -1).join(&apos;&apos;)\n    }\n\n    // 创建ajax对象\n    var xhr=new XMLHttpRequest();\n\n    // 连接服务器open(方法GET/POST，请求地址， 异步传输)\n    if(opts.method == &apos;GET&apos;){\n        xhr.open(opts.method, opts.url + &quot;?&quot; + params_format(opts.data), opts.async);\n        xhr.send();\n    }else{\n        xhr.open(opts.method, opts.url, opts.async);\n        xhr.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);\n        xhr.send(opts.data);\n    }\n</code></pre><p>/<em><br>    <strong> 每当readyState改变时，就会触发onreadystatechange事件\n    </strong> readyState属性存储有XMLHttpRequest的状态信息<br>    <strong> 0 ：请求未初始化\n    </strong> 1 ：服务器连接已建立<br>    <strong> 2 ：请求已接受\n    </strong> 3 : 请求处理中<br>    ** 4 ：请求已完成，且相应就绪\n</em>/</p>\n<pre><code>    xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4 &amp;&amp; (xhr.status === 200 || xhr.status === 304)) {\n            switch(opts.dataType){\n                case &quot;json&quot;:\n                    var json = JSON.parse(xhr.responseText);\n                    opts.success(json);\n                    break;\n                case &quot;xml&quot;:\n                    opts.success(xhr.responseXML);\n                    break;\n                default:\n                    opts.success(xhr.responseText);\n                    break;\n            }\n        }\n    }\n\n    xhr.onerror = function(err) {\n        opts.error(err);\n    }\n}\n</code></pre><p>/**</p>\n<pre><code>* @param  {url}\n* @param  {setting}\n* @return {Promise}\n</code></pre><p>*/</p>\n<pre><code>fetch(url, setting) {\n    //设置参数的初始值\n    let opts={\n        method: (setting.method || &apos;GET&apos;).toUpperCase(), //请求方式\n        headers : setting.headers  || {}, // 请求头设置\n        credentials : setting.credentials  || true, // 设置cookie是否一起发送\n        body: setting.body || {},\n        mode : setting.mode  || &apos;no-cors&apos;, // 可以设置 cors, no-cors, same-origin\n        redirect : setting.redirect  || &apos;follow&apos;, // follow, error, manual\n        cache : setting.cache  || &apos;default&apos; // 设置 cache 模式 (default, reload, no-cache)\n    }\n    let dataType = setting.dataType || &quot;json&quot;, // 解析方式  \n        data = setting.data || &quot;&quot; // 参数\n\n    // 参数格式化\n    function params_format (obj) {\n        var str = &apos;&apos;\n        for (var i in obj) {\n            str += `${i}=${obj[i]}&amp;`\n        }\n        return str.split(&apos;&apos;).slice(0, -1).join(&apos;&apos;)\n    }\n\n    if (opts.method === &apos;GET&apos;) {\n        url = url + (data?`?${params_format(data)}`:&apos;&apos;)\n    }else{\n        setting.body = data || {}\n    }\n\n    return new Promise( (resolve, reject) =&gt; {\n        fetch(url, opts).then( async res =&gt; {\n            let data = dataType === &apos;text&apos; ? await res.text() :\n                dataType === &apos;blob&apos; ? await res.blob() : await res.json() \n            resolve(data)\n        }).catch( e =&gt; {\n            reject(e)\n        })\n    })\n\n}\n</code></pre><h4 id=\"DOM\"><a href=\"#DOM\" class=\"headerlink\" title=\"DOM\"></a>DOM</h4><pre><code>$ (selector){ \n    var type = selector.substring(0, 1);\n    if (type === &apos;#&apos;) {\n        if (document.querySelecotor) return document.querySelector(selector)\n            return document.getElementById(selector.substring(1))\n\n    }else if (type === &apos;.&apos;) {\n        if (document.querySelecotorAll) return document.querySelectorAll(selector)\n            return document.getElementsByClassName(selector.substring(1))\n    }else{\n        return document[&apos;querySelectorAll&apos; ? &apos;querySelectorAll&apos;:&apos;getElementsByTagName&apos;](selector)\n    }\n} \n\n/*检测类名*/\nhasClass (ele, name) {\n    return ele.className.match(new RegExp(&apos;(\\\\s|^)&apos; + name + &apos;(\\\\s|$)&apos;));\n}\n\n/*添加类名*/\naddClass (ele, name) {\n    if (!this.hasClass(ele, name)) ele.className += &quot; &quot; + name;\n}\n\n/*删除类名*/\nremoveClass (ele, name) {\n    if (this.hasClass(ele, name)) {\n        var reg = new RegExp(&apos;(\\\\s|^)&apos; + name + &apos;(\\\\s|$)&apos;);\n        ele.className = ele.className.replace(reg, &apos;&apos;);\n    }\n}\n\n/*替换类名*/\nreplaceClass (ele, newName, oldName) {\n    this.removeClass(ele, oldName);\n    this.addClass(ele, newName);\n}\n\n/*获取兄弟节点*/\nsiblings (ele) {\n    console.log(ele.parentNode)\n    var chid = ele.parentNode.children,eleMatch = []; \n    for(var i = 0, len = chid.length; i &lt; len; i ++){ \n        if(chid[i] != ele){ \n            eleMatch.push(chid[i]); \n        } \n    } \n    return eleMatch;\n}\n\n/*获取行间样式属性*/\ngetByStyle (obj,name){\n    if(obj.currentStyle){\n        return  obj.currentStyle[name];\n    }else{\n        return  getComputedStyle(obj,false)[name];\n    }\n}\n</code></pre><h4 id=\"Storage-储存操作\"><a href=\"#Storage-储存操作\" class=\"headerlink\" title=\"Storage 储存操作\"></a>Storage 储存操作</h4><pre><code>class StorageFn {\n    constructor () {\n        this.ls = window.localStorage;\n        this.ss = window.sessionStorage;\n    }\n\n    /*-----------------cookie---------------------*/\n    /*设置cookie*/\n    setCookie (name, value, day) {\n        var setting = arguments[0];\n        if (Object.prototype.toString.call(setting).slice(8, -1) === &apos;Object&apos;){\n            for (var i in setting) {\n                var oDate = new Date();\n                oDate.setDate(oDate.getDate() + day);\n                document.cookie = i + &apos;=&apos; + setting[i] + &apos;;expires=&apos; + oDate;\n            }\n        }else{\n            var oDate = new Date();\n            oDate.setDate(oDate.getDate() + day);\n            document.cookie = name + &apos;=&apos; + value + &apos;;expires=&apos; + oDate;\n        }\n\n    }\n\n    /*获取cookie*/\n    getCookie (name) {\n        var arr = document.cookie.split(&apos;; &apos;);\n        for (var i = 0; i &lt; arr.length; i++) {\n            var arr2 = arr[i].split(&apos;=&apos;);\n            if (arr2[0] == name) {\n                return arr2[1];\n            }\n        }\n        return &apos;&apos;;\n    }\n\n    /*删除cookie*/\n    removeCookie (name) {\n        this.setCookie(name, 1, -1);\n    }\n\n\n    /*-----------------localStorage---------------------*/\n    /*设置localStorage*/\n    setLocal(key, val) {\n        var setting = arguments[0];\n        if (Object.prototype.toString.call(setting).slice(8, -1) === &apos;Object&apos;){\n            for(var i in setting){\n                this.ls.setItem(i, JSON.stringify(setting[i]))\n            }\n        }else{\n            this.ls.setItem(key, JSON.stringify(val))\n        }\n\n    }\n\n    /*获取localStorage*/\n    getLocal(key) {\n        if (key) return JSON.parse(this.ls.getItem(key))\n        return null;\n\n    }\n\n    /*移除localStorage*/\n    removeLocal(key) {\n        this.ls.removeItem(key)\n    }\n\n    /*移除所有localStorage*/\n    clearLocal() {\n        this.ls.clear()\n    }\n\n\n    /*-----------------sessionStorage---------------------*/\n    /*设置sessionStorage*/\n    setSession(key, val) {\n        var setting = arguments[0];\n        if (Object.prototype.toString.call(setting).slice(8, -1) === &apos;Object&apos;){\n            for(var i in setting){\n                this.ss.setItem(i, JSON.stringify(setting[i]))\n            }\n        }else{\n            this.ss.setItem(key, JSON.stringify(val))\n        }\n\n    }\n\n    /*获取sessionStorage*/\n    getSession(key) {\n        if (key) return JSON.parse(this.ss.getItem(key))\n        return null;\n\n    }\n\n    /*移除sessionStorage*/\n    removeSession(key) {\n        this.ss.removeItem(key)\n    }\n\n    /*移除所有sessionStorage*/\n    clearSession() {\n        this.ss.clear()\n    }\n\n\n}\n</code></pre><h4 id=\"Other-其它操作\"><a href=\"#Other-其它操作\" class=\"headerlink\" title=\"Other 其它操作\"></a>Other 其它操作</h4><pre><code>/*获取网址参数*/\ngetURL(name){\n    var reg = new RegExp(&quot;(^|&amp;)&quot;+ name +&quot;=([^&amp;]*)(&amp;|$)&quot;);\n    var r = decodeURI(window.location.search).substr(1).match(reg);\n    if(r!=null) return  r[2]; return null;\n}\n\n/*获取全部url参数,并转换成json对象*/\ngetUrlAllParams (url) {\n    var url = url ? url : window.location.href;\n    var _pa = url.substring(url.indexOf(&apos;?&apos;) + 1),\n        _arrS = _pa.split(&apos;&amp;&apos;),\n        _rs = {};\n    for (var i = 0, _len = _arrS.length; i &lt; _len; i++) {\n        var pos = _arrS[i].indexOf(&apos;=&apos;);\n        if (pos == -1) {\n            continue;\n        }\n        var name = _arrS[i].substring(0, pos),\n            value = window.decodeURIComponent(_arrS[i].substring(pos + 1));\n        _rs[name] = value;\n    }\n    return _rs;\n}\n\n/*删除url指定参数，返回url*/\ndelParamsUrl(url, name){\n    var baseUrl = url.split(&apos;?&apos;)[0] + &apos;?&apos;;\n    var query = url.split(&apos;?&apos;)[1];\n    if (query.indexOf(name)&gt;-1) {\n        var obj = {}\n        var arr = query.split(&quot;&amp;&quot;);\n        for (var i = 0; i &lt; arr.length; i++) {\n            arr[i] = arr[i].split(&quot;=&quot;);\n            obj[arr[i][0]] = arr[i][1];\n        };\n        delete obj[name];\n        var url = baseUrl + JSON.stringify(obj).replace(/[\\&quot;\\{\\}]/g,&quot;&quot;).replace(/\\:/g,&quot;=&quot;).replace(/\\,/g,&quot;&amp;&quot;);\n        return url\n    }else{\n        return url;\n    }\n}\n\n/*获取十六进制随机颜色*/\ngetRandomColor () {\n    return &apos;#&apos; + (function(h) {\n        return new Array(7 - h.length).join(&quot;0&quot;) + h;\n    })((Math.random() * 0x1000000 &lt;&lt; 0).toString(16));\n}\n\n/*图片加载*/\nimgLoadAll(arr,callback){\n    var arrImg = []; \n    for (var i = 0; i &lt; arr.length; i++) {\n        var img = new Image();\n        img.src = arr[i];\n        img.onload = function(){\n            arrImg.push(this);\n            if (arrImg.length == arr.length) {\n                callback &amp;&amp; callback();\n            }\n        }\n    }\n}\n\n/*音频加载*/\nloadAudio(src, callback) {\n    var audio = new Audio(src);\n    audio.onloadedmetadata = callback;\n    audio.src = src;\n}\n\n/*DOM转字符串*/\ndomToStirng(htmlDOM){\n    var div= document.createElement(&quot;div&quot;);\n    div.appendChild(htmlDOM);\n    return div.innerHTML\n}\n\n/*字符串转DOM*/\nstringToDom(htmlString){\n    var div= document.createElement(&quot;div&quot;);\n    div.innerHTML=htmlString;\n    return div.children[0];\n}\n</code></pre><p>/**</p>\n<pre><code>* 光标所在位置插入字符，并设置光标位置\n* \n* @param {dom} 输入框\n* @param {val} 插入的值\n* @param {posLen} 光标位置处在 插入的值的哪个位置\n</code></pre><p>*/</p>\n<pre><code>setCursorPosition (dom,val,posLen) {\n    var cursorPosition = 0;\n    if(dom.selectionStart){\n        cursorPosition = dom.selectionStart;\n    }\n    this.insertAtCursor(dom,val);\n    dom.focus();\n    console.log(posLen)\n    dom.setSelectionRange(dom.value.length,cursorPosition + (posLen || val.length));\n}\n\n/*光标所在位置插入字符*/\ninsertAtCursor(dom, val) {\n    if (document.selection){\n        dom.focus();\n        sel = document.selection.createRange();\n        sel.text = val;\n        sel.select();\n    }else if (dom.selectionStart || dom.selectionStart == &apos;0&apos;){\n        let startPos = dom.selectionStart;\n        let endPos = dom.selectionEnd;\n        let restoreTop = dom.scrollTop;\n        dom.value = dom.value.substring(0, startPos) + val + dom.value.substring(endPos, dom.value.length);\n        if (restoreTop &gt; 0){\n            dom.scrollTop = restoreTop;\n        }\n        dom.focus();\n        dom.selectionStart = startPos + val.length;\n        dom.selectionEnd = startPos + val.length;\n    } else {\n        dom.value += val;\n        dom.focus();\n    }\n}\n</code></pre><blockquote>\n<p>CSS</p>\n</blockquote>\n<h4 id=\"pc-reset-PC样式初始化\"><a href=\"#pc-reset-PC样式初始化\" class=\"headerlink\" title=\"pc-reset PC样式初始化\"></a>pc-reset PC样式初始化</h4><pre><code>/* normalize.css */\n\nhtml {\nline-height: 1.15;\n/* 1 */\n-ms-text-size-adjust: 100%;\n/* 2 */\n-webkit-text-size-adjust: 100%;\n/* 2 */\n}\n\nbody {\nmargin: 0;\n}\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\ndisplay: block;\n}\n\nh1 {\nfont-size: 2em;\nmargin: 0.67em 0;\n}\n\nfigcaption,\nfigure,\nmain {\n/* 1 */\ndisplay: block;\n}\n\nfigure {\nmargin: 1em 40px;\n}\n\nhr {\nbox-sizing: content-box;\n/* 1 */\nheight: 0;\n/* 1 */\noverflow: visible;\n/* 2 */\n}\n\npre {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\na {\nbackground-color: transparent;\n/* 1 */\n-webkit-text-decoration-skip: objects;\n/* 2 */\n}\n\nabbr[title] {\nborder-bottom: none;\n/* 1 */\ntext-decoration: underline;\n/* 2 */\ntext-decoration: underline dotted;\n/* 2 */\n}\n\nb,\nstrong {\nfont-weight: inherit;\n}\n\nb,\nstrong {\nfont-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\ndfn {\nfont-style: italic;\n}\n\nmark {\nbackground-color: #ff0;\ncolor: #000;\n}\n\nsmall {\nfont-size: 80%;\n}\n\nsub,\nsup {\nfont-size: 75%;\nline-height: 0;\nposition: relative;\nvertical-align: baseline;\n}\n\nsub {\nbottom: -0.25em;\n}\n\nsup {\ntop: -0.5em;\n}\n\naudio,\nvideo {\ndisplay: inline-block;\n}\n\naudio:not([controls]) {\ndisplay: none;\nheight: 0;\n}\n\nimg {\nborder-style: none;\n}\n\nsvg:not(:root) {\noverflow: hidden;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\nfont-family: sans-serif;\n/* 1 */\nfont-size: 100%;\n/* 1 */\nline-height: 1.15;\n/* 1 */\nmargin: 0;\n/* 2 */\n}\n\nbutton,\ninput {\n/* 1 */\noverflow: visible;\n}\n\nbutton,\nselect {\n/* 1 */\ntext-transform: none;\n}\n\nbutton,\nhtml [type=&quot;button&quot;],\n\n/* 1 */\n\n[type=&quot;reset&quot;],\n[type=&quot;submit&quot;] {\n-webkit-appearance: button;\n/* 2 */\n}\n\nbutton::-moz-focus-inner,\n[type=&quot;button&quot;]::-moz-focus-inner,\n[type=&quot;reset&quot;]::-moz-focus-inner,\n[type=&quot;submit&quot;]::-moz-focus-inner {\nborder-style: none;\npadding: 0;\n}\n\nbutton:-moz-focusring,\n[type=&quot;button&quot;]:-moz-focusring,\n[type=&quot;reset&quot;]:-moz-focusring,\n[type=&quot;submit&quot;]:-moz-focusring {\noutline: 1px dotted ButtonText;\n}\n\nfieldset {\npadding: 0.35em 0.75em 0.625em;\n}\n\nlegend {\nbox-sizing: border-box;\n/* 1 */\ncolor: inherit;\n/* 2 */\ndisplay: table;\n/* 1 */\nmax-width: 100%;\n/* 1 */\npadding: 0;\n/* 3 */\nwhite-space: normal;\n/* 1 */\n}\n\nprogress {\ndisplay: inline-block;\n/* 1 */\nvertical-align: baseline;\n/* 2 */\n}\n\ntextarea {\noverflow: auto;\n}\n\n[type=&quot;checkbox&quot;],\n[type=&quot;radio&quot;] {\nbox-sizing: border-box;\n/* 1 */\npadding: 0;\n/* 2 */\n}\n\n[type=&quot;number&quot;]::-webkit-inner-spin-button,\n[type=&quot;number&quot;]::-webkit-outer-spin-button {\nheight: auto;\n}\n\n[type=&quot;search&quot;] {\n-webkit-appearance: textfield;\n/* 1 */\noutline-offset: -2px;\n/* 2 */\n}\n\n[type=&quot;search&quot;]::-webkit-search-cancel-button,\n[type=&quot;search&quot;]::-webkit-search-decoration {\n-webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n-webkit-appearance: button;\n/* 1 */\nfont: inherit;\n/* 2 */\n}\n\ndetails,\n\n/* 1 */\n\nmenu {\ndisplay: block;\n}\n\nsummary {\ndisplay: list-item;\n}\n\ncanvas {\ndisplay: inline-block;\n}\n\ntemplate {\ndisplay: none;\n}\n\n[hidden] {\ndisplay: none;\n}\n\n\n/* reset */\n\nhtml,\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\ndiv,\ndl,\ndt,\ndd,\nul,\nol,\nli,\np,\nblockquote,\npre,\nhr,\nfigure,\ntable,\ncaption,\nth,\ntd,\nform,\nfieldset,\nlegend,\ninput,\nbutton,\ntextarea,\nmenu {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n</code></pre><h4 id=\"Phone-reset\"><a href=\"#Phone-reset\" class=\"headerlink\" title=\"Phone-reset\"></a>Phone-reset</h4><pre><code>/* normalize.css */\n\nhtml {\nline-height: 1.15;\n/* 1 */\n-ms-text-size-adjust: 100%;\n/* 2 */\n-webkit-text-size-adjust: 100%;\n/* 2 */\n}\n\nbody {\nmargin: 0;\n}\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\ndisplay: block;\n}\n\nh1 {\nfont-size: 2em;\nmargin: 0.67em 0;\n}\n\nfigcaption,\nfigure,\nmain {\n/* 1 */\ndisplay: block;\n}\n\nfigure {\nmargin: 1em 40px;\n}\n\nhr {\nbox-sizing: content-box;\n/* 1 */\nheight: 0;\n/* 1 */\noverflow: visible;\n/* 2 */\n}\n\npre {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\na {\nbackground-color: transparent;\n/* 1 */\n-webkit-text-decoration-skip: objects;\n/* 2 */\n}\n\nabbr[title] {\nborder-bottom: none;\n/* 1 */\ntext-decoration: underline;\n/* 2 */\ntext-decoration: underline dotted;\n/* 2 */\n}\n\nb,\nstrong {\nfont-weight: inherit;\n}\n\nb,\nstrong {\nfont-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\ndfn {\nfont-style: italic;\n}\n\nmark {\nbackground-color: #ff0;\ncolor: #000;\n}\n\nsmall {\nfont-size: 80%;\n}\n\nsub,\nsup {\nfont-size: 75%;\nline-height: 0;\nposition: relative;\nvertical-align: baseline;\n}\n\nsub {\nbottom: -0.25em;\n}\n\nsup {\ntop: -0.5em;\n}\n\naudio,\nvideo {\ndisplay: inline-block;\n}\n\naudio:not([controls]) {\ndisplay: none;\nheight: 0;\n}\n\nimg {\nborder-style: none;\n}\n\nsvg:not(:root) {\noverflow: hidden;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\nfont-family: sans-serif;\n/* 1 */\nfont-size: 100%;\n/* 1 */\nline-height: 1.15;\n/* 1 */\nmargin: 0;\n/* 2 */\n}\n\nbutton,\ninput {\n/* 1 */\noverflow: visible;\n}\n\nbutton,\nselect {\n/* 1 */\ntext-transform: none;\n}\n\nbutton,\nhtml [type=&quot;button&quot;],\n\n/* 1 */\n\n[type=&quot;reset&quot;],\n[type=&quot;submit&quot;] {\n-webkit-appearance: button;\n/* 2 */\n}\n\nbutton::-moz-focus-inner,\n[type=&quot;button&quot;]::-moz-focus-inner,\n[type=&quot;reset&quot;]::-moz-focus-inner,\n[type=&quot;submit&quot;]::-moz-focus-inner {\nborder-style: none;\npadding: 0;\n}\n\nbutton:-moz-focusring,\n[type=&quot;button&quot;]:-moz-focusring,\n[type=&quot;reset&quot;]:-moz-focusring,\n[type=&quot;submit&quot;]:-moz-focusring {\noutline: 1px dotted ButtonText;\n}\n\nfieldset {\npadding: 0.35em 0.75em 0.625em;\n}\n\nlegend {\nbox-sizing: border-box;\n/* 1 */\ncolor: inherit;\n/* 2 */\ndisplay: table;\n/* 1 */\nmax-width: 100%;\n/* 1 */\npadding: 0;\n/* 3 */\nwhite-space: normal;\n/* 1 */\n}\n\nprogress {\ndisplay: inline-block;\n/* 1 */\nvertical-align: baseline;\n/* 2 */\n}\n\ntextarea {\noverflow: auto;\n}\n\n[type=&quot;checkbox&quot;],\n[type=&quot;radio&quot;] {\nbox-sizing: border-box;\n/* 1 */\npadding: 0;\n/* 2 */\n}\n\n[type=&quot;number&quot;]::-webkit-inner-spin-button,\n[type=&quot;number&quot;]::-webkit-outer-spin-button {\nheight: auto;\n}\n\n[type=&quot;search&quot;] {\n-webkit-appearance: textfield;\n/* 1 */\noutline-offset: -2px;\n/* 2 */\n}\n\n[type=&quot;search&quot;]::-webkit-search-cancel-button,\n[type=&quot;search&quot;]::-webkit-search-decoration {\n-webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n-webkit-appearance: button;\n/* 1 */\nfont: inherit;\n/* 2 */\n}\n\ndetails,\n\n/* 1 */\n\nmenu {\ndisplay: block;\n}\n\nsummary {\ndisplay: list-item;\n}\n\ncanvas {\ndisplay: inline-block;\n}\n\ntemplate {\ndisplay: none;\n}\n\n[hidden] {\ndisplay: none;\n}\n\n\n/* reset */\n\nhtml,\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\ndiv,\ndl,\ndt,\ndd,\nul,\nol,\nli,\np,\nblockquote,\npre,\nhr,\nfigure,\ntable,\ncaption,\nth,\ntd,\nform,\nfieldset,\nlegend,\ninput,\nbutton,\ntextarea,\nmenu {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n\nhtml,\nbody {\n/* 禁止选中文本 */\n-webkit-user-select: none;\nuser-select: none;\nfont: Oswald, &apos;Open Sans&apos;, Helvetica, Arial, sans-serif\n}\n\n\n/* 禁止长按链接与图片弹出菜单 */\n\na,\nimg {\n-webkit-touch-callout: none;\n}\n\n\n/*ios android去除自带阴影的样式*/\n\na,\ninput {\n-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\ninput[type=&quot;text&quot;] {\n-webkit-appearance: none;\n}\n</code></pre><h4 id=\"公共样式提取\"><a href=\"#公共样式提取\" class=\"headerlink\" title=\"公共样式提取\"></a>公共样式提取</h4><pre><code>/* 禁止选中文本 */\n.usn{\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n    -o-user-select:none;\n    user-select:none;\n}\n/* 浮动 */\n.fl { float: left; }\n.fr { float: right; }\n.cf { zoom: 1; }\n.cf:after {\n    content:&quot;.&quot;;\n    display:block;\n    clear:both;\n    visibility:hidden;\n    height:0;\n    overflow:hidden;\n}\n\n/* 元素类型 */\n.db { display: block; }\n.dn { display: none; }\n.di { display: inline }\n.dib {display: inline-block;}\n.transparent { opacity: 0 }\n\n\n/*文字排版、颜色*/\n.f12 { font-size:12px }\n.f14 { font-size:14px }\n.f16 { font-size:16px }\n.f18 { font-size:18px }\n.f20 { font-size:20px }\n.fb { font-weight:bold }\n.fn { font-weight:normal }\n.t2 { text-indent:2em }\n.red,a.red { color:#cc0031 }\n.darkblue,a.darkblue { color:#039 }\n.gray,a.gray { color:#878787 }\n.lh150 { line-height:150% }\n.lh180 { line-height:180% }\n.lh200 { line-height:200% }\n.unl { text-decoration:underline; }\n.no_unl { text-decoration:none; }\n.tl { text-align: left; }\n.tc { text-align: center; }\n.tr { text-align: right; }\n.tj { text-align: justify; text-justify: inter-ideograph; }\n.wn { /* 强制不换行 */\n    word-wrap:normal;\n    white-space:nowrap;\n}\n.wb { /* 强制换行 */\n    white-space:normal;\n    word-wrap:break-word;\n    word-break:break-all;\n}\n.wp { /* 保持空白序列*/\n    overflow:hidden;text-align:left;white-space:pre-wrap;word-wrap:break-word;word-break:break-all;\n}\n.wes { /* 多出部分用省略号表示 , 用于一行 */\n    overflow:hidden;\n    word-wrap:normal;\n    white-space:nowrap;\n    text-overflow:ellipsis;\n}\n.wes-2 { /* 适用于webkit内核和移动端 */\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n} \n.wes-3 {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3;\n    overflow: hidden;\n}\n.wes-4 {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;\n    overflow: hidden;\n}\n\n/* 溢出样式 */\n.ofh { overflow: hidden; }\n.ofs {overflow: scroll; }\n.ofa {overflow: auto; }\n.ofv {overflow: visible; }\n\n/* 定位方式 */\n.ps {position: static; }\n.pr {position: relative;zoom:1; }\n.pa {position: absolute; }\n.pf {position: fixed; }\n\n\n/* 垂直对齐方式 */\n.vt {vertical-align: top; }\n.vm {vertical-align: middle; }\n.vb {vertical-align: bottom; }\n\n\n/* 鼠标样式 */\n.csd {cursor: default; }\n.csp {cursor: pointer; }\n.csh {cursor: help; }\n.csm {cursor: move; }\n\n/* flex布局 */\n.df-sb {\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n}\n.df-sa {\n    display:flex;\n    align-items: center;\n    justify-content: space-around;\n}\n\n/* 垂直居中 */\n.df-c {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.tb-c {\n    text-align:center;\n    display:table-cell;\n    vertical-align:middle;\n}\n.ts-c {\n    position: absolute;\n    left: 50%; top: 50%;\n    transform: translate(-50%, -50%);\n}\n.ts-mc {\n    position: absolute;\n    left: 0;right: 0;\n    bottom: 0; top: 0;\n    margin: auto;\n}\n\n/* 辅助 */\n.mask-fixed-wrapper {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    left:0;top:0;\n    background: rgba(0, 0, 0, 0.65);\n    z-index: 999;\n}\n.bg-cover {\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n}\n.bg-cover-all {\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    background-position: center center;\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><br></p>\n<p>本文转载过来<br>作者：cd-dongzi<br>链接：<a href=\"https://juejin.im/post/5a7523af5188257a7d6e028e\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5a7523af5188257a7d6e028e</a><br>来源：掘金</p>\n<p>在工作中经常用到这些工具类的封装</p>\n<blockquote>\n<p>Javascript</p>\n</blockquote>\n<h4 id=\"type-类型判断\"><a href=\"#type-类型判断\" class=\"headerlink\" title=\"type 类型判断\"></a>type 类型判断</h4><pre><code>isString (o) { //是否字符串\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;String&apos;\n}\n\nisNumber (o) { //是否数字\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Number&apos;\n}\n\nisBoolean (o) { //是否boolean\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Boolean&apos;\n}\n\nisFunction (o) { //是否函数\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Function&apos;\n}\n\nisNull (o) { //是否为null\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Null&apos;\n}\n\nisUndefined (o) { //是否undefined\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Undefined&apos;\n}\n\nisObj (o) { //是否对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Object&apos;\n}\n\nisArray (o) { //是否数组\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Array&apos;\n}\n\nisDate (o) { //是否时间\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Date&apos;\n}\n\nisRegExp (o) { //是否正则\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;RegExp&apos;\n}\n\nisError (o) { //是否错误对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Error&apos;\n}\n\nisSymbol (o) { //是否Symbol函数\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Symbol&apos;\n}\n\nisPromise (o) { //是否Promise对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Promise&apos;\n}\n\nisSet (o) { //是否Set对象\n    return Object.prototype.toString.call(o).slice(8, -1) === &apos;Set&apos;\n}\n\n\n\nisFalse (o) {\n    if (!o || o === &apos;null&apos; || o === &apos;undefined&apos; || o === &apos;false&apos; || o === &apos;NaN&apos;) return true\n        return false\n}\n\nisTrue (o) {\n    return !this.isFalse(o)\n}\n\nisIos () {\n    var u = navigator.userAgent;\n    if (u.indexOf(&apos;Android&apos;) &gt; -1 || u.indexOf(&apos;Linux&apos;) &gt; -1) {//安卓手机\n        // return &quot;Android&quot;;\n        return false\n    } else if (u.indexOf(&apos;iPhone&apos;) &gt; -1) {//苹果手机\n        // return &quot;iPhone&quot;;\n        return true\n    } else if (u.indexOf(&apos;iPad&apos;) &gt; -1) {//iPad\n        // return &quot;iPad&quot;;\n        return false\n    } else if (u.indexOf(&apos;Windows Phone&apos;) &gt; -1) {//winphone手机\n        // return &quot;Windows Phone&quot;;\n        return false\n    }else{\n        return false\n    }\n}\n\nisPC () { //是否为PC端\n    var userAgentInfo = navigator.userAgent;\n    var Agents = [&quot;Android&quot;, &quot;iPhone&quot;,\n                &quot;SymbianOS&quot;, &quot;Windows Phone&quot;,\n                &quot;iPad&quot;, &quot;iPod&quot;];\n    var flag = true;\n    for (var v = 0; v &lt; Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) &gt; 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nbrowserType(){\n    var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n    var isOpera = userAgent.indexOf(&quot;Opera&quot;) &gt; -1; //判断是否Opera浏览器\n    var isIE = userAgent.indexOf(&quot;compatible&quot;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;MSIE&quot;) &gt; -1 &amp;&amp; !isOpera; //判断是否IE浏览器\n    var isIE11 = userAgent.indexOf(&apos;Trident&apos;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;rv:11.0&quot;) &gt; -1;\n    var isEdge = userAgent.indexOf(&quot;Edge&quot;) &gt; -1 &amp;&amp; !isIE; //判断是否IE的Edge浏览器  \n    var isFF = userAgent.indexOf(&quot;Firefox&quot;) &gt; -1; //判断是否Firefox浏览器\n    var isSafari = userAgent.indexOf(&quot;Safari&quot;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;Chrome&quot;) == -1; //判断是否Safari浏览器\n    var isChrome = userAgent.indexOf(&quot;Chrome&quot;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;Safari&quot;) &gt; -1; //判断Chrome浏览器\n\n    if (isIE) {\n        var reIE = new RegExp(&quot;MSIE (\\\\d+\\\\.\\\\d+);&quot;);\n        reIE.test(userAgent);\n        var fIEVersion = parseFloat(RegExp[&quot;$1&quot;]);\n        if(fIEVersion == 7) return &quot;IE7&quot;\n        else if(fIEVersion == 8) return &quot;IE8&quot;;\n        else if(fIEVersion == 9) return &quot;IE9&quot;;\n        else if(fIEVersion == 10) return &quot;IE10&quot;;\n        else return &quot;IE7以下&quot;//IE版本过低\n    }\n    if (isIE11) return &apos;IE11&apos;;\n    if (isEdge) return &quot;Edge&quot;;\n    if (isFF) return &quot;FF&quot;;\n    if (isOpera) return &quot;Opera&quot;;\n    if (isSafari) return &quot;Safari&quot;;\n    if (isChrome) return &quot;Chrome&quot;;\n}\n\ncheckStr (str, type) {\n    switch (type) {\n        case &apos;phone&apos;:   //手机号码\n            return /^1[3|4|5|6|7|8|9][0-9]{9}$/.test(str);\n        case &apos;tel&apos;:     //座机\n            return /^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$/.test(str);\n        case &apos;card&apos;:    //身份证\n            return /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(str);\n        case &apos;pwd&apos;:     //密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线\n            return /^[a-zA-Z]\\w{5,17}$/.test(str)\n        case &apos;postal&apos;:  //邮政编码\n            return /[1-9]\\d{5}(?!\\d)/.test(str);\n        case &apos;QQ&apos;:      //QQ号\n            return /^[1-9][0-9]{4,9}$/.test(str);\n        case &apos;email&apos;:   //邮箱\n            return /^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/.test(str);\n        case &apos;money&apos;:   //金额(小数点2位)\n            return /^\\d*(?:\\.\\d{0,2})?$/.test(str);\n        case &apos;URL&apos;:     //网址\n            return /(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?/.test(str)\n        case &apos;IP&apos;:      //IP\n            return /((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))/.test(str);\n        case &apos;date&apos;:    //日期时间\n            return /^(\\d{4})\\-(\\d{2})\\-(\\d{2}) (\\d{2})(?:\\:\\d{2}|:(\\d{2}):(\\d{2}))$/.test(str) || /^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/.test(str)\n        case &apos;number&apos;:  //数字\n            return /^[0-9]$/.test(str);\n        case &apos;english&apos;: //英文\n            return /^[a-zA-Z]+$/.test(str);\n        case &apos;chinese&apos;: //中文\n            return /^[\\u4E00-\\u9FA5]+$/.test(str);\n        case &apos;lower&apos;:   //小写\n            return /^[a-z]+$/.test(str);\n        case &apos;upper&apos;:   //大写\n            return /^[A-Z]+$/.test(str);\n        case &apos;HTML&apos;:    //HTML标记\n            return /&lt;(&quot;[^&quot;]*&quot;|&apos;[^&apos;]*&apos;|[^&apos;&quot;&gt;])*&gt;/.test(str);\n        default:\n            return true;\n    }\n\n    // 严格的身份证校验\n    isCardID(sId) {\n        if (!/(^\\d{15}$)|(^\\d{17}(\\d|X|x)$)/.test(sId)) {\n            alert(&apos;你输入的身份证长度或格式错误&apos;)\n            return false\n        }\n        //身份证城市\n        var aCity={11:&quot;北京&quot;,12:&quot;天津&quot;,13:&quot;河北&quot;,14:&quot;山西&quot;,15:&quot;内蒙古&quot;,21:&quot;辽宁&quot;,22:&quot;吉林&quot;,23:&quot;黑龙江&quot;,31:&quot;上海&quot;,32:&quot;江苏&quot;,33:&quot;浙江&quot;,34:&quot;安徽&quot;,35:&quot;福建&quot;,36:&quot;江西&quot;,37:&quot;山东&quot;,41:&quot;河南&quot;,42:&quot;湖北&quot;,43:&quot;湖南&quot;,44:&quot;广东&quot;,45:&quot;广西&quot;,46:&quot;海南&quot;,50:&quot;重庆&quot;,51:&quot;四川&quot;,52:&quot;贵州&quot;,53:&quot;云南&quot;,54:&quot;西藏&quot;,61:&quot;陕西&quot;,62:&quot;甘肃&quot;,63:&quot;青海&quot;,64:&quot;宁夏&quot;,65:&quot;新疆&quot;,71:&quot;台湾&quot;,81:&quot;香港&quot;,82:&quot;澳门&quot;,91:&quot;国外&quot;};\n        if(!aCity[parseInt(sId.substr(0,2))]) { \n            alert(&apos;你的身份证地区非法&apos;)\n            return false\n        }\n\n        // 出生日期验证\n        var sBirthday=(sId.substr(6,4)+&quot;-&quot;+Number(sId.substr(10,2))+&quot;-&quot;+Number(sId.substr(12,2))).replace(/-/g,&quot;/&quot;),\n            d = new Date(sBirthday)\n        if(sBirthday != (d.getFullYear()+&quot;/&quot;+ (d.getMonth()+1) + &quot;/&quot; + d.getDate())) {\n            alert(&apos;身份证上的出生日期非法&apos;)\n            return false\n        }\n\n        // 身份证号码校验\n        var sum = 0,\n            weights =  [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2],\n            codes = &quot;10X98765432&quot;\n        for (var i = 0; i &lt; sId.length - 1; i++) {\n            sum += sId[i] * weights[i];\n        }\n        var last = codes[sum % 11]; //计算出来的最后一位身份证号码\n        if (sId[sId.length-1] != last) { \n            alert(&apos;你输入的身份证号非法&apos;)\n            return false\n        }\n\n        return true\n    }\n}\n</code></pre><h4 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h4><p>/**</p>\n<pre><code>* 格式化时间\n* \n* @param  {time} 时间\n* @param  {cFormat} 格式\n* @return {String} 字符串\n*\n* @example formatTime(&apos;2018-1-29&apos;, &apos;{y}/{m}/{d} {h}:{i}:{s}&apos;) // -&gt; 2018/01/29 00:00:00\n</code></pre><p>*/</p>\n<pre><code>formatTime(time, cFormat) {\n    if (arguments.length === 0) return null\n    if ((time + &apos;&apos;).length === 10) {\n        time = +time * 1000\n    }\n\n    var format = cFormat || &apos;{y}-{m}-{d} {h}:{i}:{s}&apos;, date\n    if (typeof time === &apos;object&apos;) {\n        date = time\n    } else {\n        date = new Date(time)\n    }\n\n    var formatObj = {\n        y: date.getFullYear(),\n        m: date.getMonth() + 1,\n        d: date.getDate(),\n        h: date.getHours(),\n        i: date.getMinutes(),\n        s: date.getSeconds(),\n        a: date.getDay()\n    }\n    var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) =&gt; {\n        var value = formatObj[key]\n        if (key === &apos;a&apos;) return [&apos;一&apos;, &apos;二&apos;, &apos;三&apos;, &apos;四&apos;, &apos;五&apos;, &apos;六&apos;, &apos;日&apos;][value - 1]\n        if (result.length &gt; 0 &amp;&amp; value &lt; 10) {\n            value = &apos;0&apos; + value\n        }\n        return value || 0\n    })\n    return time_str\n}\n</code></pre><p>/**</p>\n<pre><code>* 返回指定长度的月份集合\n* \n* @param  {time} 时间\n* @param  {len} 长度\n* @param  {direction} 方向：  1: 前几个月;  2: 后几个月;  3:前后几个月  默认 3\n* @return {Array} 数组\n* \n* @example   getMonths(&apos;2018-1-29&apos;, 6, 1)  // -&gt;  [&quot;2018-1&quot;, &quot;2017-12&quot;, &quot;2017-11&quot;, &quot;2017-10&quot;, &quot;2017-9&quot;, &quot;2017-8&quot;, &quot;2017-7&quot;]\n</code></pre><p>*/</p>\n<pre><code>getMonths(time, len, direction) {\n    var mm = new Date(time).getMonth(),\n        yy = new Date(time).getFullYear(),\n        direction = isNaN(direction) ? 3 : direction,\n        index = mm;\n    var cutMonth = function(index) {\n        if ( index &lt;= len &amp;&amp; index &gt;= -len) {\n            return direction === 1 ? formatPre(index).concat(cutMonth(++index)):\n                direction === 2 ? formatNext(index).concat(cutMonth(++index)):formatCurr(index).concat(cutMonth(++index))\n        }\n        return []\n    }\n    var formatNext = function(i) {\n        var y = Math.floor(i/12),\n            m = i%12\n        return [yy+y + &apos;-&apos; + (m+1)]\n    }\n    var formatPre = function(i) {\n        var y = Math.ceil(i/12),\n            m = i%12\n        m = m===0 ? 12 : m\n        return [yy-y + &apos;-&apos; + (13 - m)]\n    }\n    var formatCurr = function(i) {\n        var y = Math.floor(i/12),\n            yNext = Math.ceil(i/12),\n            m = i%12,\n            mNext = m===0 ? 12 : m\n        return [yy-yNext + &apos;-&apos; + (13 - mNext),yy+y + &apos;-&apos; + (m+1)]\n    }\n    // 数组去重\n    var unique = function(arr) {\n        if ( Array.hasOwnProperty(&apos;from&apos;) ) {\n            return Array.from(new Set(arr));\n        }else{\n            var n = {},r=[]; \n            for(var i = 0; i &lt; arr.length; i++){\n                if (!n[arr[i]]){\n                    n[arr[i]] = true; \n                    r.push(arr[i]);\n                }\n            }\n            return r;\n        }\n    }\n    return direction !== 3 ? cutMonth(index) : unique(cutMonth(index).sort(function(t1, t2){\n        return new Date(t1).getTime() - new Date(t2).getTime()\n    }))\n}\n</code></pre><p>/**</p>\n<pre><code>* 返回指定长度的天数集合\n* \n* @param  {time} 时间\n* @param  {len} 长度\n* @param  {direction} 方向： 1: 前几天;  2: 后几天;  3:前后几天  默认 3\n* @return {Array} 数组\n*\n* @example date.getDays(&apos;2018-1-29&apos;, 6) // -&gt; [&quot;2018-1-26&quot;, &quot;2018-1-27&quot;, &quot;2018-1-28&quot;, &quot;2018-1-29&quot;, &quot;2018-1-30&quot;, &quot;2018-1-31&quot;, &quot;2018-2-1&quot;]\n</code></pre><p>*/</p>\n<pre><code>getDays(time, len, diretion) {\n    var tt = new Date(time)\n    var getDay = function(day) {\n        var t = new Date(time)\n        t.setDate(t.getDate() + day)\n        var m = t.getMonth()+1\n        return t.getFullYear()+&apos;-&apos;+m+&apos;-&apos;+t.getDate()\n    }\n    var arr = []\n    if (diretion === 1) {\n        for (var i = 1; i &lt;= len; i++) {\n            arr.unshift(getDay(-i))\n        }\n    }else if(diretion === 2) {\n        for (var i = 1; i &lt;= len; i++) {\n            arr.push(getDay(i))\n        }\n    }else {\n        for (var i = 1; i &lt;= len; i++) {\n            arr.unshift(getDay(-i))\n        }\n        arr.push(tt.getFullYear()+&apos;-&apos;+(tt.getMonth()+1)+&apos;-&apos;+tt.getDate())\n        for (var i = 1; i &lt;= len; i++) {\n            arr.push(getDay(i))\n        }\n    }\n    return diretion === 1 ? arr.concat([tt.getFullYear()+&apos;-&apos;+(tt.getMonth()+1)+&apos;-&apos;+tt.getDate()]) : \n        diretion === 2 ? [tt.getFullYear()+&apos;-&apos;+(tt.getMonth()+1)+&apos;-&apos;+tt.getDate()].concat(arr) : arr\n}\n</code></pre><p>/**</p>\n<pre><code>* @param  {s} 秒数\n* @return {String} 字符串 \n*\n* @example formatHMS(3610) // -&gt; 1h0m10s\n</code></pre><p>*/</p>\n<pre><code>formatHMS (s) {\n    var str = &apos;&apos;\n    if (s &gt; 3600) {\n        str = Math.floor(s/3600)+&apos;h&apos;+Math.floor(s%3600/60)+&apos;m&apos;+s%60+&apos;s&apos;\n    }else if(s &gt; 60) {\n        str = Math.floor(s/60)+&apos;m&apos;+s%60+&apos;s&apos;\n    }else{\n        str = s%60+&apos;s&apos;\n    }\n    return str\n}\n\n/*获取某月有多少天*/\ngetMonthOfDay (time) {\n    var date = new Date(time)\n    var year = date.getFullYear()\n    var mouth = date.getMonth() + 1\n    var days\n\n    //当月份为二月时，根据闰年还是非闰年判断天数\n    if (mouth == 2) {\n        days = (year%4==0 &amp;&amp; year%100==0 &amp;&amp; year%400==0) || (year%4==0 &amp;&amp; year%100!=0) ? 28 : 29\n    } else if (mouth == 1 || mouth == 3 || mouth == 5 || mouth == 7 || mouth == 8 || mouth == 10 || mouth == 12) {\n        //月份为：1,3,5,7,8,10,12 时，为大月.则天数为31；\n        days = 31\n    } else {\n        //其他月份，天数为：30.\n        days = 30\n    }\n    return days\n}\n\n/*获取某年有多少天*/\ngetYearOfDay (time) {\n    var firstDayYear = this.getFirstDayOfYear(time);\n    var lastDayYear = this.getLastDayOfYear(time);\n    var numSecond = (new Date(lastDayYear).getTime() - new Date(firstDayYear).getTime())/1000;\n    return Math.ceil(numSecond/(24*3600));\n}\n\n/*获取某年的第一天*/\ngetFirstDayOfYear (time) {\n    var year = new Date(time).getFullYear();\n    return year + &quot;-01-01 00:00:00&quot;;\n}\n\n/*获取某年最后一天*/\ngetLastDayOfYear (time) {\n    var year = new Date(time).getFullYear();\n    var dateString = year + &quot;-12-01 00:00:00&quot;;\n    var endDay = this.getMonthOfDay(dateString);\n    return year + &quot;-12-&quot; + endDay + &quot; 23:59:59&quot;;\n}\n\n/*获取某个日期是当年中的第几天*/\ngetDayOfYear (time) {\n    var firstDayYear = this.getFirstDayOfYear(time);\n    var numSecond = (new Date(time).getTime() - new Date(firstDayYear).getTime())/1000;\n    return Math.ceil(numSecond/(24*3600));\n}\n\n/*获取某个日期在这一年的第几周*/\ngetDayOfYearWeek (time) {\n    var numdays = this.getDayOfYear(time);\n    return Math.ceil(numdays / 7);\n}\n</code></pre><h4 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h4><pre><code>/*判断一个元素是否在数组中*/\ncontains (arr, val) {\n    return arr.indexOf(val) != -1 ? true : false;\n}\n\n\n/**\n* @param  {arr} 数组\n* @param  {fn} 回调函数\n* @return {undefined}\n*/\neach (arr, fn) {\n    fn = fn || Function;\n    var a = [];\n    var args = Array.prototype.slice.call(arguments, 1);\n    for(var i = 0; i &lt; arr.length; i++) {\n        var res = fn.apply(arr, [arr[i], i].concat(args));\n        if(res != null) a.push(res);\n    }\n}\n\n/**\n* @param  {arr} 数组\n* @param  {fn} 回调函数\n* @param  {thisObj} this指向\n* @return {Array} \n*/\nmap (arr, fn, thisObj) {\n    var scope = thisObj || window;\n    var a = [];\n    for(var i = 0, j = arr.length; i &lt; j; ++i) {\n        var res = fn.call(scope, arr[i], i, this);\n        if(res != null) a.push(res);\n    }\n    return a;\n}\n\n\n/**\n* @param  {arr} 数组\n* @param  {type} 1：从小到大   2：从大到小   3：随机\n* @return {Array}\n*/\nsort (arr, type = 1) {\n    return arr.sort( (a, b) =&gt; {\n        switch(type) {\n            case 1:\n                return a - b;\n            case 2:\n                return b - a;\n            case 3:\n                return Math.random() - 0.5;\n            default:\n                return arr;\n        }\n    })\n}\n\n/*去重*/\nunique (arr) {\n    if ( Array.hasOwnProperty(&apos;from&apos;) ) {\n        return Array.from(new Set(arr));\n    }else{\n        var n = {},r=[]; \n        for(var i = 0; i &lt; arr.length; i++){\n            if (!n[arr[i]]){\n                n[arr[i]] = true; \n                r.push(arr[i]);\n            }\n        }\n        return r;\n    }\n    // 注：上面 else 里面的排重并不能区分 2 和 &apos;2&apos;，但能减少用indexOf带来的性能,暂时没找到替代的方法。。。\n    /* 正确排重\n    if ( Array.hasOwnProperty(&apos;from&apos;) ) {\n        return Array.from(new Set(arr))\n    }else{\n        var r = [], NaNBol = true\n        for(var i=0; i &lt; arr.length; i++) {\n            if (arr[i] !== arr[i]) {\n                if (NaNBol &amp;&amp; r.indexOf(arr[i]) === -1) {\n                    r.push(arr[i])\n                    NaNBol = false\n                }\n            }else{\n                if(r.indexOf(arr[i]) === -1) r.push(arr[i])\n            }\n        }\n        return r\n    }\n\n    */\n}\n\n\n/*求两个集合的并集*/\nunion (a, b) {\n    var newArr = a.concat(b);\n    return this.unique(newArr);\n}\n\n/*求两个集合的交集*/\nintersect (a, b) {\n    var _this = this;\n    a = this.unique(a);\n    return this.map(a, function(o) {\n        return _this.contains(b, o) ? o : null;\n    });\n}\n\n/*删除其中一个元素*/\nremove (arr, ele) {\n    var index = arr.indexOf(ele);\n    if(index &gt; -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\n\n/*将类数组转换为数组的方法*/\nformArray (ary) {\n    var arr = [];\n    if(Array.isArray(ary)) {\n        arr = ary;\n    } else {\n        arr = Array.prototype.slice.call(ary);\n    };\n    return arr;\n}\n\n/*最大值*/\nmax (arr) {\n    return Math.max.apply(null, arr);\n}\n\n/*最小值*/\nmin (arr) {\n    return Math.min.apply(null, arr);\n}\n\n/*求和*/\nsum (arr) {\n    return arr.reduce( (pre, cur) =&gt; {\n        return pre + cur\n    })\n}\n\n/*平均值*/\naverage (arr) {\n    return this.sum(arr)/arr.length\n}\n</code></pre><h4 id=\"String-字符串操作\"><a href=\"#String-字符串操作\" class=\"headerlink\" title=\"String 字符串操作\"></a>String 字符串操作</h4><p>/**</p>\n<pre><code>* 去除空格\n* @param  {str}\n* @param  {type} \n*       type:  1-所有空格  2-前后空格  3-前空格 4-后空格\n* @return {String}\n</code></pre><p>*/</p>\n<pre><code>trim (str, type) {\n    type = type || 1\n    switch (type) {\n        case 1:\n            return str.replace(/\\s+/g, &quot;&quot;);\n        case 2:\n            return str.replace(/(^\\s*)|(\\s*$)/g, &quot;&quot;);\n        case 3:\n            return str.replace(/(^\\s*)/g, &quot;&quot;);\n        case 4:\n            return str.replace(/(\\s*$)/g, &quot;&quot;);\n        default:\n            return str;\n    }\n}\n</code></pre><p>/**</p>\n<pre><code>* @param  {str} \n* @param  {type}\n*       type:  1:首字母大写  2：首页母小写  3：大小写转换  4：全部大写  5：全部小写\n* @return {String}\n</code></pre><p>*/</p>\n<pre><code>changeCase (str, type) {\n    type = type || 4\n    switch (type) {\n        case 1:\n            return str.replace(/\\b\\w+\\b/g, function (word) {\n                return word.substring(0, 1).toUpperCase() + word.substring(1).toLowerCase();\n\n            });\n        case 2:\n            return str.replace(/\\b\\w+\\b/g, function (word) {\n                return word.substring(0, 1).toLowerCase() + word.substring(1).toUpperCase();\n            });\n        case 3:\n            return str.split(&apos;&apos;).map( function(word){\n                if (/[a-z]/.test(word)) {\n                    return word.toUpperCase();\n                }else{\n                    return word.toLowerCase()\n                }\n            }).join(&apos;&apos;)\n        case 4:\n            return str.toUpperCase();\n        case 5:\n            return str.toLowerCase();\n        default:\n            return str;\n    }\n}\n</code></pre><p>/<em><br>    检测密码强度\n</em>/</p>\n<pre><code>checkPwd (str) {\n    var Lv = 0;\n    if (str.length &lt; 6) {\n        return Lv\n    }\n    if (/[0-9]/.test(str)) {\n        Lv++\n    }\n    if (/[a-z]/.test(str)) {\n        Lv++\n    }\n    if (/[A-Z]/.test(str)) {\n        Lv++\n    }\n    if (/[\\.|-|_]/.test(str)) {\n        Lv++\n    }\n    return Lv;\n}\n\n/*过滤html代码(把&lt;&gt;转换)*/\nfilterTag (str) {\n    str = str.replace(/&amp;/ig, &quot;&amp;amp;&quot;);\n    str = str.replace(/&lt;/ig, &quot;&amp;lt;&quot;);\n    str = str.replace(/&gt;/ig, &quot;&amp;gt;&quot;);\n    str = str.replace(&quot; &quot;, &quot;&amp;nbsp;&quot;);\n    return str;\n}\n</code></pre><h4 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h4><p>/<em>随机数范围</em>/<br>random (min, max) {<br>    if (arguments.length === 2) {<br>        return Math.floor(min + Math.random() * ( (max+1) - min ))<br>    }else{<br>        return null;<br>    }</p>\n<p>}</p>\n<p>/<em>将阿拉伯数字翻译成中文的大写数字</em>/<br>numberToChinese (num) {<br>    var AA = new Array(“零”, “一”, “二”, “三”, “四”, “五”, “六”, “七”, “八”, “九”, “十”);<br>    var BB = new Array(“”, “十”, “百”, “仟”, “萬”, “億”, “点”, “”);<br>    var a = (“” + num).replace(/(^0*)/g, “”).split(“.”),<br>        k = 0,<br>        re = “”;<br>    for(var i = a[0].length - 1; i &gt;= 0; i–) {<br>        switch(k) {<br>            case 0:<br>                re = BB[7] + re;<br>                break;<br>            case 4:<br>                if(!new RegExp(“0{4}//d{“ + (a[0].length - i - 1) + “}$”)<br>                    .test(a[0]))<br>                    re = BB[4] + re;<br>                break;<br>            case 8:<br>                re = BB[5] + re;<br>                BB[7] = BB[5];<br>                k = 0;<br>                break;<br>        }<br>        if(k % 4 == 2 &amp;&amp; a[0].charAt(i + 2) != 0 &amp;&amp; a[0].charAt(i + 1) == 0)<br>            re = AA[0] + re;<br>        if(a[0].charAt(i) != 0)<br>            re = AA[a[0].charAt(i)] + BB[k % 4] + re;<br>        k++;<br>    }</p>\n<pre><code>if(a.length &gt; 1) // 加上小数部分(如果有小数部分)\n{\n    re += BB[6];\n    for(var i = 0; i &lt; a[1].length; i++)\n        re += AA[a[1].charAt(i)];\n}\nif(re == &apos;一十&apos;)\n    re = &quot;十&quot;;\nif(re.match(/^一/) &amp;&amp; re.length == 3)\n    re = re.replace(&quot;一&quot;, &quot;&quot;);\nreturn re;\n</code></pre><p>}</p>\n<p>/<em>将数字转换为大写金额</em>/<br>changeToChinese (Num) {<br>        //判断如果传递进来的不是字符的话转换为字符<br>        if(typeof Num == “number”) {<br>            Num = new String(Num);<br>        };<br>        Num = Num.replace(/,/g, “”) //替换tomoney()中的“,”<br>        Num = Num.replace(/ /g, “”) //替换tomoney()中的空格<br>        Num = Num.replace(/￥/g, “”) //替换掉可能出现的￥字符<br>        if(isNaN(Num)) { //验证输入的字符是否为数字<br>            //alert(“请检查小写金额是否正确”);<br>            return “”;<br>        };<br>        //字符处理完毕后开始转换，采用前后两部分分别转换<br>        var part = String(Num).split(“.”);<br>        var newchar = “”;<br>        //小数点前进行转化<br>        for(var i = part[0].length - 1; i &gt;= 0; i–) {<br>            if(part[0].length &gt; 10) {<br>                return “”;<br>                //若数量超过拾亿单位，提示<br>            }<br>            var tmpnewchar = “”<br>            var perchar = part[0].charAt(i);<br>            switch(perchar) {<br>                case “0”:<br>                    tmpnewchar = “零” + tmpnewchar;<br>                    break;<br>                case “1”:<br>                    tmpnewchar = “壹” + tmpnewchar;<br>                    break;<br>                case “2”:<br>                    tmpnewchar = “贰” + tmpnewchar;<br>                    break;<br>                case “3”:<br>                    tmpnewchar = “叁” + tmpnewchar;<br>                    break;<br>                case “4”:<br>                    tmpnewchar = “肆” + tmpnewchar;<br>                    break;<br>                case “5”:<br>                    tmpnewchar = “伍” + tmpnewchar;<br>                    break;<br>                case “6”:<br>                    tmpnewchar = “陆” + tmpnewchar;<br>                    break;<br>                case “7”:<br>                    tmpnewchar = “柒” + tmpnewchar;<br>                    break;<br>                case “8”:<br>                    tmpnewchar = “捌” + tmpnewchar;<br>                    break;<br>                case “9”:<br>                    tmpnewchar = “玖” + tmpnewchar;<br>                    break;<br>            }<br>            switch(part[0].length - i - 1) {<br>                case 0:<br>                    tmpnewchar = tmpnewchar + “元”;<br>                    break;<br>                case 1:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “拾”;<br>                    break;<br>                case 2:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “佰”;<br>                    break;<br>                case 3:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “仟”;<br>                    break;<br>                case 4:<br>                    tmpnewchar = tmpnewchar + “万”;<br>                    break;<br>                case 5:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “拾”;<br>                    break;<br>                case 6:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “佰”;<br>                    break;<br>                case 7:<br>                    if(perchar != 0) tmpnewchar = tmpnewchar + “仟”;<br>                    break;<br>                case 8:<br>                    tmpnewchar = tmpnewchar + “亿”;<br>                    break;<br>                case 9:<br>                    tmpnewchar = tmpnewchar + “拾”;<br>                    break;<br>            }<br>            var newchar = tmpnewchar + newchar;<br>        }<br>        //小数点之后进行转化<br>        if(Num.indexOf(“.”) != -1) {<br>            if(part[1].length &gt; 2) {<br>                // alert(“小数点之后只能保留两位,系统将自动截断”);<br>                part[1] = part[1].substr(0, 2)<br>            }<br>            for(i = 0; i &lt; part[1].length; i++) {<br>                tmpnewchar = “”<br>                perchar = part[1].charAt(i)<br>                switch(perchar) {<br>                    case “0”:<br>                        tmpnewchar = “零” + tmpnewchar;<br>                        break;<br>                    case “1”:<br>                        tmpnewchar = “壹” + tmpnewchar;<br>                        break;<br>                    case “2”:<br>                        tmpnewchar = “贰” + tmpnewchar;<br>                        break;<br>                    case “3”:<br>                        tmpnewchar = “叁” + tmpnewchar;<br>                        break;<br>                    case “4”:<br>                        tmpnewchar = “肆” + tmpnewchar;<br>                        break;<br>                    case “5”:<br>                        tmpnewchar = “伍” + tmpnewchar;<br>                        break;<br>                    case “6”:<br>                        tmpnewchar = “陆” + tmpnewchar;<br>                        break;<br>                    case “7”:<br>                        tmpnewchar = “柒” + tmpnewchar;<br>                        break;<br>                    case “8”:<br>                        tmpnewchar = “捌” + tmpnewchar;<br>                        break;<br>                    case “9”:<br>                        tmpnewchar = “玖” + tmpnewchar;<br>                        break;<br>                }<br>                if(i == 0) tmpnewchar = tmpnewchar + “角”;<br>                if(i == 1) tmpnewchar = tmpnewchar + “分”;<br>                newchar = newchar + tmpnewchar;<br>            }<br>        }<br>        //替换所有无用汉字<br>        while(newchar.search(“零零”) != -1)<br>            newchar = newchar.replace(“零零”, “零”);<br>        newchar = newchar.replace(“零亿”, “亿”);<br>        newchar = newchar.replace(“亿万”, “亿”);<br>        newchar = newchar.replace(“零万”, “万”);<br>        newchar = newchar.replace(“零元”, “元”);<br>        newchar = newchar.replace(“零角”, “”);<br>        newchar = newchar.replace(“零分”, “”);<br>        if(newchar.charAt(newchar.length - 1) == “元”) {<br>            newchar = newchar + “整”<br>        }<br>        return newchar;<br>    }</p>\n<h4 id=\"Http\"><a href=\"#Http\" class=\"headerlink\" title=\"Http\"></a>Http</h4><p>/**</p>\n<pre><code>* @param  {setting}\n</code></pre><p>*/</p>\n<pre><code>ajax(setting){\n    //设置参数的初始值\n    var opts={\n        method: (setting.method || &quot;GET&quot;).toUpperCase(), //请求方式\n        url: setting.url || &quot;&quot;, // 请求地址\n        async: setting.async || true, // 是否异步\n        dataType: setting.dataType || &quot;json&quot;, // 解析方式\n        data: setting.data || &quot;&quot;, // 参数\n        success: setting.success || function(){}, // 请求成功回调\n        error: setting.error || function(){} // 请求失败回调\n    }\n\n    // 参数格式化\n    function params_format (obj) {\n        var str = &apos;&apos;\n        for (var i in obj) {\n            str += i + &apos;=&apos; + obj[i] + &apos;&amp;&apos;\n        }\n        return str.split(&apos;&apos;).slice(0, -1).join(&apos;&apos;)\n    }\n\n    // 创建ajax对象\n    var xhr=new XMLHttpRequest();\n\n    // 连接服务器open(方法GET/POST，请求地址， 异步传输)\n    if(opts.method == &apos;GET&apos;){\n        xhr.open(opts.method, opts.url + &quot;?&quot; + params_format(opts.data), opts.async);\n        xhr.send();\n    }else{\n        xhr.open(opts.method, opts.url, opts.async);\n        xhr.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);\n        xhr.send(opts.data);\n    }\n</code></pre><p>/<em><br>    <strong> 每当readyState改变时，就会触发onreadystatechange事件\n    </strong> readyState属性存储有XMLHttpRequest的状态信息<br>    <strong> 0 ：请求未初始化\n    </strong> 1 ：服务器连接已建立<br>    <strong> 2 ：请求已接受\n    </strong> 3 : 请求处理中<br>    ** 4 ：请求已完成，且相应就绪\n</em>/</p>\n<pre><code>    xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4 &amp;&amp; (xhr.status === 200 || xhr.status === 304)) {\n            switch(opts.dataType){\n                case &quot;json&quot;:\n                    var json = JSON.parse(xhr.responseText);\n                    opts.success(json);\n                    break;\n                case &quot;xml&quot;:\n                    opts.success(xhr.responseXML);\n                    break;\n                default:\n                    opts.success(xhr.responseText);\n                    break;\n            }\n        }\n    }\n\n    xhr.onerror = function(err) {\n        opts.error(err);\n    }\n}\n</code></pre><p>/**</p>\n<pre><code>* @param  {url}\n* @param  {setting}\n* @return {Promise}\n</code></pre><p>*/</p>\n<pre><code>fetch(url, setting) {\n    //设置参数的初始值\n    let opts={\n        method: (setting.method || &apos;GET&apos;).toUpperCase(), //请求方式\n        headers : setting.headers  || {}, // 请求头设置\n        credentials : setting.credentials  || true, // 设置cookie是否一起发送\n        body: setting.body || {},\n        mode : setting.mode  || &apos;no-cors&apos;, // 可以设置 cors, no-cors, same-origin\n        redirect : setting.redirect  || &apos;follow&apos;, // follow, error, manual\n        cache : setting.cache  || &apos;default&apos; // 设置 cache 模式 (default, reload, no-cache)\n    }\n    let dataType = setting.dataType || &quot;json&quot;, // 解析方式  \n        data = setting.data || &quot;&quot; // 参数\n\n    // 参数格式化\n    function params_format (obj) {\n        var str = &apos;&apos;\n        for (var i in obj) {\n            str += `${i}=${obj[i]}&amp;`\n        }\n        return str.split(&apos;&apos;).slice(0, -1).join(&apos;&apos;)\n    }\n\n    if (opts.method === &apos;GET&apos;) {\n        url = url + (data?`?${params_format(data)}`:&apos;&apos;)\n    }else{\n        setting.body = data || {}\n    }\n\n    return new Promise( (resolve, reject) =&gt; {\n        fetch(url, opts).then( async res =&gt; {\n            let data = dataType === &apos;text&apos; ? await res.text() :\n                dataType === &apos;blob&apos; ? await res.blob() : await res.json() \n            resolve(data)\n        }).catch( e =&gt; {\n            reject(e)\n        })\n    })\n\n}\n</code></pre><h4 id=\"DOM\"><a href=\"#DOM\" class=\"headerlink\" title=\"DOM\"></a>DOM</h4><pre><code>$ (selector){ \n    var type = selector.substring(0, 1);\n    if (type === &apos;#&apos;) {\n        if (document.querySelecotor) return document.querySelector(selector)\n            return document.getElementById(selector.substring(1))\n\n    }else if (type === &apos;.&apos;) {\n        if (document.querySelecotorAll) return document.querySelectorAll(selector)\n            return document.getElementsByClassName(selector.substring(1))\n    }else{\n        return document[&apos;querySelectorAll&apos; ? &apos;querySelectorAll&apos;:&apos;getElementsByTagName&apos;](selector)\n    }\n} \n\n/*检测类名*/\nhasClass (ele, name) {\n    return ele.className.match(new RegExp(&apos;(\\\\s|^)&apos; + name + &apos;(\\\\s|$)&apos;));\n}\n\n/*添加类名*/\naddClass (ele, name) {\n    if (!this.hasClass(ele, name)) ele.className += &quot; &quot; + name;\n}\n\n/*删除类名*/\nremoveClass (ele, name) {\n    if (this.hasClass(ele, name)) {\n        var reg = new RegExp(&apos;(\\\\s|^)&apos; + name + &apos;(\\\\s|$)&apos;);\n        ele.className = ele.className.replace(reg, &apos;&apos;);\n    }\n}\n\n/*替换类名*/\nreplaceClass (ele, newName, oldName) {\n    this.removeClass(ele, oldName);\n    this.addClass(ele, newName);\n}\n\n/*获取兄弟节点*/\nsiblings (ele) {\n    console.log(ele.parentNode)\n    var chid = ele.parentNode.children,eleMatch = []; \n    for(var i = 0, len = chid.length; i &lt; len; i ++){ \n        if(chid[i] != ele){ \n            eleMatch.push(chid[i]); \n        } \n    } \n    return eleMatch;\n}\n\n/*获取行间样式属性*/\ngetByStyle (obj,name){\n    if(obj.currentStyle){\n        return  obj.currentStyle[name];\n    }else{\n        return  getComputedStyle(obj,false)[name];\n    }\n}\n</code></pre><h4 id=\"Storage-储存操作\"><a href=\"#Storage-储存操作\" class=\"headerlink\" title=\"Storage 储存操作\"></a>Storage 储存操作</h4><pre><code>class StorageFn {\n    constructor () {\n        this.ls = window.localStorage;\n        this.ss = window.sessionStorage;\n    }\n\n    /*-----------------cookie---------------------*/\n    /*设置cookie*/\n    setCookie (name, value, day) {\n        var setting = arguments[0];\n        if (Object.prototype.toString.call(setting).slice(8, -1) === &apos;Object&apos;){\n            for (var i in setting) {\n                var oDate = new Date();\n                oDate.setDate(oDate.getDate() + day);\n                document.cookie = i + &apos;=&apos; + setting[i] + &apos;;expires=&apos; + oDate;\n            }\n        }else{\n            var oDate = new Date();\n            oDate.setDate(oDate.getDate() + day);\n            document.cookie = name + &apos;=&apos; + value + &apos;;expires=&apos; + oDate;\n        }\n\n    }\n\n    /*获取cookie*/\n    getCookie (name) {\n        var arr = document.cookie.split(&apos;; &apos;);\n        for (var i = 0; i &lt; arr.length; i++) {\n            var arr2 = arr[i].split(&apos;=&apos;);\n            if (arr2[0] == name) {\n                return arr2[1];\n            }\n        }\n        return &apos;&apos;;\n    }\n\n    /*删除cookie*/\n    removeCookie (name) {\n        this.setCookie(name, 1, -1);\n    }\n\n\n    /*-----------------localStorage---------------------*/\n    /*设置localStorage*/\n    setLocal(key, val) {\n        var setting = arguments[0];\n        if (Object.prototype.toString.call(setting).slice(8, -1) === &apos;Object&apos;){\n            for(var i in setting){\n                this.ls.setItem(i, JSON.stringify(setting[i]))\n            }\n        }else{\n            this.ls.setItem(key, JSON.stringify(val))\n        }\n\n    }\n\n    /*获取localStorage*/\n    getLocal(key) {\n        if (key) return JSON.parse(this.ls.getItem(key))\n        return null;\n\n    }\n\n    /*移除localStorage*/\n    removeLocal(key) {\n        this.ls.removeItem(key)\n    }\n\n    /*移除所有localStorage*/\n    clearLocal() {\n        this.ls.clear()\n    }\n\n\n    /*-----------------sessionStorage---------------------*/\n    /*设置sessionStorage*/\n    setSession(key, val) {\n        var setting = arguments[0];\n        if (Object.prototype.toString.call(setting).slice(8, -1) === &apos;Object&apos;){\n            for(var i in setting){\n                this.ss.setItem(i, JSON.stringify(setting[i]))\n            }\n        }else{\n            this.ss.setItem(key, JSON.stringify(val))\n        }\n\n    }\n\n    /*获取sessionStorage*/\n    getSession(key) {\n        if (key) return JSON.parse(this.ss.getItem(key))\n        return null;\n\n    }\n\n    /*移除sessionStorage*/\n    removeSession(key) {\n        this.ss.removeItem(key)\n    }\n\n    /*移除所有sessionStorage*/\n    clearSession() {\n        this.ss.clear()\n    }\n\n\n}\n</code></pre><h4 id=\"Other-其它操作\"><a href=\"#Other-其它操作\" class=\"headerlink\" title=\"Other 其它操作\"></a>Other 其它操作</h4><pre><code>/*获取网址参数*/\ngetURL(name){\n    var reg = new RegExp(&quot;(^|&amp;)&quot;+ name +&quot;=([^&amp;]*)(&amp;|$)&quot;);\n    var r = decodeURI(window.location.search).substr(1).match(reg);\n    if(r!=null) return  r[2]; return null;\n}\n\n/*获取全部url参数,并转换成json对象*/\ngetUrlAllParams (url) {\n    var url = url ? url : window.location.href;\n    var _pa = url.substring(url.indexOf(&apos;?&apos;) + 1),\n        _arrS = _pa.split(&apos;&amp;&apos;),\n        _rs = {};\n    for (var i = 0, _len = _arrS.length; i &lt; _len; i++) {\n        var pos = _arrS[i].indexOf(&apos;=&apos;);\n        if (pos == -1) {\n            continue;\n        }\n        var name = _arrS[i].substring(0, pos),\n            value = window.decodeURIComponent(_arrS[i].substring(pos + 1));\n        _rs[name] = value;\n    }\n    return _rs;\n}\n\n/*删除url指定参数，返回url*/\ndelParamsUrl(url, name){\n    var baseUrl = url.split(&apos;?&apos;)[0] + &apos;?&apos;;\n    var query = url.split(&apos;?&apos;)[1];\n    if (query.indexOf(name)&gt;-1) {\n        var obj = {}\n        var arr = query.split(&quot;&amp;&quot;);\n        for (var i = 0; i &lt; arr.length; i++) {\n            arr[i] = arr[i].split(&quot;=&quot;);\n            obj[arr[i][0]] = arr[i][1];\n        };\n        delete obj[name];\n        var url = baseUrl + JSON.stringify(obj).replace(/[\\&quot;\\{\\}]/g,&quot;&quot;).replace(/\\:/g,&quot;=&quot;).replace(/\\,/g,&quot;&amp;&quot;);\n        return url\n    }else{\n        return url;\n    }\n}\n\n/*获取十六进制随机颜色*/\ngetRandomColor () {\n    return &apos;#&apos; + (function(h) {\n        return new Array(7 - h.length).join(&quot;0&quot;) + h;\n    })((Math.random() * 0x1000000 &lt;&lt; 0).toString(16));\n}\n\n/*图片加载*/\nimgLoadAll(arr,callback){\n    var arrImg = []; \n    for (var i = 0; i &lt; arr.length; i++) {\n        var img = new Image();\n        img.src = arr[i];\n        img.onload = function(){\n            arrImg.push(this);\n            if (arrImg.length == arr.length) {\n                callback &amp;&amp; callback();\n            }\n        }\n    }\n}\n\n/*音频加载*/\nloadAudio(src, callback) {\n    var audio = new Audio(src);\n    audio.onloadedmetadata = callback;\n    audio.src = src;\n}\n\n/*DOM转字符串*/\ndomToStirng(htmlDOM){\n    var div= document.createElement(&quot;div&quot;);\n    div.appendChild(htmlDOM);\n    return div.innerHTML\n}\n\n/*字符串转DOM*/\nstringToDom(htmlString){\n    var div= document.createElement(&quot;div&quot;);\n    div.innerHTML=htmlString;\n    return div.children[0];\n}\n</code></pre><p>/**</p>\n<pre><code>* 光标所在位置插入字符，并设置光标位置\n* \n* @param {dom} 输入框\n* @param {val} 插入的值\n* @param {posLen} 光标位置处在 插入的值的哪个位置\n</code></pre><p>*/</p>\n<pre><code>setCursorPosition (dom,val,posLen) {\n    var cursorPosition = 0;\n    if(dom.selectionStart){\n        cursorPosition = dom.selectionStart;\n    }\n    this.insertAtCursor(dom,val);\n    dom.focus();\n    console.log(posLen)\n    dom.setSelectionRange(dom.value.length,cursorPosition + (posLen || val.length));\n}\n\n/*光标所在位置插入字符*/\ninsertAtCursor(dom, val) {\n    if (document.selection){\n        dom.focus();\n        sel = document.selection.createRange();\n        sel.text = val;\n        sel.select();\n    }else if (dom.selectionStart || dom.selectionStart == &apos;0&apos;){\n        let startPos = dom.selectionStart;\n        let endPos = dom.selectionEnd;\n        let restoreTop = dom.scrollTop;\n        dom.value = dom.value.substring(0, startPos) + val + dom.value.substring(endPos, dom.value.length);\n        if (restoreTop &gt; 0){\n            dom.scrollTop = restoreTop;\n        }\n        dom.focus();\n        dom.selectionStart = startPos + val.length;\n        dom.selectionEnd = startPos + val.length;\n    } else {\n        dom.value += val;\n        dom.focus();\n    }\n}\n</code></pre><blockquote>\n<p>CSS</p>\n</blockquote>\n<h4 id=\"pc-reset-PC样式初始化\"><a href=\"#pc-reset-PC样式初始化\" class=\"headerlink\" title=\"pc-reset PC样式初始化\"></a>pc-reset PC样式初始化</h4><pre><code>/* normalize.css */\n\nhtml {\nline-height: 1.15;\n/* 1 */\n-ms-text-size-adjust: 100%;\n/* 2 */\n-webkit-text-size-adjust: 100%;\n/* 2 */\n}\n\nbody {\nmargin: 0;\n}\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\ndisplay: block;\n}\n\nh1 {\nfont-size: 2em;\nmargin: 0.67em 0;\n}\n\nfigcaption,\nfigure,\nmain {\n/* 1 */\ndisplay: block;\n}\n\nfigure {\nmargin: 1em 40px;\n}\n\nhr {\nbox-sizing: content-box;\n/* 1 */\nheight: 0;\n/* 1 */\noverflow: visible;\n/* 2 */\n}\n\npre {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\na {\nbackground-color: transparent;\n/* 1 */\n-webkit-text-decoration-skip: objects;\n/* 2 */\n}\n\nabbr[title] {\nborder-bottom: none;\n/* 1 */\ntext-decoration: underline;\n/* 2 */\ntext-decoration: underline dotted;\n/* 2 */\n}\n\nb,\nstrong {\nfont-weight: inherit;\n}\n\nb,\nstrong {\nfont-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\ndfn {\nfont-style: italic;\n}\n\nmark {\nbackground-color: #ff0;\ncolor: #000;\n}\n\nsmall {\nfont-size: 80%;\n}\n\nsub,\nsup {\nfont-size: 75%;\nline-height: 0;\nposition: relative;\nvertical-align: baseline;\n}\n\nsub {\nbottom: -0.25em;\n}\n\nsup {\ntop: -0.5em;\n}\n\naudio,\nvideo {\ndisplay: inline-block;\n}\n\naudio:not([controls]) {\ndisplay: none;\nheight: 0;\n}\n\nimg {\nborder-style: none;\n}\n\nsvg:not(:root) {\noverflow: hidden;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\nfont-family: sans-serif;\n/* 1 */\nfont-size: 100%;\n/* 1 */\nline-height: 1.15;\n/* 1 */\nmargin: 0;\n/* 2 */\n}\n\nbutton,\ninput {\n/* 1 */\noverflow: visible;\n}\n\nbutton,\nselect {\n/* 1 */\ntext-transform: none;\n}\n\nbutton,\nhtml [type=&quot;button&quot;],\n\n/* 1 */\n\n[type=&quot;reset&quot;],\n[type=&quot;submit&quot;] {\n-webkit-appearance: button;\n/* 2 */\n}\n\nbutton::-moz-focus-inner,\n[type=&quot;button&quot;]::-moz-focus-inner,\n[type=&quot;reset&quot;]::-moz-focus-inner,\n[type=&quot;submit&quot;]::-moz-focus-inner {\nborder-style: none;\npadding: 0;\n}\n\nbutton:-moz-focusring,\n[type=&quot;button&quot;]:-moz-focusring,\n[type=&quot;reset&quot;]:-moz-focusring,\n[type=&quot;submit&quot;]:-moz-focusring {\noutline: 1px dotted ButtonText;\n}\n\nfieldset {\npadding: 0.35em 0.75em 0.625em;\n}\n\nlegend {\nbox-sizing: border-box;\n/* 1 */\ncolor: inherit;\n/* 2 */\ndisplay: table;\n/* 1 */\nmax-width: 100%;\n/* 1 */\npadding: 0;\n/* 3 */\nwhite-space: normal;\n/* 1 */\n}\n\nprogress {\ndisplay: inline-block;\n/* 1 */\nvertical-align: baseline;\n/* 2 */\n}\n\ntextarea {\noverflow: auto;\n}\n\n[type=&quot;checkbox&quot;],\n[type=&quot;radio&quot;] {\nbox-sizing: border-box;\n/* 1 */\npadding: 0;\n/* 2 */\n}\n\n[type=&quot;number&quot;]::-webkit-inner-spin-button,\n[type=&quot;number&quot;]::-webkit-outer-spin-button {\nheight: auto;\n}\n\n[type=&quot;search&quot;] {\n-webkit-appearance: textfield;\n/* 1 */\noutline-offset: -2px;\n/* 2 */\n}\n\n[type=&quot;search&quot;]::-webkit-search-cancel-button,\n[type=&quot;search&quot;]::-webkit-search-decoration {\n-webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n-webkit-appearance: button;\n/* 1 */\nfont: inherit;\n/* 2 */\n}\n\ndetails,\n\n/* 1 */\n\nmenu {\ndisplay: block;\n}\n\nsummary {\ndisplay: list-item;\n}\n\ncanvas {\ndisplay: inline-block;\n}\n\ntemplate {\ndisplay: none;\n}\n\n[hidden] {\ndisplay: none;\n}\n\n\n/* reset */\n\nhtml,\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\ndiv,\ndl,\ndt,\ndd,\nul,\nol,\nli,\np,\nblockquote,\npre,\nhr,\nfigure,\ntable,\ncaption,\nth,\ntd,\nform,\nfieldset,\nlegend,\ninput,\nbutton,\ntextarea,\nmenu {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n</code></pre><h4 id=\"Phone-reset\"><a href=\"#Phone-reset\" class=\"headerlink\" title=\"Phone-reset\"></a>Phone-reset</h4><pre><code>/* normalize.css */\n\nhtml {\nline-height: 1.15;\n/* 1 */\n-ms-text-size-adjust: 100%;\n/* 2 */\n-webkit-text-size-adjust: 100%;\n/* 2 */\n}\n\nbody {\nmargin: 0;\n}\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\ndisplay: block;\n}\n\nh1 {\nfont-size: 2em;\nmargin: 0.67em 0;\n}\n\nfigcaption,\nfigure,\nmain {\n/* 1 */\ndisplay: block;\n}\n\nfigure {\nmargin: 1em 40px;\n}\n\nhr {\nbox-sizing: content-box;\n/* 1 */\nheight: 0;\n/* 1 */\noverflow: visible;\n/* 2 */\n}\n\npre {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\na {\nbackground-color: transparent;\n/* 1 */\n-webkit-text-decoration-skip: objects;\n/* 2 */\n}\n\nabbr[title] {\nborder-bottom: none;\n/* 1 */\ntext-decoration: underline;\n/* 2 */\ntext-decoration: underline dotted;\n/* 2 */\n}\n\nb,\nstrong {\nfont-weight: inherit;\n}\n\nb,\nstrong {\nfont-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\nfont-family: monospace, monospace;\n/* 1 */\nfont-size: 1em;\n/* 2 */\n}\n\ndfn {\nfont-style: italic;\n}\n\nmark {\nbackground-color: #ff0;\ncolor: #000;\n}\n\nsmall {\nfont-size: 80%;\n}\n\nsub,\nsup {\nfont-size: 75%;\nline-height: 0;\nposition: relative;\nvertical-align: baseline;\n}\n\nsub {\nbottom: -0.25em;\n}\n\nsup {\ntop: -0.5em;\n}\n\naudio,\nvideo {\ndisplay: inline-block;\n}\n\naudio:not([controls]) {\ndisplay: none;\nheight: 0;\n}\n\nimg {\nborder-style: none;\n}\n\nsvg:not(:root) {\noverflow: hidden;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\nfont-family: sans-serif;\n/* 1 */\nfont-size: 100%;\n/* 1 */\nline-height: 1.15;\n/* 1 */\nmargin: 0;\n/* 2 */\n}\n\nbutton,\ninput {\n/* 1 */\noverflow: visible;\n}\n\nbutton,\nselect {\n/* 1 */\ntext-transform: none;\n}\n\nbutton,\nhtml [type=&quot;button&quot;],\n\n/* 1 */\n\n[type=&quot;reset&quot;],\n[type=&quot;submit&quot;] {\n-webkit-appearance: button;\n/* 2 */\n}\n\nbutton::-moz-focus-inner,\n[type=&quot;button&quot;]::-moz-focus-inner,\n[type=&quot;reset&quot;]::-moz-focus-inner,\n[type=&quot;submit&quot;]::-moz-focus-inner {\nborder-style: none;\npadding: 0;\n}\n\nbutton:-moz-focusring,\n[type=&quot;button&quot;]:-moz-focusring,\n[type=&quot;reset&quot;]:-moz-focusring,\n[type=&quot;submit&quot;]:-moz-focusring {\noutline: 1px dotted ButtonText;\n}\n\nfieldset {\npadding: 0.35em 0.75em 0.625em;\n}\n\nlegend {\nbox-sizing: border-box;\n/* 1 */\ncolor: inherit;\n/* 2 */\ndisplay: table;\n/* 1 */\nmax-width: 100%;\n/* 1 */\npadding: 0;\n/* 3 */\nwhite-space: normal;\n/* 1 */\n}\n\nprogress {\ndisplay: inline-block;\n/* 1 */\nvertical-align: baseline;\n/* 2 */\n}\n\ntextarea {\noverflow: auto;\n}\n\n[type=&quot;checkbox&quot;],\n[type=&quot;radio&quot;] {\nbox-sizing: border-box;\n/* 1 */\npadding: 0;\n/* 2 */\n}\n\n[type=&quot;number&quot;]::-webkit-inner-spin-button,\n[type=&quot;number&quot;]::-webkit-outer-spin-button {\nheight: auto;\n}\n\n[type=&quot;search&quot;] {\n-webkit-appearance: textfield;\n/* 1 */\noutline-offset: -2px;\n/* 2 */\n}\n\n[type=&quot;search&quot;]::-webkit-search-cancel-button,\n[type=&quot;search&quot;]::-webkit-search-decoration {\n-webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n-webkit-appearance: button;\n/* 1 */\nfont: inherit;\n/* 2 */\n}\n\ndetails,\n\n/* 1 */\n\nmenu {\ndisplay: block;\n}\n\nsummary {\ndisplay: list-item;\n}\n\ncanvas {\ndisplay: inline-block;\n}\n\ntemplate {\ndisplay: none;\n}\n\n[hidden] {\ndisplay: none;\n}\n\n\n/* reset */\n\nhtml,\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\ndiv,\ndl,\ndt,\ndd,\nul,\nol,\nli,\np,\nblockquote,\npre,\nhr,\nfigure,\ntable,\ncaption,\nth,\ntd,\nform,\nfieldset,\nlegend,\ninput,\nbutton,\ntextarea,\nmenu {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n\nhtml,\nbody {\n/* 禁止选中文本 */\n-webkit-user-select: none;\nuser-select: none;\nfont: Oswald, &apos;Open Sans&apos;, Helvetica, Arial, sans-serif\n}\n\n\n/* 禁止长按链接与图片弹出菜单 */\n\na,\nimg {\n-webkit-touch-callout: none;\n}\n\n\n/*ios android去除自带阴影的样式*/\n\na,\ninput {\n-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\ninput[type=&quot;text&quot;] {\n-webkit-appearance: none;\n}\n</code></pre><h4 id=\"公共样式提取\"><a href=\"#公共样式提取\" class=\"headerlink\" title=\"公共样式提取\"></a>公共样式提取</h4><pre><code>/* 禁止选中文本 */\n.usn{\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n    -o-user-select:none;\n    user-select:none;\n}\n/* 浮动 */\n.fl { float: left; }\n.fr { float: right; }\n.cf { zoom: 1; }\n.cf:after {\n    content:&quot;.&quot;;\n    display:block;\n    clear:both;\n    visibility:hidden;\n    height:0;\n    overflow:hidden;\n}\n\n/* 元素类型 */\n.db { display: block; }\n.dn { display: none; }\n.di { display: inline }\n.dib {display: inline-block;}\n.transparent { opacity: 0 }\n\n\n/*文字排版、颜色*/\n.f12 { font-size:12px }\n.f14 { font-size:14px }\n.f16 { font-size:16px }\n.f18 { font-size:18px }\n.f20 { font-size:20px }\n.fb { font-weight:bold }\n.fn { font-weight:normal }\n.t2 { text-indent:2em }\n.red,a.red { color:#cc0031 }\n.darkblue,a.darkblue { color:#039 }\n.gray,a.gray { color:#878787 }\n.lh150 { line-height:150% }\n.lh180 { line-height:180% }\n.lh200 { line-height:200% }\n.unl { text-decoration:underline; }\n.no_unl { text-decoration:none; }\n.tl { text-align: left; }\n.tc { text-align: center; }\n.tr { text-align: right; }\n.tj { text-align: justify; text-justify: inter-ideograph; }\n.wn { /* 强制不换行 */\n    word-wrap:normal;\n    white-space:nowrap;\n}\n.wb { /* 强制换行 */\n    white-space:normal;\n    word-wrap:break-word;\n    word-break:break-all;\n}\n.wp { /* 保持空白序列*/\n    overflow:hidden;text-align:left;white-space:pre-wrap;word-wrap:break-word;word-break:break-all;\n}\n.wes { /* 多出部分用省略号表示 , 用于一行 */\n    overflow:hidden;\n    word-wrap:normal;\n    white-space:nowrap;\n    text-overflow:ellipsis;\n}\n.wes-2 { /* 适用于webkit内核和移动端 */\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n} \n.wes-3 {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3;\n    overflow: hidden;\n}\n.wes-4 {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;\n    overflow: hidden;\n}\n\n/* 溢出样式 */\n.ofh { overflow: hidden; }\n.ofs {overflow: scroll; }\n.ofa {overflow: auto; }\n.ofv {overflow: visible; }\n\n/* 定位方式 */\n.ps {position: static; }\n.pr {position: relative;zoom:1; }\n.pa {position: absolute; }\n.pf {position: fixed; }\n\n\n/* 垂直对齐方式 */\n.vt {vertical-align: top; }\n.vm {vertical-align: middle; }\n.vb {vertical-align: bottom; }\n\n\n/* 鼠标样式 */\n.csd {cursor: default; }\n.csp {cursor: pointer; }\n.csh {cursor: help; }\n.csm {cursor: move; }\n\n/* flex布局 */\n.df-sb {\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n}\n.df-sa {\n    display:flex;\n    align-items: center;\n    justify-content: space-around;\n}\n\n/* 垂直居中 */\n.df-c {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.tb-c {\n    text-align:center;\n    display:table-cell;\n    vertical-align:middle;\n}\n.ts-c {\n    position: absolute;\n    left: 50%; top: 50%;\n    transform: translate(-50%, -50%);\n}\n.ts-mc {\n    position: absolute;\n    left: 0;right: 0;\n    bottom: 0; top: 0;\n    margin: auto;\n}\n\n/* 辅助 */\n.mask-fixed-wrapper {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    left:0;top:0;\n    background: rgba(0, 0, 0, 0.65);\n    z-index: 999;\n}\n.bg-cover {\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n}\n.bg-cover-all {\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    background-position: center center;\n}\n</code></pre>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cji0akoqa0002kn3o6z440paz","tag_id":"cji0akoqf0005kn3oi9ltjvgk","_id":"cji0akoqk0006kn3oope7mlot"},{"post_id":"cji0akoy30007kn3oxxxh6d61","tag_id":"cji0akoy9000bkn3okkgps9rl","_id":"cji0akoye000fkn3o5b4scfoe"},{"post_id":"cji0akoy50009kn3oyvsfxvx0","tag_id":"cji0akoyd000ekn3ojmhpyuny","_id":"cji0akoyf000hkn3ogifik9r3"},{"post_id":"cji0akoy9000ckn3ogcb5i2ob","tag_id":"cji0akoye000gkn3on5cmk6cm","_id":"cji0akoyi000jkn3oi1gszodk"},{"post_id":"cji0akoyc000dkn3omj8kp2ir","tag_id":"cji0akoyd000ekn3ojmhpyuny","_id":"cji0akoyj000kkn3ox6uczkvc"},{"post_id":"cji0akp4h000lkn3odz9cotjb","tag_id":"cji0akoyd000ekn3ojmhpyuny","_id":"cji0akp4l000mkn3o5cyyqpf3"}],"Tag":[{"name":"markdown 语法","_id":"cji0akoqf0005kn3oi9ltjvgk"},{"name":"前端框架学习","_id":"cji0akoy9000bkn3okkgps9rl"},{"name":"前端js学习","_id":"cji0akoyd000ekn3ojmhpyuny"},{"name":"node.js学习","_id":"cji0akoye000gkn3on5cmk6cm"}]}}